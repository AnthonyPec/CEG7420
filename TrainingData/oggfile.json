{
  "_Rb_tree_iterator": {
    "void": 1, 
    "_Rb_tree_iterator<std::pair<const_unsigned_int,_TagLib::ByteVector>_> *": 1, 
    "params": 2, 
    "return;": 1, 
    "_Base_ptr": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "operator==": {
    "_Self *": 2, 
    "params": 2, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "operator--": {
    "params": 1, 
    "_List_iterator<TagLib::Ogg::Page_*> *": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "deallocate": {
    "pointer": 1, 
    "void": 1, 
    "size_type": 1, 
    "delete(.*)": 1, 
    "new_allocator<std::_List_node<TagLib::ByteVector>_> *": 1, 
    "params": 3, 
    "delete(.*) param": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "readPages": {
    "if (.* < \\d*)": 2, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 2, 
    "label": "read", 
    "File *": 1, 
    "uint": 1, 
    "params": 2, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "while(.*)": 1, 
    ".*\\-": 3, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 5, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 2, 
    "= .*\\+": 1
  }, 
  "_M_copy<std::_Rb_tree<unsigned_int,_std::pair<const_unsigned_int,_TagLib::ByteVector>,_std::_Select1st<std::pair<const_unsigned_int,_TagLib::ByteVector>_>,_std::less<unsigned_int>,_std::allocator<std::pair<const_unsigned_int,_TagLib::ByteVector>_>_>::_Alloc_node>": {
    "label": "copy", 
    "params": 4, 
    "if (.*) param": 1, 
    "_Const_Link_type": 1, 
    "while(.*)": 1, 
    "_Base_ptr": 1, 
    "_Alloc_node *": 1, 
    ".*\\-": 13, 
    "if (.*)": 2, 
    "_Rb_tree<unsigned_int,_std::pair<const_unsigned_int,_TagLib::ByteVector>,_std::_Select1st<std::pair<const_unsigned_int,_TagLib::ByteVector>_>,_std::less<unsigned_int>,_std::allocator<std::pair<const_unsigned_int,_TagLib::ByteVector>_>_> *": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "~File": {
    "void": 1, 
    "label": "~", 
    "File *": 1, 
    "params": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "_M_get_Node_allocator": {
    "label": "get", 
    "params": 1, 
    "_List_base<TagLib::ByteVector,_std::allocator<TagLib::ByteVector>_> *": 1, 
    "return": 1
  }, 
  "construct": {
    "pointer": 1, 
    "void": 1, 
    "params": 3, 
    "return;": 1, 
    "ByteVector *": 1, 
    "new_allocator<TagLib::ByteVector> *": 1, 
    "return": 0
  }, 
  "ListPrivateBase": {
    "void": 1, 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 2, 
    "return": 0, 
    ".*\\- param": 1, 
    "ListPrivateBase *": 1
  }, 
  "_M_clear": {
    "void": 1, 
    "while(.*) param": 1, 
    "params": 1, 
    "_List_base<TagLib::ByteVector,_std::allocator<TagLib::ByteVector>_> *": 1, 
    "return;": 1, 
    "while(.*)": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "_M_inc_size": {
    "void": 1, 
    "size_t": 1, 
    "params": 2, 
    ".*\\+ param": 1, 
    "_List_base<TagLib::ByteVector,_std::allocator<TagLib::ByteVector>_> *": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "= .*\\+ param": 1, 
    "return": 0, 
    ".*\\+": 1, 
    ".*\\- param": 1, 
    "= .*\\+": 1
  }, 
  "allocator": {
    "void": 1, 
    "params": 2, 
    "allocator<std::_List_node<TagLib::ByteVector>_> *": 2, 
    "return;": 1, 
    "return": 0
  }, 
  "_Rb_tree": {
    "void": 1, 
    "params": 2, 
    "return;": 1, 
    ".*\\-": 1, 
    "if (.*)": 1, 
    "_Rb_tree<unsigned_int,_std::pair<const_unsigned_int,_TagLib::ByteVector>,_std::_Select1st<std::pair<const_unsigned_int,_TagLib::ByteVector>_>,_std::less<unsigned_int>,_std::allocator<std::pair<const_unsigned_int,_TagLib::ByteVector>_>_> *": 2, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "~ListPrivate": {
    "void": 1, 
    "label": "~", 
    "ListPrivate<TagLib::Ogg::Page_*> *": 1, 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "_M_rightmost": {
    "params": 1, 
    ".*\\-": 1, 
    "_Rb_tree<unsigned_int,_std::pair<const_unsigned_int,_TagLib::ByteVector>,_std::_Select1st<std::pair<const_unsigned_int,_TagLib::ByteVector>_>,_std::less<unsigned_int>,_std::allocator<std::pair<const_unsigned_int,_TagLib::ByteVector>_>_> *": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "operator->": {
    "params": 1, 
    "int": 1, 
    "_Rb_tree_const_iterator<std::pair<const_unsigned_int,_TagLib::ByteVector>_> *": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "_M_lower_bound": {
    "_Link_type": 1, 
    "uint *": 1, 
    "params": 4, 
    "while(.*)": 1, 
    "_Base_ptr": 1, 
    ".*\\-": 3, 
    "if (.*)": 1, 
    "_Rb_tree<unsigned_int,_std::pair<const_unsigned_int,_TagLib::ByteVector>,_std::_Select1st<std::pair<const_unsigned_int,_TagLib::ByteVector>_>,_std::less<unsigned_int>,_std::allocator<std::pair<const_unsigned_int,_TagLib::ByteVector>_>_> *": 1, 
    "return": 1
  }, 
  "_Alloc_node": {
    "void": 1, 
    "params": 2, 
    "return;": 1, 
    "_Alloc_node *": 1, 
    ".*\\-": 1, 
    "_Rb_tree<unsigned_int,_std::pair<const_unsigned_int,_TagLib::ByteVector>,_std::_Select1st<std::pair<const_unsigned_int,_TagLib::ByteVector>_>,_std::less<unsigned_int>,_std::allocator<std::pair<const_unsigned_int,_TagLib::ByteVector>_>_> *": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "setAutoDelete": {
    "void": 1, 
    "bool": 1, 
    "label": "set", 
    "params": 2, 
    "List<TagLib::Ogg::Page_*> *": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "_M_insert_unique_<std::_Rb_tree<unsigned_int,_std::pair<const_unsigned_int,_TagLib::ByteVector>,_std::_Select1st<std::pair<const_unsigned_int,_TagLib::ByteVector>_>,_std::less<unsigned_int>,_std::allocator<std::pair<const_unsigned_int,_TagLib::ByteVector>_>_>::_Alloc_node>": {
    "const_iterator": 1, 
    "label": "select", 
    "params": 4, 
    "value_type *": 1, 
    "_Alloc_node *": 1, 
    ".*\\-": 1, 
    "if (.*)": 1, 
    "_Rb_tree<unsigned_int,_std::pair<const_unsigned_int,_TagLib::ByteVector>,_std::_Select1st<std::pair<const_unsigned_int,_TagLib::ByteVector>_>,_std::less<unsigned_int>,_std::allocator<std::pair<const_unsigned_int,_TagLib::ByteVector>_>_> *": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "operator*": {
    "params": 1, 
    "_List_iterator<TagLib::Ogg::Page_*> *": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "~map": {
    "void": 1, 
    "label": "~", 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "map<unsigned_int,_TagLib::ByteVector,_std::less<unsigned_int>,_std::allocator<std::pair<const_unsigned_int,_TagLib::ByteVector>_>_> *": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "_M_const_cast": {
    "params": 1, 
    "_List_iterator<TagLib::ByteVector> *": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "_List_iterator": {
    "void": 1, 
    "params": 2, 
    "return;": 1, 
    "_List_iterator<TagLib::ByteVector> *": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1, 
    "_List_node_base *": 1
  }, 
  "new_allocator": {
    "void": 1, 
    "new_allocator<std::_List_node<TagLib::ByteVector>_> *": 1, 
    "params": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "destroy": {
    "pointer": 1, 
    "void": 1, 
    "label": "destroy", 
    "params": 2, 
    "return;": 1, 
    "new_allocator<TagLib::ByteVector> *": 1, 
    "return": 0
  }, 
  "__addressof<TagLib::Ogg::Page_*const>": {
    "label": "add", 
    "params": 1, 
    "return": 1, 
    "Page * *": 1
  }, 
  "packet": {
    "if (.* != 0)": 1, 
    "if (.* != 0) param": 1, 
    "if (.* < \\d*)": 1, 
    "break": 2, 
    "if (.* < .*)": 1, 
    "File *": 1, 
    "uint": 1, 
    "params": 2, 
    ".*\\+ 0x.*": 2, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "while(.*)": 2, 
    ".*\\-": 2, 
    "= .*\\+ param": 1, 
    "if (.*)": 4, 
    ".*\\+ 0x.* param": 1, 
    "return": 1, 
    ".*\\+": 3, 
    "= .*\\+": 1, 
    ".*\\- param": 1
  }, 
  "allocator<std::_List_node<TagLib::Ogg::Page_*>_>": {
    "void": 1, 
    "allocator<TagLib::Ogg::Page_*> *": 1, 
    "allocator<std::_List_node<TagLib::Ogg::Page_*>_> *": 1, 
    "params": 2, 
    "return;": 1, 
    "return": 0
  }, 
  "~List": {
    "void": 1, 
    "delete(.*)": 1, 
    "label": "~", 
    "params": 1, 
    "delete(.*) param": 1, 
    "List<TagLib::Ogg::Page_*> *": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "contains": {
    "uint *": 1, 
    "params": 2, 
    "Map<unsigned_int,_TagLib::ByteVector> *": 1, 
    ".*\\-": 2, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "_S_do_it": {
    "params": 2, 
    "allocator<std::_List_node<TagLib::ByteVector>_> *": 2, 
    "return": 1
  }, 
  "allocate": {
    "if (.* < \\d*)": 1, 
    "size_type": 1, 
    "if (.* < .*)": 1, 
    "new_allocator<std::_List_node<TagLib::ByteVector>_> *": 1, 
    "params": 3, 
    "int": 1, 
    "if (.*) param": 1, 
    "void *": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "size": {
    "params": 1, 
    ".*\\-": 1, 
    "_Rb_tree<unsigned_int,_std::pair<const_unsigned_int,_TagLib::ByteVector>,_std::_Select1st<std::pair<const_unsigned_int,_TagLib::ByteVector>_>,_std::less<unsigned_int>,_std::allocator<std::pair<const_unsigned_int,_TagLib::ByteVector>_>_> *": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "~MapPrivate": {
    "void": 1, 
    "label": "~", 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1, 
    "MapPrivate<unsigned_int,_TagLib::ByteVector> *": 1
  }, 
  "_M_clone_node<std::_Rb_tree<unsigned_int,_std::pair<const_unsigned_int,_TagLib::ByteVector>,_std::_Select1st<std::pair<const_unsigned_int,_TagLib::ByteVector>_>,_std::less<unsigned_int>,_std::allocator<std::pair<const_unsigned_int,_TagLib::ByteVector>_>_>::_Alloc_node>": {
    "label": "select", 
    "params": 3, 
    "_Const_Link_type": 1, 
    "_Alloc_node *": 1, 
    ".*\\-": 3, 
    "_Rb_tree<unsigned_int,_std::pair<const_unsigned_int,_TagLib::ByteVector>,_std::_Select1st<std::pair<const_unsigned_int,_TagLib::ByteVector>_>,_std::less<unsigned_int>,_std::allocator<std::pair<const_unsigned_int,_TagLib::ByteVector>_>_> *": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "_S_right": {
    "params": 1, 
    "_Const_Base_ptr": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "_M_check_equal_allocators": {
    "void": 1, 
    "list<TagLib::ByteVector,_std::allocator<TagLib::ByteVector>_> *": 2, 
    "abort(.*)": 1, 
    "label": "check", 
    "params": 2, 
    "return;": 1, 
    ".*\\-": 2, 
    "if (.*)": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "key_comp": {
    "params": 1, 
    "int": 1, 
    "_Rb_tree<unsigned_int,_std::pair<const_unsigned_int,_TagLib::ByteVector>,_std::_Select1st<std::pair<const_unsigned_int,_TagLib::ByteVector>_>,_std::less<unsigned_int>,_std::allocator<std::pair<const_unsigned_int,_TagLib::ByteVector>_>_> *": 1, 
    "return": 1
  }, 
  "_List_impl": {
    "void": 1, 
    "_List_impl *": 1, 
    "_Node_alloc_type *": 1, 
    "params": 2, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "begin": {
    "params": 1, 
    ".*\\+ param": 1, 
    "return": 1, 
    "List<TagLib::ByteVector> *": 1, 
    ".*\\+": 1
  }, 
  "Map": {
    "void": 1, 
    "params": 1, 
    "Map<unsigned_int,_TagLib::ByteVector> *": 1, 
    "return;": 1, 
    ".*\\-": 2, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "~list": {
    "void": 1, 
    "list<TagLib::ByteVector,_std::allocator<TagLib::ByteVector>_> *": 1, 
    "label": "~", 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "_M_create_node": {
    "list<TagLib::ByteVector,_std::allocator<TagLib::ByteVector>_> *": 1, 
    "label": "create", 
    "params": 2, 
    "value_type *": 1, 
    ".*\\-": 2, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "operator[]": {
    "params": 2, 
    ".*\\-": 2, 
    "if (.*)": 2, 
    "key_type *": 1, 
    "map<unsigned_int,_TagLib::ByteVector,_std::less<unsigned_int>,_std::allocator<std::pair<const_unsigned_int,_TagLib::ByteVector>_>_> *": 1, 
    "return": 1
  }, 
  "_GLOBAL__sub_I_oggfile.cpp": {
    "void": 1, 
    "params": 0, 
    "return;": 1, 
    "return": 0
  }, 
  "_M_erase": {
    "void": 1, 
    "list<TagLib::ByteVector,_std::allocator<TagLib::ByteVector>_> *": 1, 
    "params": 2, 
    "iterator": 1, 
    "return;": 1, 
    ".*\\-": 3, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "operator++": {
    "_List_const_iterator<TagLib::ByteVector> *": 1, 
    "params": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "save": {
    "break": 1, 
    "label": "save", 
    "File *": 1, 
    "params": 1, 
    "if (.* == 0)": 1, 
    "while(.*)": 1, 
    ".*\\-": 6, 
    "if (.*)": 2, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "_M_insert": {
    "void": 1, 
    "list<TagLib::ByteVector,_std::allocator<TagLib::ByteVector>_> *": 1, 
    "params": 3, 
    "value_type *": 1, 
    "iterator": 1, 
    "return;": 1, 
    ".*\\-": 2, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "__addressof<const_TagLib::ByteVector>": {
    "label": "add", 
    "params": 1, 
    "ByteVector *": 1, 
    "return": 1
  }, 
  "__cxx_global_var_init": {
    "void": 1, 
    "label": "init", 
    "params": 0, 
    "return;": 1, 
    "return": 0
  }, 
  "~FilePrivate": {
    "void": 1, 
    "label": "~", 
    "params": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "return;": 1, 
    "FilePrivate *": 1, 
    ".*\\-": 6, 
    "if (.*)": 2, 
    "return": 0, 
    ".*\\- param": 1, 
    ".*\\+": 2
  }, 
  "~new_allocator": {
    "void": 1, 
    "label": "~", 
    "params": 1, 
    "return;": 1, 
    "new_allocator<TagLib::ByteVector> *": 1, 
    "return": 0
  }, 
  "map": {
    "void": 1, 
    "params": 2, 
    "return;": 1, 
    ".*\\-": 1, 
    "map<unsigned_int,_TagLib::ByteVector,_std::less<unsigned_int>,_std::allocator<std::pair<const_unsigned_int,_TagLib::ByteVector>_>_> *": 2, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "_List_node_header": {
    "void": 1, 
    "params": 1, 
    "return;": 1, 
    "_List_node_header *": 1, 
    "return": 0
  }, 
  "__clang_call_terminate": {
    "void": 1, 
    "params": 0, 
    "return": 0
  }, 
  "erase": {
    "list<TagLib::ByteVector,_std::allocator<TagLib::ByteVector>_> *": 1, 
    "params": 2, 
    "iterator": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "_M_insert_unique_": {
    "const_iterator": 1, 
    "params": 3, 
    "value_type *": 1, 
    "_Rb_tree<unsigned_int,_std::pair<const_unsigned_int,_TagLib::ByteVector>,_std::_Select1st<std::pair<const_unsigned_int,_TagLib::ByteVector>_>,_std::less<unsigned_int>,_std::allocator<std::pair<const_unsigned_int,_TagLib::ByteVector>_>_> *": 1, 
    "return": 1
  }, 
  "_M_end": {
    "params": 1, 
    ".*\\-": 1, 
    "_Rb_tree<unsigned_int,_std::pair<const_unsigned_int,_TagLib::ByteVector>,_std::_Select1st<std::pair<const_unsigned_int,_TagLib::ByteVector>_>,_std::less<unsigned_int>,_std::allocator<std::pair<const_unsigned_int,_TagLib::ByteVector>_>_> *": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "allocator<std::_Rb_tree_node<std::pair<const_unsigned_int,_TagLib::ByteVector>_>_>": {
    "allocator<std::pair<const_unsigned_int,_TagLib::ByteVector>_> *": 1, 
    "allocator<std::_Rb_tree_node<std::pair<const_unsigned_int,_TagLib::ByteVector>_>_> *": 1, 
    "void": 1, 
    "params": 2, 
    "return;": 1, 
    "return": 0
  }, 
  "~_Rb_tree_impl": {
    "void": 1, 
    "label": "~", 
    "params": 1, 
    "_Rb_tree_impl<std::less<unsigned_int>,_false> *": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "~allocator": {
    "void": 1, 
    "label": "~", 
    "params": 1, 
    "allocator<std::_List_node<TagLib::ByteVector>_> *": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "~_List_base": {
    "void": 1, 
    "label": "~", 
    "params": 1, 
    "_List_base<TagLib::ByteVector,_std::allocator<TagLib::ByteVector>_> *": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "_S_select_on_copy": {
    "label": "copy", 
    "params": 1, 
    "allocator<std::_List_node<TagLib::ByteVector>_> *": 1, 
    "return": 1
  }, 
  "_M_begin": {
    "params": 1, 
    ".*\\-": 1, 
    "_Rb_tree<unsigned_int,_std::pair<const_unsigned_int,_TagLib::ByteVector>,_std::_Select1st<std::pair<const_unsigned_int,_TagLib::ByteVector>_>,_std::less<unsigned_int>,_std::allocator<std::pair<const_unsigned_int,_TagLib::ByteVector>_>_> *": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "_M_drop_node": {
    "_Link_type": 1, 
    "void": 1, 
    "params": 2, 
    "return;": 1, 
    "_Rb_tree<unsigned_int,_std::pair<const_unsigned_int,_TagLib::ByteVector>,_std::_Select1st<std::pair<const_unsigned_int,_TagLib::ByteVector>_>,_std::less<unsigned_int>,_std::allocator<std::pair<const_unsigned_int,_TagLib::ByteVector>_>_> *": 1, 
    "return": 0
  }, 
  "_M_copy": {
    "label": "copy", 
    "params": 2, 
    "_Rb_tree<unsigned_int,_std::pair<const_unsigned_int,_TagLib::ByteVector>,_std::_Select1st<std::pair<const_unsigned_int,_TagLib::ByteVector>_>,_std::less<unsigned_int>,_std::allocator<std::pair<const_unsigned_int,_TagLib::ByteVector>_>_> *": 2, 
    "return": 1
  }, 
  "setPacket": {
    "void": 1, 
    "label": "set", 
    "File *": 1, 
    "uint": 1, 
    "params": 3, 
    "return;": 1, 
    "ByteVector *": 1, 
    ".*\\-": 2, 
    "if (.*)": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "~pair": {
    "void": 1, 
    "pair<const_unsigned_int,_TagLib::ByteVector> *": 1, 
    "label": "~", 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "_M_get_insert_unique_pos": {
    "if (.* != 0)": 1, 
    "label": "get", 
    "params": 2, 
    "while(.*)": 1, 
    "goto": 1, 
    ".*\\-": 3, 
    "if (.*)": 4, 
    "key_type *": 1, 
    "_Rb_tree<unsigned_int,_std::pair<const_unsigned_int,_TagLib::ByteVector>,_std::_Select1st<std::pair<const_unsigned_int,_TagLib::ByteVector>_>,_std::less<unsigned_int>,_std::allocator<std::pair<const_unsigned_int,_TagLib::ByteVector>_>_> *": 1, 
    "return": 1
  }, 
  "_List_base": {
    "void": 1, 
    "_Node_alloc_type *": 1, 
    "params": 2, 
    "_List_base<TagLib::ByteVector,_std::allocator<TagLib::ByteVector>_> *": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "_M_leftmost": {
    "params": 1, 
    ".*\\-": 1, 
    "_Rb_tree<unsigned_int,_std::pair<const_unsigned_int,_TagLib::ByteVector>,_std::_Select1st<std::pair<const_unsigned_int,_TagLib::ByteVector>_>,_std::less<unsigned_int>,_std::allocator<std::pair<const_unsigned_int,_TagLib::ByteVector>_>_> *": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "empty": {
    "list<TagLib::ByteVector,_std::allocator<TagLib::ByteVector>_> *": 1, 
    "params": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "_M_transfer": {
    "void": 1, 
    "list<TagLib::ByteVector,_std::allocator<TagLib::ByteVector>_> *": 1, 
    "params": 4, 
    "iterator": 3, 
    "return;": 1, 
    "return": 0
  }, 
  "FilePrivate": {
    "void": 1, 
    "params": 1, 
    "return;": 1, 
    "FilePrivate *": 1, 
    ".*\\-": 5, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "find": {
    "params": 2, 
    "if (.*)": 2, 
    "key_type *": 1, 
    "_Rb_tree<unsigned_int,_std::pair<const_unsigned_int,_TagLib::ByteVector>,_std::_Select1st<std::pair<const_unsigned_int,_TagLib::ByteVector>_>,_std::less<unsigned_int>,_std::allocator<std::pair<const_unsigned_int,_TagLib::ByteVector>_>_> *": 1, 
    "return": 1
  }, 
  "List": {
    "void": 1, 
    "params": 1, 
    "List<TagLib::Ogg::Page_*> *": 1, 
    "return;": 1, 
    ".*\\-": 2, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "_M_destroy_node": {
    "_Link_type": 1, 
    "void": 1, 
    "label": "destroy", 
    "params": 2, 
    "return;": 1, 
    "_Rb_tree<unsigned_int,_std::pair<const_unsigned_int,_TagLib::ByteVector>,_std::_Select1st<std::pair<const_unsigned_int,_TagLib::ByteVector>_>,_std::less<unsigned_int>,_std::allocator<std::pair<const_unsigned_int,_TagLib::ByteVector>_>_> *": 1, 
    "return": 0
  }, 
  "__addressof<std::pair<const_unsigned_int,_TagLib::ByteVector>_>": {
    "pair<const_unsigned_int,_TagLib::ByteVector> *": 1, 
    "label": "add", 
    "params": 1, 
    "int": 1, 
    "return": 1
  }, 
  "_M_init": {
    "_List_base<TagLib::Ogg::Page_*,_std::allocator<TagLib::Ogg::Page_*>_> *": 1, 
    "void": 1, 
    "label": "init", 
    "params": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "ListPrivate": {
    "ListPrivate<TagLib::ByteVector> *": 1, 
    "void": 1, 
    "list<TagLib::ByteVector,_std::allocator<TagLib::ByteVector>_> *": 1, 
    "params": 2, 
    "return;": 1, 
    ".*\\-": 2, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "operator!=": {
    "_Self *": 2, 
    "params": 2, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "_Rb_tree_header": {
    "_Rb_tree_header *": 1, 
    "void": 1, 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "allocator<std::_List_node<TagLib::ByteVector>_>": {
    "void": 1, 
    "allocator<TagLib::ByteVector> *": 1, 
    "params": 2, 
    "allocator<std::_List_node<TagLib::ByteVector>_> *": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "__addressof<const_std::pair<const_unsigned_int,_TagLib::ByteVector>_>": {
    "pair<const_unsigned_int,_TagLib::ByteVector> *": 1, 
    "label": "add", 
    "params": 1, 
    "int": 1, 
    "return": 1
  }, 
  "__iterator_category<std::_List_iterator<TagLib::ByteVector>_>": {
    "params": 1, 
    "_List_iterator<TagLib::ByteVector> *": 1, 
    "return": 1
  }, 
  "MapPrivate": {
    "void": 1, 
    "params": 2, 
    "return;": 1, 
    ".*\\-": 2, 
    "map<unsigned_int,_TagLib::ByteVector,_std::less<unsigned_int>,_std::allocator<std::pair<const_unsigned_int,_TagLib::ByteVector>_>_> *": 1, 
    "return": 0, 
    ".*\\- param": 1, 
    "MapPrivate<unsigned_int,_TagLib::ByteVector> *": 1
  }, 
  "nextPacketIndex": {
    "uint": 1, 
    "params": 1, 
    "int": 1, 
    "if (.* == 0)": 1, 
    "Page *": 1, 
    ".*\\-": 1, 
    "if (.*)": 1, 
    "return": 1, 
    ".*\\+": 2, 
    "= .*\\+": 2
  }, 
  "count": {
    "RefCounterOld *": 1, 
    "label": "count", 
    "params": 1, 
    "int": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "get_allocator": {
    "list<TagLib::ByteVector,_std::allocator<TagLib::ByteVector>_> *": 1, 
    "label": "get", 
    "params": 1, 
    "return": 1
  }, 
  "list": {
    "void": 1, 
    "list<TagLib::ByteVector,_std::allocator<TagLib::ByteVector>_> *": 2, 
    "params": 2, 
    "return;": 1, 
    ".*\\-": 2, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "_S_key": {
    "uint": 1, 
    "params": 1, 
    "int": 1, 
    "_Const_Link_type": 1, 
    "return": 1
  }, 
  "max_size": {
    "new_allocator<std::_List_node<TagLib::ByteVector>_> *": 1, 
    "params": 1, 
    "return": 1
  }, 
  "_M_get_size": {
    "label": "get", 
    "params": 1, 
    "_List_base<TagLib::ByteVector,_std::allocator<TagLib::ByteVector>_> *": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "_M_get_node": {
    "label": "get", 
    "params": 1, 
    "int": 1, 
    "_List_base<TagLib::ByteVector,_std::allocator<TagLib::ByteVector>_> *": 1, 
    "return": 1
  }, 
  "_M_set_size": {
    "void": 1, 
    "label": "set", 
    "size_t": 1, 
    "params": 2, 
    "_List_base<TagLib::ByteVector,_std::allocator<TagLib::ByteVector>_> *": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "_List_const_iterator": {
    "void": 1, 
    "iterator *": 1, 
    "_List_const_iterator<TagLib::ByteVector> *": 1, 
    "params": 2, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "_Rb_tree_key_compare": {
    "void": 1, 
    "label": "compare", 
    "params": 2, 
    "return;": 1, 
    "_Rb_tree_key_compare<std::less<unsigned_int>_> *": 1, 
    "less<unsigned_int> *": 1, 
    "return": 0
  }, 
  "__advance<std::_List_iterator<TagLib::ByteVector>,_int>": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "void": 1, 
    "if (.* < .*)": 1, 
    "params": 2, 
    "int": 1, 
    "if (.*) param": 1, 
    "return;": 1, 
    "while(.*)": 2, 
    "_List_iterator<TagLib::ByteVector> *": 1, 
    ".*\\-": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 1, 
    "return": 0, 
    ".*\\+": 2, 
    "= .*\\+": 2
  }, 
  "writePacket": {
    "if (.* != 0)": 1, 
    "if (.* < .*)": 2, 
    "File *": 1, 
    ".*\\+ 0x.*": 1, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 2, 
    "while(.*)": 4, 
    ".*\\-": 4, 
    "if (.* < .*) param": 1, 
    ".*\\+": 3, 
    "if (.* != 0) param": 1, 
    "if (.* < \\d*)": 2, 
    "if (.* < \\d*) param": 1, 
    "void": 1, 
    "break": 3, 
    "label": "write", 
    "params": 3, 
    "uint": 1, 
    "if (.*) param": 1, 
    "return;": 1, 
    "ByteVector *": 1, 
    "if (.*)": 8, 
    ".*\\+ 0x.* param": 1, 
    ".*\\- param": 1, 
    "return": 0, 
    "= .*\\+": 2
  }, 
  "lastPageHeader": {
    "if (.* < \\d*)": 1, 
    "if (.* < .*)": 1, 
    "File *": 1, 
    "params": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    ".*\\-": 3, 
    "if (.*)": 3, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "File": {
    "void": 1, 
    "File *": 1, 
    "params": 2, 
    "return;": 1, 
    ".*\\-": 2, 
    "IOStream *": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "list<std::_List_const_iterator<TagLib::ByteVector>_>": {
    "void": 1, 
    "list<TagLib::ByteVector,_std::allocator<TagLib::ByteVector>_> *": 1, 
    "_List_const_iterator<TagLib::ByteVector>": 2, 
    "params": 4, 
    "allocator_type *": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "RefCounterOld": {
    "void": 1, 
    "RefCounterOld *": 1, 
    "label": "count", 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "deref": {
    "RefCounterOld *": 1, 
    "params": 1, 
    ".*\\-": 2, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "~Map": {
    "void": 1, 
    "delete(.*)": 1, 
    "label": "~", 
    "params": 1, 
    "delete(.*) param": 1, 
    "Map<unsigned_int,_TagLib::ByteVector> *": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "~_Rb_tree": {
    "void": 1, 
    "label": "~", 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "_Rb_tree<unsigned_int,_std::pair<const_unsigned_int,_TagLib::ByteVector>,_std::_Select1st<std::pair<const_unsigned_int,_TagLib::ByteVector>_>,_std::less<unsigned_int>,_std::allocator<std::pair<const_unsigned_int,_TagLib::ByteVector>_>_> *": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "insert<std::_List_const_iterator<TagLib::ByteVector>_>": {
    "void": 1, 
    "list<TagLib::ByteVector,_std::allocator<TagLib::ByteVector>_> *": 1, 
    "_List_const_iterator<TagLib::ByteVector>": 2, 
    "params": 4, 
    "iterator": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "__addressof<TagLib::Ogg::Page_*>": {
    "label": "add", 
    "params": 1, 
    "return": 1, 
    "Page * *": 1
  }, 
  "~_List_impl": {
    "void": 1, 
    "_List_impl *": 1, 
    "label": "~", 
    "params": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "back": {
    "list<TagLib::Ogg::Page_*,_std::allocator<TagLib::Ogg::Page_*>_> *": 1, 
    "params": 1, 
    "return": 1
  }, 
  "insert": {
    "params": 3, 
    "value_type *": 1, 
    "iterator": 1, 
    ".*\\-": 1, 
    "map<unsigned_int,_TagLib::ByteVector,_std::less<unsigned_int>,_std::allocator<std::pair<const_unsigned_int,_TagLib::ByteVector>_>_> *": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "_M_valptr": {
    "params": 1, 
    "_List_node<TagLib::ByteVector> *": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "push_back": {
    "void": 1, 
    "list<TagLib::ByteVector,_std::allocator<TagLib::ByteVector>_> *": 1, 
    "params": 2, 
    "value_type *": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "_M_get_insert_hint_unique_pos": {
    "if (.* != 0)": 1, 
    "const_iterator": 1, 
    "label": "get", 
    "params": 3, 
    ".*\\-": 5, 
    "if (.*)": 11, 
    "key_type *": 1, 
    "_Rb_tree<unsigned_int,_std::pair<const_unsigned_int,_TagLib::ByteVector>,_std::_Select1st<std::pair<const_unsigned_int,_TagLib::ByteVector>_>,_std::less<unsigned_int>,_std::allocator<std::pair<const_unsigned_int,_TagLib::ByteVector>_>_> *": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "_M_initialize_dispatch<std::_List_const_iterator<TagLib::ByteVector>_>": {
    "void": 1, 
    "list<TagLib::ByteVector,_std::allocator<TagLib::ByteVector>_> *": 1, 
    "_List_const_iterator<TagLib::ByteVector>": 2, 
    "label": "init", 
    "params": 3, 
    "return;": 1, 
    "while(.*)": 1, 
    "return": 0
  }, 
  "_M_initialize_dispatch<std::_List_const_iterator<TagLib::Ogg::Page_*>_>": {
    "void": 1, 
    "list<TagLib::Ogg::Page_*,_std::allocator<TagLib::Ogg::Page_*>_> *": 1, 
    "label": "init", 
    "params": 3, 
    "return;": 1, 
    "while(.*)": 1, 
    "_List_const_iterator<TagLib::Ogg::Page_*>": 2, 
    "return": 0
  }, 
  "_S_minimum": {
    "for (.*) param": 1, 
    "params": 1, 
    "for (.*)": 1, 
    "_Base_ptr": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "firstPageHeader": {
    "if (.* < \\d*)": 1, 
    "if (.* < .*)": 1, 
    "File *": 1, 
    "params": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    ".*\\-": 3, 
    "if (.*)": 3, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "end": {
    "params": 1, 
    ".*\\+ param": 1, 
    "return": 1, 
    "List<TagLib::ByteVector> *": 1, 
    ".*\\+": 1
  }, 
  "allocator<TagLib::ByteVector>": {
    "void": 1, 
    "allocator<TagLib::ByteVector> *": 1, 
    "params": 2, 
    "allocator<std::_List_node<TagLib::ByteVector>_> *": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "_Rb_tree_impl": {
    "void": 1, 
    "params": 2, 
    "_Rb_tree_impl<std::less<unsigned_int>,_false> *": 2, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "splice": {
    "void": 1, 
    "list<TagLib::ByteVector,_std::allocator<TagLib::ByteVector>_> *": 2, 
    "params": 3, 
    "iterator": 1, 
    "return;": 1, 
    ".*\\-": 3, 
    "if (.*)": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "operator()": {
    "pair<const_unsigned_int,_TagLib::ByteVector> *": 1, 
    "_Select1st<std::pair<const_unsigned_int,_TagLib::ByteVector>_> *": 1, 
    "params": 2, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "clear": {
    "void": 1, 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "_Rb_tree<unsigned_int,_std::pair<const_unsigned_int,_TagLib::ByteVector>,_std::_Select1st<std::pair<const_unsigned_int,_TagLib::ByteVector>_>,_std::less<unsigned_int>,_std::allocator<std::pair<const_unsigned_int,_TagLib::ByteVector>_>_> *": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "isEmpty": {
    "params": 1, 
    "List<TagLib::Ogg::Page_*> *": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "_Rb_tree_const_iterator": {
    "void": 1, 
    "iterator *": 1, 
    "params": 2, 
    "return;": 1, 
    "_Rb_tree_const_iterator<std::pair<const_unsigned_int,_TagLib::ByteVector>_> *": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "_M_dec_size": {
    "void": 1, 
    "size_t": 1, 
    "params": 2, 
    "_List_base<TagLib::ByteVector,_std::allocator<TagLib::ByteVector>_> *": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "advance<std::_List_iterator<TagLib::ByteVector>,_unsigned_int>": {
    "void": 1, 
    "uint": 1, 
    "params": 2, 
    "return;": 1, 
    "_List_iterator<TagLib::ByteVector> *": 1, 
    "return": 0
  }, 
  "_S_left": {
    "params": 1, 
    "_Const_Base_ptr": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "pair": {
    "void": 1, 
    "pair<std::_Rb_tree_node_base_*,_std::_Rb_tree_node_base_*> *": 1, 
    "params": 3, 
    "return;": 1, 
    ".*\\-": 2, 
    "_Rb_tree_node_base * *": 2, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "_S_maximum": {
    "for (.*) param": 1, 
    "params": 1, 
    "for (.*)": 1, 
    "_Base_ptr": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "_M_put_node": {
    "pointer": 1, 
    "void": 1, 
    "params": 2, 
    "_List_base<TagLib::ByteVector,_std::allocator<TagLib::ByteVector>_> *": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "_M_construct_node": {
    "_Link_type": 1, 
    "void": 1, 
    "params": 3, 
    "value_type *": 1, 
    "return;": 1, 
    "_Rb_tree<unsigned_int,_std::pair<const_unsigned_int,_TagLib::ByteVector>,_std::_Select1st<std::pair<const_unsigned_int,_TagLib::ByteVector>_>,_std::less<unsigned_int>,_std::allocator<std::pair<const_unsigned_int,_TagLib::ByteVector>_>_> *": 1, 
    "return": 0
  }, 
  "__addressof<TagLib::ByteVector>": {
    "label": "add", 
    "params": 1, 
    "ByteVector *": 1, 
    "return": 1
  }, 
  "lower_bound": {
    "params": 2, 
    "key_type *": 1, 
    "_Rb_tree<unsigned_int,_std::pair<const_unsigned_int,_TagLib::ByteVector>,_std::_Select1st<std::pair<const_unsigned_int,_TagLib::ByteVector>_>,_std::less<unsigned_int>,_std::allocator<std::pair<const_unsigned_int,_TagLib::ByteVector>_>_> *": 1, 
    "return": 1
  }, 
  "_M_root": {
    "params": 1, 
    ".*\\-": 1, 
    "_Rb_tree<unsigned_int,_std::pair<const_unsigned_int,_TagLib::ByteVector>,_std::_Select1st<std::pair<const_unsigned_int,_TagLib::ByteVector>_>,_std::less<unsigned_int>,_std::allocator<std::pair<const_unsigned_int,_TagLib::ByteVector>_>_> *": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "_M_insert_<std::_Rb_tree<unsigned_int,_std::pair<const_unsigned_int,_TagLib::ByteVector>,_std::_Select1st<std::pair<const_unsigned_int,_TagLib::ByteVector>_>,_std::less<unsigned_int>,_std::allocator<std::pair<const_unsigned_int,_TagLib::ByteVector>_>_>::_Alloc_node>": {
    "label": "select", 
    "params": 5, 
    ".*\\+ param": 1, 
    "value_type *": 1, 
    "if (.*) param": 1, 
    "_Base_ptr": 2, 
    "_Alloc_node *": 1, 
    ".*\\-": 5, 
    "if (.*)": 2, 
    "_Rb_tree<unsigned_int,_std::pair<const_unsigned_int,_TagLib::ByteVector>,_std::_Select1st<std::pair<const_unsigned_int,_TagLib::ByteVector>_>,_std::less<unsigned_int>,_std::allocator<std::pair<const_unsigned_int,_TagLib::ByteVector>_>_> *": 1, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 1
  }, 
  "detach": {
    "if (.* < \\d*)": 1, 
    "void": 1, 
    "if (.* < .*)": 1, 
    "params": 1, 
    ".*\\+ param": 1, 
    "return;": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 1, 
    "return": 0, 
    "List<TagLib::ByteVector> *": 1, 
    ".*\\+": 4, 
    "= .*\\+": 1
  }, 
  "front": {
    "list<TagLib::ByteVector,_std::allocator<TagLib::ByteVector>_> *": 1, 
    "params": 1, 
    "return": 1
  }, 
  "operator()<std::pair<const_unsigned_int,_TagLib::ByteVector>_>": {
    "pair<const_unsigned_int,_TagLib::ByteVector> *": 1, 
    "params": 2, 
    "_Alloc_node *": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "append": {
    "params": 2, 
    ".*\\+ param": 1, 
    "= .*\\+ param": 1, 
    "return": 1, 
    "List<TagLib::ByteVector> *": 2, 
    ".*\\+": 3, 
    "= .*\\+": 1
  }, 
  "_M_reset": {
    "_Rb_tree_header *": 1, 
    "void": 1, 
    "label": "set", 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 4, 
    "return": 0, 
    ".*\\- param": 1
  }
}