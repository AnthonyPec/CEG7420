{
  "operator=": {
    "bool": 1, 
    "params": 2, 
    "if (.*) param": 1, 
    ".*\\-": 4, 
    "if (.*)": 1, 
    "reference *": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "operator--": {
    "_List_iterator<int> *": 1, 
    "params": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "deallocate": {
    "pointer": 1, 
    "void": 1, 
    "size_type": 1, 
    "delete(.*)": 1, 
    "params": 3, 
    "delete(.*) param": 1, 
    "new_allocator<std::_List_node<int>_> *": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "_M_get_Node_allocator": {
    "label": "get", 
    "_List_base<int,_std::allocator<int>_> *": 1, 
    "params": 1, 
    "return": 1
  }, 
  "construct": {
    "pointer": 1, 
    "int *": 1, 
    "void": 1, 
    "new_allocator<int> *": 1, 
    "params": 3, 
    "return;": 1, 
    "return": 0
  }, 
  "bitset": {
    "void": 1, 
    "label": "set", 
    "params": 2, 
    "ulong": 1, 
    "return;": 1, 
    "bitset<8> *": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "ListPrivateBase": {
    "void": 1, 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 2, 
    "return": 0, 
    ".*\\- param": 1, 
    "ListPrivateBase *": 1
  }, 
  "_M_clear": {
    "void": 1, 
    "while(.*) param": 1, 
    "_List_base<int,_std::allocator<int>_> *": 1, 
    "params": 1, 
    "return;": 1, 
    "while(.*)": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "firstPacketContinued": {
    "params": 1, 
    ".*\\-": 1, 
    "return": 1, 
    "PageHeader *": 1, 
    ".*\\- param": 1
  }, 
  "_M_inc_size": {
    "void": 1, 
    "_List_base<int,_std::allocator<int>_> *": 1, 
    "size_t": 1, 
    "params": 2, 
    ".*\\+ param": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "= .*\\+ param": 1, 
    "return": 0, 
    ".*\\+": 1, 
    ".*\\- param": 1, 
    "= .*\\+": 1
  }, 
  "allocator": {
    "void": 1, 
    "params": 2, 
    "return;": 1, 
    "allocator<std::_List_node<int>_> *": 2, 
    "return": 0
  }, 
  "~ListPrivate": {
    "ListPrivate<int> *": 1, 
    "void": 1, 
    "label": "~", 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "_M_getword": {
    "_Base_bitset<1> *": 1, 
    "label": "get", 
    "size_t": 1, 
    "params": 2, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "setPacketSizes": {
    "void": 1, 
    "List<int> *": 1, 
    "label": "set", 
    "params": 2, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    "PageHeader *": 1, 
    ".*\\- param": 1
  }, 
  "_M_hiword": {
    "_Base_bitset<1> *": 1, 
    "params": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "operator*": {
    "params": 1, 
    ".*\\-": 1, 
    "_List_const_iterator<int> *": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "__addressof<int>": {
    "int *": 1, 
    "label": "add", 
    "params": 1, 
    "int": 1, 
    "return": 1
  }, 
  "_S_maskbit": {
    "size_t": 1, 
    "params": 1, 
    "return": 1
  }, 
  "_M_do_to_ulong": {
    "_Base_bitset<1> *": 1, 
    "params": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "_List_iterator": {
    "void": 1, 
    "_List_iterator<int> *": 1, 
    "params": 2, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1, 
    "_List_node_base *": 1
  }, 
  "new_allocator": {
    "void": 1, 
    "params": 2, 
    "new_allocator<std::_List_node<int>_> *": 2, 
    "return;": 1, 
    "return": 0
  }, 
  "destroy": {
    "pointer": 1, 
    "void": 1, 
    "new_allocator<int> *": 1, 
    "label": "destroy", 
    "params": 2, 
    "return;": 1, 
    "return": 0
  }, 
  "~List": {
    "void": 1, 
    "List<int> *": 1, 
    "delete(.*)": 1, 
    "label": "~", 
    "params": 1, 
    "delete(.*) param": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "size": {
    "params": 1, 
    "int": 1, 
    ".*\\-": 1, 
    "return": 1, 
    "PageHeader *": 1, 
    ".*\\- param": 1
  }, 
  "allocate": {
    "if (.* < \\d*)": 1, 
    "size_type": 1, 
    "if (.* < .*)": 1, 
    "params": 3, 
    "new_allocator<std::_List_node<int>_> *": 1, 
    "int": 1, 
    "if (.*) param": 1, 
    "void *": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "_M_initialize_dispatch<std::_List_const_iterator<int>_>": {
    "void": 1, 
    "label": "init", 
    "params": 3, 
    "list<int,_std::allocator<int>_> *": 1, 
    "return;": 1, 
    "while(.*)": 1, 
    "_List_const_iterator<int>": 2, 
    "return": 0
  }, 
  "to_ulong": {
    "params": 1, 
    "bitset<8> *": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "_List_impl": {
    "void": 1, 
    "_List_impl *": 1, 
    "_Node_alloc_type *": 1, 
    "params": 2, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "begin": {
    "params": 1, 
    "list<int,_std::allocator<int>_> *": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "setAbsoluteGranularPosition": {
    "void": 1, 
    "label": "set", 
    "params": 2, 
    "return;": 1, 
    ".*\\-": 3, 
    "longlong": 1, 
    "return": 0, 
    "PageHeader *": 1, 
    ".*\\- param": 1, 
    ".*\\+": 1
  }, 
  "~list": {
    "void": 1, 
    "label": "~", 
    "params": 1, 
    "list<int,_std::allocator<int>_> *": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "_M_create_node": {
    "label": "create", 
    "params": 2, 
    "list<int,_std::allocator<int>_> *": 1, 
    "value_type *": 1, 
    ".*\\-": 2, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "operator[]": {
    "size_t": 1, 
    "params": 2, 
    "bitset<8> *": 1, 
    "return": 1
  }, 
  "operator++": {
    "params": 1, 
    ".*\\-": 1, 
    "_List_const_iterator<int> *": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "lastPacketCompleted": {
    "params": 1, 
    ".*\\-": 1, 
    "return": 1, 
    "PageHeader *": 1, 
    ".*\\- param": 1
  }, 
  "_M_insert": {
    "void": 1, 
    "params": 3, 
    "list<int,_std::allocator<int>_> *": 1, 
    "value_type *": 1, 
    "iterator": 1, 
    "return;": 1, 
    ".*\\-": 2, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "lastPageOfStream": {
    "params": 1, 
    ".*\\-": 1, 
    "return": 1, 
    "PageHeader *": 1, 
    ".*\\- param": 1
  }, 
  "__cxx_global_var_init": {
    "void": 1, 
    "label": "init", 
    "params": 0, 
    "return;": 1, 
    "return": 0
  }, 
  "setPageSequenceNumber": {
    "void": 1, 
    "label": "set", 
    "params": 2, 
    "int": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    "PageHeader *": 1, 
    ".*\\- param": 1
  }, 
  "setFirstPageOfStream": {
    "void": 1, 
    "bool": 1, 
    "label": "set", 
    "params": 2, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    "PageHeader *": 1, 
    ".*\\- param": 1
  }, 
  "~new_allocator": {
    "void": 1, 
    "new_allocator<int> *": 1, 
    "label": "~", 
    "params": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "streamSerialNumber": {
    "uint": 1, 
    "params": 1, 
    "int": 1, 
    ".*\\-": 1, 
    "return": 1, 
    "PageHeader *": 1, 
    ".*\\- param": 1
  }, 
  "_List_node_header": {
    "void": 1, 
    "params": 1, 
    "return;": 1, 
    "_List_node_header *": 1, 
    "return": 0
  }, 
  "__clang_call_terminate": {
    "void": 1, 
    "params": 0, 
    "return": 0
  }, 
  "~PageHeader": {
    "void": 1, 
    "delete(.*)": 1, 
    "label": "~", 
    "params": 1, 
    "delete(.*) param": 1, 
    "return;": 1, 
    "return": 0, 
    "PageHeader *": 1
  }, 
  "absoluteGranularPosition": {
    "params": 1, 
    ".*\\-": 1, 
    "return": 1, 
    "PageHeader *": 1, 
    ".*\\- param": 1
  }, 
  "isValid": {
    "params": 1, 
    ".*\\-": 1, 
    "return": 1, 
    "PageHeader *": 1, 
    ".*\\- param": 1
  }, 
  "dataSize": {
    "params": 1, 
    "int": 1, 
    ".*\\-": 1, 
    "return": 1, 
    "PageHeader *": 1, 
    ".*\\- param": 1
  }, 
  "lacingValues": {
    "if (.* != 0)": 1, 
    "break": 1, 
    "params": 1, 
    ".*\\+ 0x.*": 1, 
    ".*\\+ param": 1, 
    "while(.*)": 1, 
    ".*\\-": 2, 
    "if (.*)": 3, 
    "return": 1, 
    "PageHeader *": 1, 
    ".*\\+": 6, 
    "= .*\\+": 5, 
    ".*\\- param": 1
  }, 
  "~allocator": {
    "void": 1, 
    "label": "~", 
    "params": 1, 
    "return;": 1, 
    "allocator<int> *": 1, 
    "return": 0
  }, 
  "~_List_base": {
    "void": 1, 
    "label": "~", 
    "_List_base<int,_std::allocator<int>_> *": 1, 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "_S_select_on_copy": {
    "label": "copy", 
    "params": 1, 
    "int": 1, 
    "allocator<std::_List_node<int>_> *": 1, 
    "return": 1
  }, 
  "_Base_bitset": {
    "void": 1, 
    "_Base_bitset<1> *": 1, 
    "label": "set", 
    "params": 2, 
    "ulong": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "_List_base": {
    "void": 1, 
    "_List_base<int,_std::allocator<int>_> *": 1, 
    "_Node_alloc_type *": 1, 
    "params": 2, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "__addressof<const_int>": {
    "int *": 1, 
    "label": "add", 
    "params": 1, 
    "int": 1, 
    "return": 1
  }, 
  "~reference": {
    "void": 1, 
    "label": "~", 
    "params": 1, 
    "return;": 1, 
    "reference *": 1, 
    "return": 0
  }, 
  "reference": {
    "void": 1, 
    "size_t": 1, 
    "params": 3, 
    "return;": 1, 
    "bitset<8> *": 1, 
    ".*\\-": 3, 
    "reference *": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "ref": {
    "void": 1, 
    "RefCounterOld *": 1, 
    "params": 1, 
    ".*\\+ param": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "= .*\\+ param": 1, 
    "return": 0, 
    ".*\\+": 1, 
    ".*\\- param": 1, 
    "= .*\\+": 1
  }, 
  "List": {
    "void": 1, 
    "List<int> *": 1, 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 2, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "_M_init": {
    "void": 1, 
    "label": "init", 
    "params": 1, 
    "return;": 1, 
    "_List_node_header *": 1, 
    ".*\\-": 3, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "ListPrivate": {
    "ListPrivate<int> *": 1, 
    "void": 1, 
    "params": 2, 
    "list<int,_std::allocator<int>_> *": 1, 
    "return;": 1, 
    ".*\\-": 2, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "operator!=": {
    "_Self *": 2, 
    "params": 2, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "read": {
    "if (.* < \\d*)": 2, 
    "void": 1, 
    "if (.* < .*)": 2, 
    "label": "read", 
    "File *": 1, 
    "params": 3, 
    ".*\\+ 0x.*": 1, 
    "long": 1, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 2, 
    "return;": 1, 
    "for (.*)": 1, 
    ".*\\-": 15, 
    "= .*\\+ param": 1, 
    "if (.*)": 5, 
    ".*\\+ 0x.* param": 1, 
    "return": 0, 
    "PageHeader *": 1, 
    ".*\\- param": 1, 
    ".*\\+": 4, 
    "= .*\\+": 4
  }, 
  "test": {
    "label": "test", 
    "size_t": 1, 
    "params": 2, 
    "bitset<8> *": 1, 
    "return": 1
  }, 
  "swap": {
    "void": 1, 
    "List<int> *": 2, 
    "params": 2, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "count": {
    "RefCounterOld *": 1, 
    "label": "count", 
    "params": 1, 
    "int": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "list": {
    "void": 1, 
    "params": 2, 
    "list<int,_std::allocator<int>_> *": 2, 
    "return;": 1, 
    ".*\\-": 2, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "max_size": {
    "params": 1, 
    "new_allocator<std::_List_node<int>_> *": 1, 
    "return": 1
  }, 
  "swap<TagLib::List<int>::ListPrivate<int>_*>": {
    "void": 1, 
    "ListPrivate<int> * *": 2, 
    "params": 2, 
    "return;": 1, 
    "return": 0
  }, 
  "setLastPageOfStream": {
    "void": 1, 
    "bool": 1, 
    "label": "set", 
    "params": 2, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    "PageHeader *": 1, 
    ".*\\- param": 1
  }, 
  "setLastPacketCompleted": {
    "void": 1, 
    "bool": 1, 
    "label": "set", 
    "params": 2, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    "PageHeader *": 1, 
    ".*\\- param": 1
  }, 
  "_M_get_node": {
    "label": "get", 
    "_List_base<int,_std::allocator<int>_> *": 1, 
    "params": 1, 
    "int": 1, 
    "return": 1
  }, 
  "_List_const_iterator": {
    "void": 1, 
    "params": 2, 
    "return;": 1, 
    ".*\\-": 1, 
    "_List_const_iterator<int> *": 1, 
    "return": 0, 
    ".*\\- param": 1, 
    "_List_node_base *": 1
  }, 
  "RefCounterOld": {
    "void": 1, 
    "RefCounterOld *": 1, 
    "label": "count", 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "deref": {
    "RefCounterOld *": 1, 
    "params": 1, 
    ".*\\-": 2, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "~_List_impl": {
    "void": 1, 
    "_List_impl *": 1, 
    "label": "~", 
    "params": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "allocator<std::_List_node<int>_>": {
    "void": 1, 
    "params": 2, 
    "return;": 1, 
    "allocator<std::_List_node<int>_> *": 1, 
    "allocator<int> *": 1, 
    "return": 0
  }, 
  "_M_valptr": {
    "_List_node<int> *": 1, 
    "params": 1, 
    "int": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "push_back": {
    "void": 1, 
    "params": 2, 
    "list<int,_std::allocator<int>_> *": 1, 
    "value_type *": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "_S_whichbit": {
    "size_t": 1, 
    "params": 1, 
    "return": 1
  }, 
  "setStreamSerialNumber": {
    "void": 1, 
    "return; param": 1, 
    "label": "set", 
    "uint": 1, 
    "params": 2, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    "PageHeader *": 1, 
    ".*\\- param": 1
  }, 
  "firstPageOfStream": {
    "params": 1, 
    ".*\\-": 1, 
    "return": 1, 
    "PageHeader *": 1, 
    ".*\\- param": 1
  }, 
  "_M_check": {
    "if (.* < \\d*)": 1, 
    "void": 1, 
    "if (.* < .*)": 1, 
    "label": "check", 
    "size_t": 1, 
    "params": 3, 
    "if (.*) param": 1, 
    "return;": 1, 
    "bitset<8> *": 1, 
    "char *": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 1, 
    "return": 0
  }, 
  "pageSequenceNumber": {
    "params": 1, 
    "int": 1, 
    ".*\\-": 1, 
    "return": 1, 
    "PageHeader *": 1, 
    ".*\\- param": 1
  }, 
  "end": {
    "params": 1, 
    "list<int,_std::allocator<int>_> *": 1, 
    "return": 1
  }, 
  "render": {
    "params": 1, 
    ".*\\+ 0x.*": 5, 
    "if (.* == 0)": 1, 
    ".*\\-": 1, 
    "if (.*)": 1, 
    "return": 1, 
    "PageHeader *": 1, 
    ".*\\+": 6, 
    "= .*\\+": 3
  }, 
  "_GLOBAL__sub_I_oggpageheader.cpp": {
    "void": 1, 
    "params": 0, 
    "return;": 1, 
    "return": 0
  }, 
  "_M_do_sanitize": {
    "void": 1, 
    "params": 1, 
    "return;": 1, 
    "bitset<8> *": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "packetSizes": {
    "params": 1, 
    "int": 1, 
    ".*\\+ param": 1, 
    "return": 1, 
    "PageHeader *": 1, 
    ".*\\+": 1
  }, 
  "PageHeaderPrivate": {
    "void": 1, 
    "PageHeaderPrivate *": 1, 
    "params": 1, 
    ".*\\+ param": 1, 
    "return;": 1, 
    ".*\\-": 12, 
    "return": 0, 
    ".*\\- param": 1, 
    ".*\\+": 1
  }, 
  "_S_do_sanitize": {
    "void": 1, 
    "params": 1, 
    "return;": 1, 
    "_WordT *": 1, 
    "return": 0
  }, 
  "setFirstPacketContinued": {
    "void": 1, 
    "bool": 1, 
    "label": "set", 
    "params": 2, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    "PageHeader *": 1, 
    ".*\\- param": 1
  }, 
  "_Unchecked_test": {
    "label": "test", 
    "size_t": 1, 
    "params": 2, 
    "bitset<8> *": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "_M_put_node": {
    "pointer": 1, 
    "void": 1, 
    "_List_base<int,_std::allocator<int>_> *": 1, 
    "params": 2, 
    "return;": 1, 
    "return": 0
  }, 
  "PageHeader": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "void": 1, 
    "if (.* < .*)": 1, 
    "File *": 1, 
    "params": 3, 
    "long": 1, 
    "if (.*) param": 1, 
    "return;": 1, 
    ".*\\-": 3, 
    "if (.* < .*) param": 1, 
    "if (.*)": 1, 
    "return": 0, 
    "PageHeader *": 1, 
    ".*\\- param": 1
  }, 
  "detach": {
    "if (.* < \\d*)": 1, 
    "void": 1, 
    "if (.* < .*)": 1, 
    "List<int> *": 1, 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 4, 
    "if (.*)": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "~PageHeaderPrivate": {
    "void": 1, 
    "PageHeaderPrivate *": 1, 
    "label": "~", 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "append": {
    "int *": 1, 
    "List<int> *": 1, 
    "params": 2, 
    "int": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }
}