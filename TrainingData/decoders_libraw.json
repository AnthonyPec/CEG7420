{
  "pentax_4shot_load_raw": {
    "for (.*) param": 1, 
    "if (.* != 0)": 1, 
    "malloc(.*) param": 1, 
    "if (.* < .*)": 2, 
    ".*\\+ 0x.*": 32, 
    ".*\\+ param": 1, 
    "while(.*)": 1, 
    "for (.*)": 5, 
    ".*\\-": 4, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    ".*\\+": 50, 
    "if (.* < \\d*)": 2, 
    "if (.* < \\d*) param": 1, 
    "if (.* != 0) param": 1, 
    "void": 1, 
    "break": 1, 
    "label": "load", 
    "params": 1, 
    "malloc(.*)": 2, 
    "if (.*) param": 1, 
    "return;": 1, 
    "memcpy(.*)": 1, 
    "if (.*)": 4, 
    ".*\\+ 0x.* param": 1, 
    "LibRaw *": 1, 
    "return": 0, 
    "= .*\\+": 25, 
    ".*\\- param": 1
  }, 
  "operator<": {
    "params": 2, 
    ".*\\+ 0x.*": 2, 
    "undefined": 1, 
    "p1_row_info_t *": 2, 
    ".*\\+ param": 1, 
    ".*\\-": 3, 
    "= .*\\+ param": 1, 
    ".*\\+ 0x.* param": 1, 
    "return": 1, 
    ".*\\+": 5, 
    "= .*\\+": 4
  }, 
  "operator--": {
    "void": 1, 
    "__normal_iterator<p1_row_info_t*,std::vector<p1_row_info_t,std::allocator<p1_row_info_t>>> *": 1, 
    "params": 1, 
    ".*\\+ param": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "= .*\\+ param": 1, 
    "return": 0, 
    ".*\\+": 1, 
    ".*\\- param": 1, 
    "= .*\\+": 1
  }, 
  "operator==": {
    "params": 2, 
    "return": 1, 
    "__normal_iterator *": 2
  }, 
  "deallocate": {
    "void": 1, 
    "delete(.*)": 1, 
    "uint": 1, 
    "params": 2, 
    "delete(.*) param": 1, 
    "p1_row_info_t *": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "__niter_base<unsigned_char*>": {
    "uchar *": 1, 
    "params": 1, 
    "char": 1, 
    ".*\\-": 1, 
    "return": 1
  }, 
  "unpack7bytesto4x16_nikon": {
    "void": 1, 
    "uchar *": 1, 
    "label": "test", 
    "params": 2, 
    "ushort *": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "nextpixel": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "params": 1, 
    "undefined": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "pana_cs6_page_decoder *": 1, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 1, 
    "return": 1, 
    ".*\\+": 2, 
    "= .*\\+": 2
  }, 
  "allocator": {
    "params": 1, 
    "return": 1, 
    "allocator *": 1
  }, 
  "operator-": {
    "__normal_iterator<p1_row_info_t*,std::vector<p1_row_info_t,std::allocator<p1_row_info_t>>> *": 1, 
    "params": 2, 
    "int": 1, 
    "undefined": 1, 
    ".*\\+ param": 1, 
    ".*\\-": 1, 
    "= .*\\+ param": 1, 
    "return": 1, 
    ".*\\+": 1, 
    ".*\\- param": 1, 
    "= .*\\+": 1
  }, 
  "sort<__gnu_cxx::__normal_iterator<p1_row_info_t*,std::vector<p1_row_info_t,std::allocator<p1_row_info_t>>>>": {
    "void": 1, 
    "params": 2, 
    "return;": 1, 
    ".*\\-": 1, 
    "__normal_iterator": 2, 
    "return": 0
  }, 
  "__unguarded_partition_pivot<__gnu_cxx::__normal_iterator<p1_row_info_t*,std::vector<p1_row_info_t,std::allocator<p1_row_info_t>>>,__gnu_cxx::__ops::_Iter_less_iter>": {
    "params": 3, 
    "_Iter_less_iter": 1, 
    ".*\\-": 1, 
    "__normal_iterator": 2, 
    "return": 1
  }, 
  "unpack28bytesto16x16ns": {
    "void": 1, 
    "uchar *": 1, 
    "label": "test", 
    "params": 2, 
    "ushort *": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "operator*": {
    "__normal_iterator<p1_row_info_t*,std::vector<p1_row_info_t,std::allocator<p1_row_info_t>>> *": 1, 
    "params": 1, 
    "undefined": 1, 
    "return": 1
  }, 
  "__val_comp_iter": {
    "void": 1, 
    "params": 1, 
    "_Iter_less_iter": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "operator+": {
    "__normal_iterator<p1_row_info_t*,std::vector<p1_row_info_t,std::allocator<p1_row_info_t>>> *": 1, 
    "params": 2, 
    "int": 1, 
    "undefined": 1, 
    ".*\\+ param": 1, 
    "= .*\\+ param": 1, 
    "return": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "sony_arq_load_raw": {
    "for (.*) param": 1, 
    "if (.* < \\d*)": 7, 
    "if (.* < \\d*) param": 1, 
    "void": 1, 
    "if (.* < .*)": 7, 
    "if (.* == 0) param": 1, 
    "label": "load", 
    "params": 1, 
    ".*\\+ 0x.*": 8, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "return;": 1, 
    "for (.*)": 2, 
    ".*\\-": 2, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 8, 
    ".*\\+ 0x.* param": 1, 
    "return": 0, 
    "LibRaw *": 1, 
    ".*\\+": 28, 
    "= .*\\+": 18
  }, 
  "_M_data_ptr<unsigned_char>": {
    "uchar *": 1, 
    "params": 2, 
    "vector<unsigned_char,std::allocator<unsigned_char>> *": 1, 
    "char": 1, 
    "return": 1
  }, 
  "new_allocator": {
    "params": 1, 
    "new_allocator *": 1, 
    "return": 1
  }, 
  "__final_insertion_sort<__gnu_cxx::__normal_iterator<p1_row_info_t*,std::vector<p1_row_info_t,std::allocator<p1_row_info_t>>>,__gnu_cxx::__ops::_Iter_less_iter>": {
    "if (.* < \\d*)": 1, 
    "void": 1, 
    "if (.* < .*)": 1, 
    "params": 3, 
    "_Iter_less_iter": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "if (.*)": 1, 
    "__normal_iterator": 2, 
    "return": 0
  }, 
  "FCF": {
    "void": 1, 
    "if (.* == 0) param": 1, 
    "params": 3, 
    "int": 2, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "return;": 1, 
    ".*\\-": 2, 
    "= .*\\+ param": 1, 
    "if (.*)": 1, 
    "return": 0, 
    "LibRaw *": 1, 
    ".*\\+": 5, 
    ".*\\- param": 1, 
    "= .*\\+": 4
  }, 
  "~vector": {
    "label": "~", 
    "params": 1, 
    "vector<p1_row_info_t,std::allocator<p1_row_info_t>> *": 1, 
    ".*\\+ param": 1, 
    "= .*\\+ param": 1, 
    "return": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "size": {
    "params": 1, 
    "int": 1, 
    ".*\\+ param": 1, 
    "vector<unsigned_char,std::allocator<unsigned_char>> *": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\+": 1, 
    ".*\\- param": 1
  }, 
  "allocate": {
    "if (.* < \\d*)": 1, 
    "void": 1, 
    "if (.* < .*)": 1, 
    "uint": 1, 
    "params": 2, 
    "if (.*) param": 1, 
    "return;": 1, 
    "void *": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 1, 
    "return": 0
  }, 
  "__push_heap<__gnu_cxx::__normal_iterator<p1_row_info_t*,std::vector<p1_row_info_t,std::allocator<p1_row_info_t>>>,int,p1_row_info_t,__gnu_cxx::__ops::_Iter_less_val>": {
    "if (.* < \\d*)": 1, 
    "void": 1, 
    "if (.* < .*)": 1, 
    "break": 1, 
    "params": 5, 
    "int": 2, 
    ".*\\+ param": 1, 
    "return;": 1, 
    "while(.*)": 1, 
    "_Iter_less_val *": 1, 
    ".*\\-": 3, 
    "= .*\\+ param": 1, 
    "if (.*)": 2, 
    "__normal_iterator": 1, 
    "return": 0, 
    ".*\\+": 2, 
    ".*\\- param": 1, 
    "= .*\\+": 2, 
    "p1_row_info_t": 1
  }, 
  "read_page": {
    "if (.* != 0)": 1, 
    "if (.* != 0) param": 1, 
    "if (.* < \\d*)": 1, 
    "void": 1, 
    "if (.* < .*)": 1, 
    "label": "read", 
    "params": 1, 
    ".*\\+ 0x.*": 40, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "return;": 1, 
    "pana_cs6_page_decoder *": 1, 
    ".*\\-": 1, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 2, 
    ".*\\+ 0x.* param": 1, 
    "return": 0, 
    ".*\\+": 42, 
    ".*\\- param": 1, 
    "= .*\\+": 1
  }, 
  "__adjust_heap<__gnu_cxx::__normal_iterator<p1_row_info_t*,std::vector<p1_row_info_t,std::allocator<p1_row_info_t>>>,int,p1_row_info_t,__gnu_cxx::__ops::_Iter_less_iter>": {
    "void": 1, 
    "break": 1, 
    "params": 5, 
    "int": 2, 
    "if (.* == 0)": 1, 
    "_Iter_less_iter": 1, 
    "return;": 1, 
    "while(.*)": 1, 
    ".*\\-": 8, 
    "if (.*)": 4, 
    "__normal_iterator": 1, 
    "return": 0, 
    ".*\\+": 7, 
    "= .*\\+": 4, 
    "p1_row_info_t": 1
  }, 
  "phase_one_load_raw_s": {
    "for (.*) param": 1, 
    "if (.* != 0)": 2, 
    "if (.* != 0) param": 1, 
    "if (.* < \\d*)": 2, 
    "void": 1, 
    "if (.* < .*)": 2, 
    "label": "load", 
    "params": 1, 
    ".*\\+ 0x.*": 29, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "return;": 1, 
    "while(.*)": 1, 
    "for (.*)": 1, 
    ".*\\-": 4, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 5, 
    ".*\\+ 0x.* param": 1, 
    "return": 0, 
    "LibRaw *": 1, 
    ".*\\+": 40, 
    "= .*\\+": 27
  }, 
  "__introsort_loop<__gnu_cxx::__normal_iterator<p1_row_info_t*,std::vector<p1_row_info_t,std::allocator<p1_row_info_t>>>,int,__gnu_cxx::__ops::_Iter_less_iter>": {
    "if (.* < \\d*)": 1, 
    "void": 1, 
    "if (.* < .*)": 1, 
    "break": 1, 
    "params": 4, 
    "int": 1, 
    "if (.* == 0)": 1, 
    "_Iter_less_iter": 1, 
    "return;": 2, 
    "while(.*)": 1, 
    ".*\\-": 2, 
    "if (.*)": 2, 
    "__normal_iterator": 2, 
    "return": 0
  }, 
  "begin": {
    "params": 1, 
    "vector<p1_row_info_t,std::allocator<p1_row_info_t>> *": 1, 
    "undefined": 1, 
    "return": 1
  }, 
  "__uninit_default_n<unsigned_char*,unsigned_int>": {
    "uchar *": 1, 
    "label": "init", 
    "uint": 1, 
    "params": 2, 
    "char": 1, 
    "return": 1
  }, 
  "operator[]": {
    "uint": 1, 
    "params": 2, 
    "int": 1, 
    "vector<p1_row_info_t,std::allocator<p1_row_info_t>> *": 1, 
    ".*\\+ param": 1, 
    "return": 1, 
    ".*\\+": 1
  }, 
  "~_Vector_impl": {
    "_Vector_impl *": 1, 
    "label": "~", 
    "params": 1, 
    "return": 1
  }, 
  "operator++": {
    "void": 1, 
    "__normal_iterator<p1_row_info_t*,std::vector<p1_row_info_t,std::allocator<p1_row_info_t>>> *": 1, 
    "params": 1, 
    ".*\\+ 0x.*": 1, 
    ".*\\+ param": 1, 
    "return;": 1, 
    "= .*\\+ param": 1, 
    ".*\\+ 0x.* param": 1, 
    "return": 0, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "_ZSt4swapI13p1_row_info_tENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SD_": {
    "void": 1, 
    "params": 0, 
    "return;": 1, 
    "return": 0
  }, 
  "consume": {
    "iiq_bitstream_t *": 1, 
    "void": 1, 
    "params": 2, 
    "return;": 1, 
    "uchar": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "__pop_heap<__gnu_cxx::__normal_iterator<p1_row_info_t*,std::vector<p1_row_info_t,std::allocator<p1_row_info_t>>>,__gnu_cxx::__ops::_Iter_less_iter>": {
    "void": 1, 
    "params": 4, 
    "return;": 1, 
    ".*\\-": 2, 
    "__normal_iterator": 3, 
    "_Iter_less_iter *": 1, 
    "return": 0, 
    ".*\\+": 1
  }, 
  "__partial_sort<__gnu_cxx::__normal_iterator<p1_row_info_t*,std::vector<p1_row_info_t,std::allocator<p1_row_info_t>>>,__gnu_cxx::__ops::_Iter_less_iter>": {
    "void": 1, 
    "params": 4, 
    "_Iter_less_iter": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "__normal_iterator": 3, 
    "return": 0
  }, 
  "panasonicC7_load_raw": {
    "for (.*) param": 1, 
    "malloc(.*) param": 1, 
    "if (.* < .*)": 1, 
    "if (.* == 0) param": 1, 
    ".*\\+ 0x.*": 16, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 3, 
    "while(.*)": 1, 
    "for (.*)": 2, 
    ".*\\-": 4, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    ".*\\+": 35, 
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "void": 1, 
    "break": 1, 
    "label": "load", 
    "params": 1, 
    "malloc(.*)": 1, 
    "if (.*) param": 1, 
    "return;": 1, 
    "if (.*)": 6, 
    ".*\\+ 0x.* param": 1, 
    "LibRaw *": 1, 
    "return": 0, 
    "= .*\\+": 9, 
    ".*\\- param": 1
  }, 
  "fuji_14bit_load_raw": {
    "for (.*) param": 1, 
    "malloc(.*) param": 1, 
    "if (.* < .*)": 2, 
    "if (.* == 0) param": 1, 
    ".*\\+ 0x.*": 10, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 2, 
    "while(.*)": 2, 
    "for (.*)": 1, 
    ".*\\-": 5, 
    "= .*\\+ param": 1, 
    ".*\\+": 15, 
    "if (.* < \\d*)": 2, 
    "void": 1, 
    "break": 2, 
    "label": "load", 
    "params": 1, 
    "malloc(.*)": 1, 
    "if (.*) param": 1, 
    "return;": 1, 
    "if (.*)": 6, 
    ".*\\+ 0x.* param": 1, 
    "LibRaw *": 1, 
    "return": 0, 
    "= .*\\+": 10
  }, 
  "__destroy<p1_row_info_t*>": {
    "void": 1, 
    "label": "destroy", 
    "params": 2, 
    "p1_row_info_t *": 2, 
    "return;": 1, 
    "return": 0
  }, 
  "max<unsigned_int>": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "uint *": 2, 
    "uint": 1, 
    "params": 2, 
    "int": 1, 
    "if (.*) param": 1, 
    ".*\\-": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "_Destroy<p1_row_info_t*,p1_row_info_t>": {
    "void": 1, 
    "label": "destroy", 
    "params": 3, 
    "p1_row_info_t *": 2, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    "allocator *": 1
  }, 
  "__unguarded_linear_insert<__gnu_cxx::__normal_iterator<p1_row_info_t*,std::vector<p1_row_info_t,std::allocator<p1_row_info_t>>>,__gnu_cxx::__ops::_Val_less_iter>": {
    "void": 1, 
    "break": 1, 
    "_Val_less_iter": 1, 
    "params": 2, 
    "return;": 1, 
    "while(.*)": 1, 
    ".*\\-": 1, 
    "if (.*)": 1, 
    "__normal_iterator": 1, 
    "return": 0
  }, 
  "get": {
    "iiq_bitstream_t *": 1, 
    "label": "get", 
    "params": 2, 
    "undefined": 1, 
    "char": 1, 
    "return": 1
  }, 
  "__niter_wrap<unsigned_char*>": {
    "uchar * *": 1, 
    "uchar *": 1, 
    "params": 2, 
    "char": 1, 
    ".*\\-": 1, 
    "return": 1
  }, 
  "__copy_move_b<p1_row_info_t*,p1_row_info_t*>": {
    "label": "copy", 
    "params": 3, 
    "p1_row_info_t *": 3, 
    "for (.*)": 1, 
    ".*\\-": 8, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 7, 
    "= .*\\+": 3
  }, 
  "vector": {
    "uint": 1, 
    "params": 3, 
    "vector<unsigned_char,std::allocator<unsigned_char>> *": 1, 
    "char": 1, 
    "return": 1, 
    "allocator *": 1
  }, 
  "~new_allocator": {
    "new_allocator<p1_row_info_t> *": 1, 
    "label": "~", 
    "params": 1, 
    "return": 1
  }, 
  "nikon_load_sraw": {
    "for (.*) param": 1, 
    "malloc(.*) param": 1, 
    "if (.* < .*)": 4, 
    "if (.* == 0) param": 1, 
    ".*\\+ 0x.*": 30, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 2, 
    "for (.*)": 6, 
    ".*\\-": 8, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    ".*\\+": 54, 
    "if (.* < \\d*)": 4, 
    "void": 1, 
    "label": "load", 
    "params": 1, 
    "malloc(.*)": 1, 
    "if (.*) param": 1, 
    "return;": 1, 
    "if (.*)": 12, 
    ".*\\+ 0x.* param": 1, 
    "LibRaw *": 1, 
    "return": 0, 
    "= .*\\+": 20, 
    ".*\\- param": 1
  }, 
  "__clang_call_terminate": {
    "void": 1, 
    "params": 0, 
    "return": 0
  }, 
  "_S_max_size": {
    "uint": 1, 
    "params": 1, 
    "int": 1, 
    "return": 1, 
    "allocator *": 1
  }, 
  "__uninitialized_default_n_a<p1_row_info_t*,unsigned_int,p1_row_info_t>": {
    "label": "init", 
    "uint": 1, 
    "params": 3, 
    "p1_row_info_t *": 1, 
    ".*\\-": 1, 
    "return": 1, 
    "allocator *": 1
  }, 
  "__unguarded_insertion_sort<__gnu_cxx::__normal_iterator<p1_row_info_t*,std::vector<p1_row_info_t,std::allocator<p1_row_info_t>>>,__gnu_cxx::__ops::_Iter_less_iter>": {
    "void": 1, 
    "params": 3, 
    "_Iter_less_iter": 1, 
    "return;": 1, 
    "while(.*)": 1, 
    ".*\\-": 1, 
    "__normal_iterator": 2, 
    "return": 0
  }, 
  "iter_swap<__gnu_cxx::__normal_iterator<p1_row_info_t*,std::vector<p1_row_info_t,std::allocator<p1_row_info_t>>>,__gnu_cxx::__normal_iterator<p1_row_info_t*,std::vector<p1_row_info_t,std::allocator<p1_row_info_t>>>>": {
    "void": 1, 
    "params": 2, 
    "return;": 1, 
    ".*\\-": 1, 
    "__normal_iterator": 2, 
    "return": 0
  }, 
  "move<p1_row_info_t&>": {
    "params": 1, 
    "p1_row_info_t *": 1, 
    ".*\\-": 1, 
    "return": 1
  }, 
  "_M_deallocate": {
    "void": 1, 
    "_Vector_base<p1_row_info_t,std::allocator<p1_row_info_t>> *": 1, 
    "uint": 1, 
    "params": 3, 
    "p1_row_info_t *": 1, 
    "if (.*) param": 1, 
    "return;": 1, 
    "if (.*)": 1, 
    "return": 0
  }, 
  "peek": {
    "if (.* < \\d*)": 2, 
    "iiq_bitstream_t *": 1, 
    "if (.* < .*)": 2, 
    "params": 2, 
    "undefined": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "uchar": 1, 
    ".*\\-": 6, 
    "= .*\\+ param": 1, 
    "if (.*)": 3, 
    "return": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1, 
    ".*\\- param": 1
  }, 
  "__copy_move_backward_a<true,p1_row_info_t*,p1_row_info_t*>": {
    "label": "copy", 
    "params": 3, 
    "p1_row_info_t *": 3, 
    ".*\\-": 1, 
    "return": 1
  }, 
  "_M_create_storage": {
    "_Vector_base<unsigned_char,std::allocator<unsigned_char>> *": 1, 
    "void": 1, 
    "label": "create", 
    "uint": 1, 
    "params": 2, 
    ".*\\+ param": 1, 
    "return;": 1, 
    "= .*\\+ param": 1, 
    "return": 0, 
    ".*\\+": 2, 
    "= .*\\+": 1
  }, 
  "read_page12": {
    "if (.* != 0)": 1, 
    "if (.* != 0) param": 1, 
    "if (.* < \\d*)": 1, 
    "void": 1, 
    "if (.* < .*)": 1, 
    "label": "read", 
    "params": 1, 
    ".*\\+ 0x.*": 43, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "return;": 1, 
    "pana_cs6_page_decoder *": 1, 
    ".*\\-": 1, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 2, 
    ".*\\+ 0x.* param": 1, 
    "return": 0, 
    ".*\\+": 45, 
    ".*\\- param": 1, 
    "= .*\\+": 5
  }, 
  "~allocator": {
    "label": "~", 
    "params": 1, 
    "allocator<unsigned_char> *": 1, 
    "char": 1, 
    "return": 1
  }, 
  "__destroy<unsigned_char*>": {
    "void": 1, 
    "uchar *": 2, 
    "label": "destroy", 
    "params": 2, 
    "return;": 1, 
    "return": 0
  }, 
  "_S_do_relocate": {
    "void": 1, 
    "uchar *": 3, 
    "params": 5, 
    "return;": 1, 
    "return": 0, 
    "integral_constant": 1, 
    "allocator *": 1
  }, 
  "__lg": {
    "params": 1, 
    "int": 2, 
    "return 0": 1, 
    ".*\\-": 2, 
    "return": 1
  }, 
  "pana_cs6_page_decoder": {
    "void": 1, 
    "uchar *": 1, 
    "uint": 1, 
    "params": 3, 
    ".*\\+ 0x.*": 3, 
    ".*\\+ param": 1, 
    "return;": 1, 
    "pana_cs6_page_decoder *": 1, 
    ".*\\+ 0x.* param": 1, 
    "return": 0, 
    ".*\\+": 3
  }, 
  "__sort_heap<__gnu_cxx::__normal_iterator<p1_row_info_t*,std::vector<p1_row_info_t,std::allocator<p1_row_info_t>>>,__gnu_cxx::__ops::_Iter_less_iter>": {
    "void": 1, 
    "params": 3, 
    "return;": 1, 
    "while(.*)": 1, 
    ".*\\-": 1, 
    "__normal_iterator": 2, 
    "_Iter_less_iter *": 1, 
    "return": 0
  }, 
  "move_backward<__gnu_cxx::__normal_iterator<p1_row_info_t*,std::vector<p1_row_info_t,std::allocator<p1_row_info_t>>>,__gnu_cxx::__normal_iterator<p1_row_info_t*,std::vector<p1_row_info_t,std::allocator<p1_row_info_t>>>>": {
    "params": 3, 
    ".*\\-": 1, 
    "__normal_iterator": 3, 
    "return": 1
  }, 
  "p1_row_info_t": {
    "void": 1, 
    "params": 2, 
    ".*\\+ 0x.*": 1, 
    "p1_row_info_t *": 2, 
    ".*\\+ param": 1, 
    "return;": 1, 
    "= .*\\+ param": 1, 
    ".*\\+ 0x.* param": 1, 
    "return": 0, 
    ".*\\+": 3, 
    "= .*\\+": 2
  }, 
  "data": {
    "void": 1, 
    "params": 1, 
    "return;": 1, 
    "vector<unsigned_char,std::allocator<unsigned_char>> *": 1, 
    "return": 0
  }, 
  "_M_default_initialize": {
    "void": 1, 
    "label": "init", 
    "uint": 1, 
    "params": 2, 
    ".*\\+ param": 1, 
    "return;": 1, 
    "vector<unsigned_char,std::allocator<unsigned_char>> *": 1, 
    "return": 0, 
    ".*\\+": 1
  }, 
  "fill_n<unsigned_char*,unsigned_int,unsigned_char>": {
    "uchar *": 2, 
    "label": "fill", 
    "uint": 1, 
    "params": 3, 
    "char": 1, 
    ".*\\-": 1, 
    "return": 1
  }, 
  "__addressof<p1_row_info_t>": {
    "label": "add", 
    "params": 1, 
    "p1_row_info_t *": 1, 
    ".*\\-": 1, 
    "return": 1
  }, 
  "_Destroy<unsigned_char*,unsigned_char>": {
    "void": 1, 
    "uchar *": 2, 
    "label": "destroy", 
    "params": 3, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    "allocator *": 1
  }, 
  "move<__gnu_cxx::__ops::_Iter_less_iter&>": {
    "params": 1, 
    ".*\\-": 1, 
    "_Iter_less_iter *": 1, 
    "return": 1
  }, 
  "nikon_14bit_load_raw": {
    "for (.*) param": 1, 
    "malloc(.*) param": 1, 
    "if (.* < .*)": 1, 
    "if (.* == 0) param": 1, 
    ".*\\+ 0x.*": 8, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 1, 
    "while(.*)": 1, 
    "for (.*)": 1, 
    ".*\\-": 2, 
    "= .*\\+ param": 1, 
    ".*\\+": 12, 
    "if (.* < \\d*)": 1, 
    "void": 1, 
    "break": 1, 
    "label": "load", 
    "params": 1, 
    "malloc(.*)": 1, 
    "if (.*) param": 1, 
    "return;": 1, 
    "if (.*)": 3, 
    ".*\\+ 0x.* param": 1, 
    "LibRaw *": 1, 
    "return": 0, 
    "= .*\\+": 8
  }, 
  "_ZSt8__fill_aIhEN9__gnu_cxx11__enable_ifIXsr9__is_byteIT_EE7__valueEvE6__typeEPS2_S5_RKS2_": {
    "if (.* != 0)": 1, 
    "void": 1, 
    "label": "fill", 
    "params": 0, 
    "memset(.*)": 1, 
    "return;": 1, 
    ".*\\-": 2, 
    "if (.*)": 1, 
    "return": 0
  }, 
  "__miter_base<__gnu_cxx::__normal_iterator<p1_row_info_t*,std::vector<p1_row_info_t,std::allocator<p1_row_info_t>>>>": {
    "params": 1, 
    ".*\\-": 1, 
    "__normal_iterator": 1, 
    "return": 1
  }, 
  "_M_default_append": {
    "if (.* != 0)": 1, 
    "if (.* != 0) param": 1, 
    "if (.* < \\d*)": 1, 
    "void": 1, 
    "if (.* < .*)": 1, 
    "uint": 1, 
    "params": 2, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "return;": 1, 
    "vector<unsigned_char,std::allocator<unsigned_char>> *": 1, 
    ".*\\-": 2, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 3, 
    "return": 0, 
    ".*\\+": 9, 
    "= .*\\+": 6, 
    ".*\\- param": 1
  }, 
  "_Vector_base": {
    "_Vector_base<unsigned_char,std::allocator<unsigned_char>> *": 1, 
    "uint": 1, 
    "params": 3, 
    "char": 1, 
    "return": 1, 
    "allocator *": 1
  }, 
  "__insertion_sort<__gnu_cxx::__normal_iterator<p1_row_info_t*,std::vector<p1_row_info_t,std::allocator<p1_row_info_t>>>,__gnu_cxx::__ops::_Iter_less_iter>": {
    "void": 1, 
    "params": 3, 
    "_Iter_less_iter": 1, 
    "return;": 1, 
    "while(.*)": 1, 
    ".*\\-": 1, 
    "if (.*)": 2, 
    "__normal_iterator": 2, 
    "return": 0
  }, 
  "_M_check_len": {
    "if (.* < \\d*)": 1, 
    "if (.* < .*)": 1, 
    "label": "check", 
    "uint": 2, 
    "params": 3, 
    "int": 1, 
    "if (.*) param": 1, 
    "vector<unsigned_char,std::allocator<unsigned_char>> *": 1, 
    "char *": 1, 
    ".*\\-": 1, 
    "if (.*)": 2, 
    "return": 1, 
    ".*\\+": 2, 
    "= .*\\+": 2
  }, 
  "_S_relocate": {
    "void": 1, 
    "uchar *": 3, 
    "params": 4, 
    "return;": 1, 
    "return": 0, 
    "allocator *": 1
  }, 
  "unpacked_load_raw_fuji_f700s20": {
    "for (.*) param": 1, 
    "if (.* != 0)": 1, 
    "if (.* != 0) param": 1, 
    "malloc(.*) param": 1, 
    "void": 1, 
    "label": "load", 
    "params": 1, 
    ".*\\+ 0x.*": 5, 
    "malloc(.*)": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "return;": 1, 
    "for (.*)": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 1, 
    ".*\\+ 0x.* param": 1, 
    "return": 0, 
    "LibRaw *": 1, 
    ".*\\+": 6, 
    "= .*\\+": 3
  }, 
  "COLOR": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "if (.* == 0) param": 1, 
    "params": 3, 
    ".*\\+ 0x.*": 2, 
    "int": 2, 
    "undefined": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 2, 
    "if (.* < .*) param": 1, 
    "if (.*)": 3, 
    ".*\\+ 0x.* param": 1, 
    "return": 1, 
    "LibRaw *": 1, 
    ".*\\+": 3
  }, 
  "~_Vector_base": {
    "_Vector_base<p1_row_info_t,std::allocator<p1_row_info_t>> *": 1, 
    "label": "~", 
    "params": 1, 
    ".*\\+ param": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\+": 1, 
    ".*\\- param": 1
  }, 
  "__uninitialized_default_n_a<unsigned_char*,unsigned_int,unsigned_char>": {
    "uchar *": 1, 
    "label": "init", 
    "uint": 1, 
    "params": 3, 
    "char": 1, 
    ".*\\-": 1, 
    "return": 1, 
    "allocator *": 1
  }, 
  "__move_median_to_first<__gnu_cxx::__normal_iterator<p1_row_info_t*,std::vector<p1_row_info_t,std::allocator<p1_row_info_t>>>,__gnu_cxx::__ops::_Iter_less_iter>": {
    "void": 1, 
    "params": 5, 
    "_Iter_less_iter": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "if (.*)": 5, 
    "__normal_iterator": 4, 
    "return": 0
  }, 
  "__niter_base<p1_row_info_t*,std::vector<p1_row_info_t,std::allocator<p1_row_info_t>>>": {
    "params": 1, 
    ".*\\-": 1, 
    "__normal_iterator": 1, 
    "return": 1
  }, 
  "__unguarded_partition<__gnu_cxx::__normal_iterator<p1_row_info_t*,std::vector<p1_row_info_t,std::allocator<p1_row_info_t>>>,__gnu_cxx::__ops::_Iter_less_iter>": {
    "break": 1, 
    "params": 4, 
    "_Iter_less_iter": 1, 
    "while(.*)": 3, 
    ".*\\-": 1, 
    "if (.*)": 1, 
    "__normal_iterator": 3, 
    "return": 1
  }, 
  "operator!=": {
    "params": 2, 
    "return": 1, 
    "__normal_iterator *": 2
  }, 
  "__copy_move_backward_a2<true,__gnu_cxx::__normal_iterator<p1_row_info_t*,std::vector<p1_row_info_t,std::allocator<p1_row_info_t>>>,__gnu_cxx::__normal_iterator<p1_row_info_t*,std::vector<p1_row_info_t,std::allocator<p1_row_info_t>>>>": {
    "label": "copy", 
    "params": 3, 
    ".*\\-": 1, 
    "__normal_iterator": 3, 
    "return": 1
  }, 
  "__make_heap<__gnu_cxx::__normal_iterator<p1_row_info_t*,std::vector<p1_row_info_t,std::allocator<p1_row_info_t>>>,__gnu_cxx::__ops::_Iter_less_iter>": {
    "if (.* < \\d*)": 1, 
    "void": 1, 
    "if (.* < .*)": 1, 
    "break": 1, 
    "label": "make", 
    "params": 3, 
    "if (.* == 0)": 1, 
    "return;": 1, 
    "while(.*)": 1, 
    ".*\\-": 4, 
    "if (.*)": 2, 
    "__normal_iterator": 2, 
    "_Iter_less_iter *": 1, 
    "return": 0, 
    ".*\\+": 2, 
    "= .*\\+": 1
  }, 
  "_ZSt10__fill_n_aIjhEN9__gnu_cxx11__enable_ifIXsr9__is_byteIT0_EE7__valueEPS2_E6__typeES3_T_RKS2_": {
    "label": "fill", 
    "params": 0, 
    "int": 1, 
    "return": 1, 
    ".*\\+": 2
  }, 
  "__iter_less_iter": {
    "void": 1, 
    "params": 0, 
    "return;": 1, 
    "return": 0
  }, 
  "__niter_wrap<__gnu_cxx::__normal_iterator<p1_row_info_t*,std::vector<p1_row_info_t,std::allocator<p1_row_info_t>>>,p1_row_info_t*>": {
    "params": 2, 
    "p1_row_info_t *": 1, 
    ".*\\-": 2, 
    "__normal_iterator": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "unpack7bytesto4x16": {
    "void": 1, 
    "uchar *": 1, 
    "label": "test", 
    "params": 2, 
    "ushort *": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "fill": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "iiq_bitstream_t *": 1, 
    "void": 1, 
    "if (.* < .*)": 1, 
    "label": "fill", 
    "params": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "return;": 1, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 1, 
    "return": 0, 
    ".*\\+": 4, 
    "= .*\\+": 3
  }, 
  "hasselblad_full_load_raw": {
    "for (.*) param": 1, 
    "void": 1, 
    "label": "load", 
    "params": 1, 
    ".*\\+ 0x.*": 5, 
    ".*\\+ param": 1, 
    "return;": 1, 
    "for (.*)": 2, 
    "= .*\\+ param": 1, 
    ".*\\+ 0x.* param": 1, 
    "return": 0, 
    "LibRaw *": 1, 
    ".*\\+": 8, 
    "= .*\\+": 2
  }, 
  "max_size": {
    "params": 0, 
    "undefined": 1, 
    "return": 1
  }, 
  "_Destroy<p1_row_info_t*>": {
    "void": 1, 
    "label": "destroy", 
    "params": 2, 
    "p1_row_info_t *": 2, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0
  }, 
  "iiq_bitstream_t": {
    "iiq_bitstream_t *": 1, 
    "void": 1, 
    "uint *": 1, 
    "params": 2, 
    ".*\\+ param": 1, 
    "return;": 1, 
    "return": 0, 
    ".*\\+": 2
  }, 
  "__uninitialized_default_n<p1_row_info_t*,unsigned_int>": {
    "label": "init", 
    "uint": 1, 
    "params": 2, 
    "p1_row_info_t *": 1, 
    ".*\\-": 1, 
    "return": 1
  }, 
  "__uninitialized_default_n<unsigned_char*,unsigned_int>": {
    "uchar *": 1, 
    "label": "init", 
    "uint": 1, 
    "params": 2, 
    "char": 1, 
    ".*\\-": 1, 
    "return": 1
  }, 
  "_Iter_less_val": {
    "params": 2, 
    "_Iter_less_iter": 1, 
    "_Iter_less_val *": 1, 
    "return": 1
  }, 
  "decode_S_type": {
    "if (.* < \\d*)": 7, 
    "void": 1, 
    "if (.* < .*)": 7, 
    "uint *": 1, 
    "params": 3, 
    "int": 1, 
    "ushort *": 1, 
    "return;": 1, 
    "while(.*)": 1, 
    "memcpy(.*)": 2, 
    "for (.*)": 2, 
    ".*\\-": 10, 
    "if (.*)": 8, 
    "return": 0, 
    ".*\\+": 14, 
    "= .*\\+": 12
  }, 
  "_Construct<p1_row_info_t>": {
    "void": 1, 
    "params": 1, 
    "p1_row_info_t *": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0
  }, 
  "__heap_select<__gnu_cxx::__normal_iterator<p1_row_info_t*,std::vector<p1_row_info_t,std::allocator<p1_row_info_t>>>,__gnu_cxx::__ops::_Iter_less_iter>": {
    "void": 1, 
    "label": "select", 
    "params": 4, 
    "_Iter_less_iter": 1, 
    "return;": 1, 
    "while(.*)": 1, 
    ".*\\-": 1, 
    "if (.*)": 1, 
    "__normal_iterator": 3, 
    "return": 0
  }, 
  "nikon_load_striped_packed_raw": {
    "for (.*) param": 1, 
    "if (.* != 0)": 1, 
    "if (.* < .*)": 4, 
    ".*\\+ 0x.*": 14, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 2, 
    "while(.*)": 1, 
    "for (.*)": 4, 
    ".*\\-": 11, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    ".*\\+": 20, 
    "if (.* < \\d*)": 4, 
    "void": 1, 
    "break": 1, 
    "label": "load", 
    "params": 1, 
    "if (.*) param": 1, 
    "return;": 2, 
    "if (.*)": 9, 
    ".*\\+ 0x.* param": 1, 
    "LibRaw *": 1, 
    "return": 0, 
    "= .*\\+": 14
  }, 
  "_Vector_impl": {
    "_Vector_impl *": 1, 
    "params": 2, 
    "return": 1, 
    "allocator *": 1
  }, 
  "FC": {
    "uint": 1, 
    "params": 3, 
    ".*\\+ 0x.*": 1, 
    "int": 3, 
    ".*\\+ param": 1, 
    ".*\\+ 0x.* param": 1, 
    "return": 1, 
    "LibRaw *": 1, 
    ".*\\+": 1
  }, 
  "_M_erase_at_end": {
    "void": 1, 
    "uchar *": 1, 
    "params": 2, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "return;": 1, 
    "vector<unsigned_char,std::allocator<unsigned_char>> *": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 1, 
    "return": 0, 
    ".*\\+": 3, 
    "= .*\\+": 1
  }, 
  "__uninit_default_n<p1_row_info_t*,unsigned_int>": {
    "for (.*) param": 1, 
    "label": "init", 
    "uint": 1, 
    "params": 2, 
    ".*\\+ 0x.*": 1, 
    "p1_row_info_t *": 1, 
    "for (.*)": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "_Vector_impl_data": {
    "void": 1, 
    "params": 1, 
    ".*\\+ param": 1, 
    "return;": 1, 
    "return": 0, 
    ".*\\+": 2, 
    "_Vector_impl_data *": 1
  }, 
  "nikon_load_padded_packed_raw": {
    "for (.*) param": 1, 
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "malloc(.*) param": 1, 
    "void": 1, 
    "if (.* < .*)": 1, 
    "label": "load", 
    "params": 1, 
    ".*\\+ 0x.*": 6, 
    "malloc(.*)": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "return;": 1, 
    "for (.*)": 2, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 1, 
    ".*\\+ 0x.* param": 1, 
    "return": 0, 
    "LibRaw *": 1, 
    ".*\\+": 12, 
    "= .*\\+": 4
  }, 
  "__relocate_a<unsigned_char*,unsigned_char*,std::allocator<unsigned_char>>": {
    "uchar *": 3, 
    "params": 4, 
    "char": 1, 
    ".*\\-": 1, 
    "return": 1, 
    "allocator *": 1
  }, 
  "_Destroy<unsigned_char*>": {
    "void": 1, 
    "uchar *": 2, 
    "label": "destroy", 
    "params": 2, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0
  }, 
  "nextpixel12": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "params": 1, 
    "undefined": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "pana_cs6_page_decoder *": 1, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 1, 
    "return": 1, 
    ".*\\+": 2, 
    "= .*\\+": 2
  }, 
  "end": {
    "params": 1, 
    "vector<p1_row_info_t,std::allocator<p1_row_info_t>> *": 1, 
    "undefined": 1, 
    ".*\\+ param": 1, 
    "return": 1, 
    ".*\\+": 1
  }, 
  "__sort<__gnu_cxx::__normal_iterator<p1_row_info_t*,std::vector<p1_row_info_t,std::allocator<p1_row_info_t>>>,__gnu_cxx::__ops::_Iter_less_iter>": {
    "void": 1, 
    "params": 3, 
    "_Iter_less_iter": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "if (.*)": 1, 
    "__normal_iterator": 2, 
    "return": 0
  }, 
  "min<unsigned_int>": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "uint *": 2, 
    "uint": 1, 
    "params": 2, 
    "int": 1, 
    "if (.*) param": 1, 
    ".*\\-": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "panasonicC6_load_raw": {
    "if (.* != 0)": 5, 
    "if (.* < .*)": 4, 
    ".*\\+ 0x.*": 11, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 5, 
    "memset(.*)": 2, 
    "while(.*)": 1, 
    "for (.*)": 3, 
    ".*\\-": 7, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    ".*\\+": 21, 
    "if (.* < \\d*)": 4, 
    "if (.* < \\d*) param": 1, 
    "void": 1, 
    "break": 1, 
    "label": "load", 
    "params": 1, 
    "if (.*) param": 1, 
    "return;": 1, 
    "if (.*)": 18, 
    ".*\\+ 0x.* param": 1, 
    "LibRaw *": 1, 
    "return": 0, 
    ".*\\- param": 1, 
    "= .*\\+": 12
  }, 
  "operator()": {
    "params": 3, 
    "p1_row_info_t *": 1, 
    "_Val_less_iter *": 1, 
    "__normal_iterator": 1, 
    "return": 1
  }, 
  "_S_check_init_len": {
    "if (.* < \\d*)": 1, 
    "if (.* < .*)": 1, 
    "label": "init", 
    "uint": 2, 
    "params": 2, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 1, 
    "return": 1, 
    "allocator *": 1
  }, 
  "_M_allocate": {
    "_Vector_base<p1_row_info_t,std::allocator<p1_row_info_t>> *": 1, 
    "if (.* == 0) param": 1, 
    "uint": 1, 
    "params": 2, 
    "undefined": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "_M_get_Tp_allocator": {
    "_Vector_base<p1_row_info_t,std::allocator<p1_row_info_t>> *": 1, 
    "label": "get", 
    "params": 1, 
    "return": 1
  }, 
  "resize": {
    "if (.* < \\d*)": 2, 
    "if (.* < \\d*) param": 1, 
    "void": 1, 
    "if (.* < .*)": 2, 
    "uint": 1, 
    "params": 2, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "return;": 1, 
    "vector<unsigned_char,std::allocator<unsigned_char>> *": 1, 
    ".*\\-": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 2, 
    "return": 0, 
    ".*\\- param": 1, 
    ".*\\+": 1
  }, 
  "swab32arr": {
    "for (.*) param": 1, 
    "void": 1, 
    "uint *": 1, 
    "uint": 1, 
    "params": 2, 
    ".*\\+ param": 1, 
    "return;": 1, 
    "for (.*)": 1, 
    "= .*\\+ param": 1, 
    "return": 0, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "__normal_iterator": {
    "void": 1, 
    "__normal_iterator<p1_row_info_t*,std::vector<p1_row_info_t,std::allocator<p1_row_info_t>>> *": 1, 
    "params": 2, 
    "return;": 1, 
    "p1_row_info_t * *": 1, 
    "return": 0
  }, 
  "_ZSt14__relocate_a_1IhhENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS1_E4typeES2_S2_S2_RSaIT0_E": {
    "if (.* < \\d*)": 1, 
    "if (.* < .*)": 1, 
    "params": 0, 
    "int": 1, 
    ".*\\-": 1, 
    "if (.*)": 1, 
    "return": 1, 
    ".*\\+": 1
  }, 
  "base": {
    "__normal_iterator<p1_row_info_t*,std::vector<p1_row_info_t,std::allocator<p1_row_info_t>>> *": 1, 
    "params": 1, 
    "return": 1
  }
}