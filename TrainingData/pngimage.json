{
  "compare_read": {
    "if (.* < \\d*)": 2, 
    "if (.* != 0)": 1, 
    "string": [
      "png_get_IHDR failed", 
      "IHDR width(%lu) changed to %lu", 
      "IHDR height(%lu) changed to %lu", 
      "IHDR bit_depth(%lu) changed to %lu", 
      "IHDR color_type(%lu) changed to %lu", 
      "IHDR interlace_method(%lu) changed to %lu", 
      "IHDR compression_method(%lu) changed to %lu", 
      "IHDR filter_method(%lu) changed to %lu", 
      "IHDR changed (%s)", 
      "PNG chunks changed from 0x%lx to 0x%lx", 
      "PNG rowbytes changed from %lu to %lu", 
      "png_get_rows returned NULL", 
      "byte(%lu,%lu) changed 0x%.2x -> 0x%.2x", 
      "active shift transform but no sBIT in file", 
      "invalid colour type %d", 
      "invalid sBIT[%u]  value %d returned for PNG bit depth %d", 
      "invalid bpp %u for bit_depth %u", 
      "invalid bit depth %d", 
      "mask calculation error %u, %u", 
      "significant bits at (%lu[%u],%lu) changed %.2x->%.2x", 
      "significant bits at (%lu[end],%lu) changed"
    ], 
    "if (.* < .*)": 2, 
    "break": 9, 
    "= .*\\+.*\\+ 0x.*": 3, 
    "label": "read", 
    "param1": "display", 
    "int": 103, 
    "param2": "int", 
    "if (.* == 0)": 3, 
    "memset(.*)": 1, 
    "return 0": 3, 
    "for (.*)": 10, 
    "char *": 11, 
    ".*\\-": 9, 
    "if (.*)": 21, 
    "return": "int", 
    ".*\\+": 51, 
    "case": 9
  }, 
  "display_error": {
    "label": "error", 
    "param1": "png_structp", 
    "param2": "png_const_charp", 
    "return;": 1, 
    "char *": 1, 
    "return": "void"
  }, 
  "main": {
    "if (.* < \\d*)": 1, 
    "if (.* != 0)": 3, 
    "fprintf(.*)": 1, 
    "string": [
      "%s: pngimage ", 
      "--verbose", 
      "--warnings", 
      "--errors", 
      "--quiet", 
      "--exhaustive", 
      "--fast", 
      "--strict", 
      "--relaxed", 
      "--log", 
      "--nolog", 
      "--continue", 
      "--stop", 
      "--skip-bugs", 
      "--test-all", 
      "--log-skipped", 
      "--nolog-skipped", 
      "--find-bad-combos", 
      "--nofind-bad-combos", 
      "--list-combos", 
      "--nolist-combos", 
      "pngimage: %s: unknown option\\n"
    ], 
    "if (.* < .*)": 1, 
    "break": 1, 
    "label": "main", 
    "param1": "int", 
    "int": 20, 
    "param2": "char", 
    "if (.* == 0)": 21, 
    "while(.*)": 2, 
    "goto": 1, 
    "for (.*)": 1, 
    "char *": 6, 
    "printf(.*)": 4, 
    ".*\\-": 21, 
    "if (.*)": 29, 
    "return": "int", 
    ".*\\+": 7
  }, 
  "validate_T": {
    "if (.* != 0)": 2, 
    "label": "validate", 
    "param1": "void);", 
    "int": 2, 
    "return;": 1, 
    "for (.*)": 1, 
    "char *": 1, 
    "if (.*)": 3, 
    "return": "void", 
    ".*\\+": 1
  }, 
  "do_test": {
    "if (.* < \\d*)": 1, 
    "string": [
      "unexpected return code %d"
    ], 
    "if (.* < .*)": 1, 
    "setjmp(.*)": 1, 
    "label": "test", 
    "param1": "display", 
    "int": 2, 
    "param2": "char", 
    "if (.* == 0)": 1, 
    "if (.*)": 2, 
    "return": "int"
  }, 
  "buffer_init": {
    "label": "init", 
    "param1": "buffer", 
    "return;": 1, 
    ".*\\-": 3, 
    "return": "void"
  }, 
  "read_png": {
    "string": [
      "failed to create read struct", 
      "failed to create info struct"
    ], 
    "label": "read", 
    "param3": "char", 
    "param4": "int", 
    "param1": "display", 
    "param2": "buffer", 
    "return;": 1, 
    "char *": 1, 
    ".*\\-": 4, 
    "if (.*)": 3, 
    "return": "void"
  }, 
  "buffer_start_read": {
    "label": "read", 
    "param1": "buffer", 
    "return;": 1, 
    ".*\\-": 2, 
    "return": "void"
  }, 
  "buffer_read": {
    "if (.* < \\d*)": 2, 
    "string": [
      "file truncated (%lu bytes)", 
      "damaged buffer list"
    ], 
    "if (.* < .*)": 2, 
    "label": "read", 
    "param3": "png_bytep", 
    "param4": "size_t", 
    "param1": "display", 
    "int": 1, 
    "param2": "buffer", 
    "if (.* == 0)": 1, 
    "return;": 1, 
    "goto": 2, 
    "while(.*)": 1, 
    "memcpy(.*)": 1, 
    ".*\\-": 9, 
    "if (.*)": 5, 
    "return": "void", 
    ".*\\+": 3
  }, 
  "display_cache_file": {
    "if (.* != 0)": 1, 
    "string": [
      "open failed: %s", 
      "read failed: %s"
    ], 
    "label": "cache", 
    "param1": "display", 
    "int": 3, 
    "param2": "char", 
    "return;": 1, 
    "char *": 3, 
    ".*\\-": 2, 
    "if (.*)": 3, 
    "return": "void"
  }, 
  "read_function": {
    "label": "read", 
    "param3": "size_t", 
    "param1": "png_structp", 
    "param2": "png_bytep", 
    "return;": 1, 
    "return": "void"
  }, 
  "buffer_from_file": {
    "if (.* != 0)": 2, 
    "string": [
      "count == sizeof last->buffer", 
      "/home/benterra/Desktop/Finished_ARM_Compilations/libpng/arm-libpng-libpng16/contrib/libtests/pngimage.c", 
      "int buffer_from_file(struct buffer *, FILE *)"
    ], 
    "break": 1, 
    "param1": "buffer", 
    "int": 5, 
    "param2": "FILE", 
    "if (.* == 0)": 2, 
    "while(.*)": 2, 
    "return 0": 2, 
    ".*\\-": 8, 
    "if (.*)": 6, 
    "feof(.*)": 1, 
    "return": "int", 
    ".*\\+": 2
  }, 
  "get_dp": {
    "fprintf(.*)": 1, 
    "string": [
      "pngimage: internal error (no display)\\n"
    ], 
    "label": "get", 
    "param1": "png_structp", 
    "int": 2, 
    "printf(.*)": 1, 
    "if (.*)": 1, 
    "return": "display"
  }, 
  "display_clean_read": {
    "label": "read", 
    "param1": "display", 
    "return;": 1, 
    ".*\\-": 2, 
    "if (.*)": 1, 
    "return": "void"
  }, 
  "display_warning": {
    "param1": "png_structp", 
    "param2": "png_const_charp", 
    "return;": 1, 
    "char *": 1, 
    "return": "void"
  }, 
  "display_clean": {
    "label": "clean", 
    "param1": "display", 
    "return;": 1, 
    ".*\\-": 5, 
    "return": "void"
  }, 
  "buffer_extend": {
    "string": [
      "current->next == NULL", 
      "/home/benterra/Desktop/Finished_ARM_Compilations/libpng/arm-libpng-libpng16/contrib/libtests/pngimage.c", 
      "struct buffer_list *buffer_extend(struct buffer_list *)"
    ], 
    "param1": "buffer_list", 
    "malloc(.*)": 1, 
    ".*\\-": 5, 
    "if (.*)": 2, 
    "return": "buffer_list"
  }, 
  "skip_transform": {
    "if (.* != 0)": 1, 
    "string": [
      "%s: skipped known bad combo 0x%x", 
      "SKIP: %s transforms "
    ], 
    "label": "transform", 
    "param1": "display", 
    "int": 7, 
    "param2": "int", 
    "if (.* == 0)": 2, 
    "while(.*)": 1, 
    "char *": 4, 
    ".*\\-": 4, 
    "printf(.*)": 2, 
    "if (.*)": 3, 
    "return": "int"
  }, 
  "write_function": {
    "label": "write", 
    "param3": "size_t", 
    "param1": "png_structp", 
    "param2": "png_bytep", 
    "return;": 1, 
    "return": "void"
  }, 
  "buffer_destroy_list": {
    "label": "destroy", 
    "param1": "buffer_list", 
    "return;": 1, 
    ".*\\-": 1, 
    "if (.*)": 1, 
    "return": "void"
  }, 
  "get_buffer": {
    "label": "get", 
    "param1": "png_structp", 
    "return": "buffer"
  }, 
  "buffer_write": {
    "if (.* < \\d*)": 2, 
    "string": [
      "out of memory saving file"
    ], 
    "if (.* < .*)": 2, 
    "label": "write", 
    "param3": "png_bytep", 
    "param4": "size_t", 
    "param1": "display", 
    "int": 1, 
    "param2": "buffer", 
    "return;": 1, 
    "memcpy(.*)": 1, 
    "for (.*)": 1, 
    ".*\\-": 9, 
    "if (.*)": 4, 
    "return": "void", 
    ".*\\+": 3
  }, 
  "is_bad_combo": {
    "break": 1, 
    "param1": "int", 
    "int": 2, 
    "while(.*)": 1, 
    "return 0": 1, 
    "if (.*)": 2, 
    "return": "int"
  }, 
  "display_init": {
    "label": "init", 
    "param1": "display", 
    "memset(.*)": 1, 
    "return;": 1, 
    "char *": 2, 
    ".*\\-": 11, 
    "return": "void"
  }, 
  "display_clean_write": {
    "label": "clean", 
    "param1": "display", 
    "return;": 1, 
    ".*\\-": 2, 
    "if (.*)": 1, 
    "return": "void"
  }, 
  "test_one_file": {
    "if (.* != 0)": 4, 
    "if (.* < \\d*)": 1, 
    "string": [
      "cache file", 
      "ignored transforms", 
      "write", 
      "active transforms", 
      "reversible transforms", 
      "(next & read_transforms) == next", 
      "/home/benterra/Desktop/Finished_ARM_Compilations/libpng/arm-libpng-libpng16/contrib/libtests/pngimage.c", 
      "void test_one_file(struct display *, const char *)", 
      "", 
      "additional ", 
      "%s: no %sbad combos found\\n", 
      "%s[0x%x]: PROBLEM: 0x%x[0x%x] ANTIDOTE: 0x%x\\n"
    ], 
    "break": 2, 
    "if (.* < .*)": 1, 
    "label": "test", 
    "param1": "display", 
    "int": 16, 
    "param2": "char", 
    "if (.* == 0)": 6, 
    "return;": 2, 
    "while(.*)": 3, 
    "goto": 1, 
    "char *": 4, 
    ".*\\-": 18, 
    "printf(.*)": 2, 
    "if (.*)": 14, 
    "return": "void", 
    ".*\\+": 1
  }, 
  "display_destroy": {
    "label": "destroy", 
    "param1": "display", 
    "return;": 1, 
    ".*\\-": 2, 
    "return": "void"
  }, 
  "is_combo": {
    "param1": "int", 
    ".*\\-": 1, 
    "return": "int"
  }, 
  "display_log": {
    "if (.* < \\d*)": 2, 
    "fprintf(.*)": 10, 
    "if (.* != 0)": 2, 
    "string": [
      "<stdin>", 
      "%s: %s: %s", 
      "(0x%x)"
    ], 
    "if (.* < .*)": 2, 
    "break": 8, 
    "vfprintf(.*)": 1, 
    "param3": "char", 
    "param4": "...);", 
    "param1": "display", 
    "int": 25, 
    "param2": "error_level", 
    "if (.* == 0)": 3, 
    "return;": 1, 
    "for (.*)": 1, 
    "char *": 11, 
    ".*\\-": 11, 
    "printf(.*)": 10, 
    "if (.*)": 8, 
    "return": "void", 
    "case": 13
  }, 
  "update_display": {
    "if (.* != 0)": 1, 
    "string": [
      "original read", 
      "png_get_rowbytes returned 0", 
      "png_read_png did not set IDAT flag", 
      "png_read_png did not create row buffers", 
      "png_get_IHDR failed"
    ], 
    "label": "update", 
    "param1": "display", 
    "int": 17, 
    "if (.* == 0)": 4, 
    "return;": 1, 
    "for (.*)": 1, 
    "char *": 1, 
    ".*\\-": 21, 
    "if (.*)": 7, 
    "return": "void", 
    ".*\\+": 1
  }, 
  "first_transform": {
    "label": "transform", 
    "param1": "int", 
    ".*\\-": 1, 
    "return": "int"
  }, 
  "buffer_start_write": {
    "label": "write", 
    "param1": "buffer", 
    "return;": 1, 
    ".*\\-": 3, 
    "return": "void"
  }, 
  "transform_name": {
    "if (.* < \\d*)": 1, 
    "string": [
      "invalid transform"
    ], 
    "if (.* < .*)": 1, 
    "break": 1, 
    "label": "transform", 
    "param1": "int", 
    "int": 2, 
    "while(.*)": 1, 
    "char *": 2, 
    ".*\\-": 1, 
    "if (.*)": 2, 
    "return": "char", 
    ".*\\+": 1
  }, 
  "write_png": {
    "if (.* != 0)": 2, 
    "string": [
      "write", 
      "failed to create write png_struct"
    ], 
    "label": "write", 
    "param3": "int", 
    "param1": "display", 
    "int": 3, 
    "param2": "png_infop", 
    "return;": 1, 
    ".*\\-": 11, 
    "if (.*)": 3, 
    "return": "void"
  }, 
  "buffer_destroy": {
    "label": "destroy", 
    "param1": "buffer", 
    "return;": 1, 
    ".*\\-": 1, 
    "return": "void"
  }
}