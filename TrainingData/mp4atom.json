{
  "_List_base": {
    "void": 1, 
    "_List_base<TagLib::MP4::Atom_*,_std::allocator<TagLib::MP4::Atom_*>_> *": 1, 
    "_Node_alloc_type *": 1, 
    "params": 2, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "deallocate": {
    "pointer": 1, 
    "void": 1, 
    "size_type": 1, 
    "new_allocator<std::_List_node<TagLib::MP4::Atom_*>_> *": 1, 
    "delete(.*)": 1, 
    "params": 3, 
    "delete(.*) param": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "allocator<TagLib::MP4::Atom_*>": {
    "void": 1, 
    "params": 2, 
    "allocator<TagLib::MP4::Atom_*> *": 1, 
    "allocator<std::_List_node<TagLib::MP4::Atom_*>_> *": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "_M_get_Node_allocator": {
    "_List_base<TagLib::MP4::Atom_*,_std::allocator<TagLib::MP4::Atom_*>_> *": 1, 
    "label": "get", 
    "params": 1, 
    "return": 1
  }, 
  "construct": {
    "pointer": 1, 
    "void": 1, 
    "params": 3, 
    "new_allocator<TagLib::MP4::Atom_*> *": 1, 
    "return;": 1, 
    "Atom * *": 1, 
    "return": 0
  }, 
  "ListPrivateBase": {
    "void": 1, 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 2, 
    "return": 0, 
    ".*\\- param": 1, 
    "ListPrivateBase *": 1
  }, 
  "_M_clear": {
    "void": 1, 
    "_List_base<TagLib::MP4::Atom_*,_std::allocator<TagLib::MP4::Atom_*>_> *": 1, 
    "while(.*) param": 1, 
    "params": 1, 
    "return;": 1, 
    "while(.*)": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "empty": {
    "params": 1, 
    "list<TagLib::MP4::Atom_*,_std::allocator<TagLib::MP4::Atom_*>_> *": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "_M_transfer": {
    "void": 1, 
    "params": 4, 
    "iterator": 3, 
    "return;": 1, 
    "list<TagLib::MP4::Atom_*,_std::allocator<TagLib::MP4::Atom_*>_> *": 1, 
    "return": 0
  }, 
  "_M_inc_size": {
    "void": 1, 
    "_List_base<TagLib::MP4::Atom_*,_std::allocator<TagLib::MP4::Atom_*>_> *": 1, 
    "size_t": 1, 
    "params": 2, 
    ".*\\+ param": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "= .*\\+ param": 1, 
    "return": 0, 
    ".*\\+": 1, 
    ".*\\- param": 1, 
    "= .*\\+": 1
  }, 
  "path": {
    "if (.* != 0)": 1, 
    "params": 5, 
    "goto": 1, 
    "while(.*)": 1, 
    "char *": 4, 
    ".*\\-": 4, 
    "Atoms *": 1, 
    "if (.*)": 3, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "allocator": {
    "void": 1, 
    "params": 2, 
    "allocator<std::_List_node<TagLib::MP4::Atom_*>_> *": 2, 
    "return;": 1, 
    "return": 0
  }, 
  "~ListPrivate": {
    "void": 1, 
    "label": "~", 
    "ListPrivate<TagLib::MP4::Atom_*> *": 1, 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "find": {
    "if (.* != 0)": 1, 
    "break": 1, 
    "params": 5, 
    "while(.*)": 1, 
    "char *": 4, 
    ".*\\-": 3, 
    "Atoms *": 1, 
    "if (.*)": 2, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "List": {
    "void": 1, 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 2, 
    "List<TagLib::MP4::Atom_*> *": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "setAutoDelete": {
    "void": 1, 
    "bool": 1, 
    "label": "set", 
    "params": 2, 
    "return;": 1, 
    ".*\\-": 1, 
    "List<TagLib::MP4::Atom_*> *": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "operator*": {
    "params": 1, 
    "_List_const_iterator<TagLib::MP4::Atom_*> *": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "insert<std::_List_const_iterator<TagLib::MP4::Atom_*>_>": {
    "void": 1, 
    "params": 4, 
    "iterator": 1, 
    "_List_const_iterator<TagLib::MP4::Atom_*>": 2, 
    "return;": 1, 
    "list<TagLib::MP4::Atom_*,_std::allocator<TagLib::MP4::Atom_*>_> *": 1, 
    "return": 0
  }, 
  "_M_init": {
    "void": 1, 
    "_List_base<TagLib::MP4::Atom_*,_std::allocator<TagLib::MP4::Atom_*>_> *": 1, 
    "label": "init", 
    "params": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "ListPrivate": {
    "void": 1, 
    "ListPrivate<TagLib::MP4::Atom_*> *": 1, 
    "params": 2, 
    "return;": 1, 
    "list<TagLib::MP4::Atom_*,_std::allocator<TagLib::MP4::Atom_*>_> *": 1, 
    ".*\\-": 2, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "operator!=": {
    "_Self *": 2, 
    "params": 2, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "_M_const_cast": {
    "params": 1, 
    ".*\\-": 1, 
    "_List_iterator<TagLib::MP4::Atom_*> *": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "_List_iterator": {
    "void": 1, 
    "params": 2, 
    "return;": 1, 
    ".*\\-": 1, 
    "_List_iterator<TagLib::MP4::Atom_*> *": 1, 
    "return": 0, 
    ".*\\- param": 1, 
    "_List_node_base *": 1
  }, 
  "__addressof<TagLib::MP4::Atom_*>": {
    "label": "add", 
    "params": 1, 
    "Atom * *": 1, 
    "return": 1
  }, 
  "new_allocator": {
    "void": 1, 
    "new_allocator<std::_List_node<TagLib::MP4::Atom_*>_> *": 2, 
    "params": 2, 
    "return;": 1, 
    "return": 0
  }, 
  "~Atoms": {
    "void": 1, 
    "label": "~", 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "Atoms *": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "count": {
    "RefCounterOld *": 1, 
    "label": "count", 
    "params": 1, 
    "int": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "destroy": {
    "pointer": 1, 
    "void": 1, 
    "label": "destroy", 
    "params": 2, 
    "new_allocator<TagLib::MP4::Atom_*> *": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "get_allocator": {
    "label": "get", 
    "params": 1, 
    "list<TagLib::MP4::Atom_*,_std::allocator<TagLib::MP4::Atom_*>_> *": 1, 
    "return": 1
  }, 
  "list": {
    "void": 1, 
    "params": 2, 
    "return;": 1, 
    "list<TagLib::MP4::Atom_*,_std::allocator<TagLib::MP4::Atom_*>_> *": 2, 
    ".*\\-": 2, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "max_size": {
    "new_allocator<std::_List_node<TagLib::MP4::Atom_*>_> *": 1, 
    "params": 1, 
    "return": 1
  }, 
  "~List": {
    "void": 1, 
    "delete(.*)": 1, 
    "label": "~", 
    "params": 1, 
    "delete(.*) param": 1, 
    "return;": 1, 
    "List<TagLib::MP4::Atom_*> *": 1, 
    "return": 0
  }, 
  "_M_get_size": {
    "_List_base<TagLib::MP4::Atom_*,_std::allocator<TagLib::MP4::Atom_*>_> *": 1, 
    "label": "get", 
    "params": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "__addressof<TagLib::MP4::Atom_*const>": {
    "label": "add", 
    "params": 1, 
    "Atom * *": 1, 
    "return": 1
  }, 
  "_S_do_it": {
    "params": 2, 
    "allocator<std::_List_node<TagLib::MP4::Atom_*>_> *": 2, 
    "return": 1
  }, 
  "allocate": {
    "if (.* < \\d*)": 1, 
    "size_type": 1, 
    "if (.* < .*)": 1, 
    "new_allocator<std::_List_node<TagLib::MP4::Atom_*>_> *": 1, 
    "params": 3, 
    "int": 1, 
    "if (.*) param": 1, 
    "void *": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "_M_get_node": {
    "_List_base<TagLib::MP4::Atom_*,_std::allocator<TagLib::MP4::Atom_*>_> *": 1, 
    "label": "get", 
    "params": 1, 
    "int": 1, 
    "return": 1
  }, 
  "_M_set_size": {
    "void": 1, 
    "_List_base<TagLib::MP4::Atom_*,_std::allocator<TagLib::MP4::Atom_*>_> *": 1, 
    "label": "set", 
    "size_t": 1, 
    "params": 2, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "_List_const_iterator": {
    "void": 1, 
    "params": 2, 
    "_List_const_iterator<TagLib::MP4::Atom_*> *": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1, 
    "_List_node_base *": 1
  }, 
  "_M_check_equal_allocators": {
    "void": 1, 
    "abort(.*)": 1, 
    "label": "check", 
    "params": 2, 
    "return;": 1, 
    "list<TagLib::MP4::Atom_*,_std::allocator<TagLib::MP4::Atom_*>_> *": 2, 
    ".*\\-": 2, 
    "if (.*)": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "_List_impl": {
    "void": 1, 
    "_List_impl *": 1, 
    "_Node_alloc_type *": 1, 
    "params": 2, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "begin": {
    "params": 1, 
    ".*\\-": 1, 
    "List<TagLib::MP4::Atom_*> *": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "~list": {
    "void": 1, 
    "label": "~", 
    "params": 1, 
    "return;": 1, 
    "list<TagLib::MP4::Atom_*,_std::allocator<TagLib::MP4::Atom_*>_> *": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "RefCounterOld": {
    "void": 1, 
    "RefCounterOld *": 1, 
    "label": "count", 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "_M_create_node": {
    "label": "create", 
    "params": 2, 
    "value_type *": 1, 
    "list<TagLib::MP4::Atom_*,_std::allocator<TagLib::MP4::Atom_*>_> *": 1, 
    ".*\\-": 2, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "deref": {
    "RefCounterOld *": 1, 
    "params": 1, 
    ".*\\-": 2, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "_GLOBAL__sub_I_mp4atom.cpp": {
    "void": 1, 
    "params": 0, 
    "return;": 1, 
    "return": 0
  }, 
  "list<std::_List_const_iterator<TagLib::MP4::Atom_*>_>": {
    "void": 1, 
    "params": 4, 
    "_List_const_iterator<TagLib::MP4::Atom_*>": 2, 
    "allocator_type *": 1, 
    "return;": 1, 
    "list<TagLib::MP4::Atom_*,_std::allocator<TagLib::MP4::Atom_*>_> *": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "operator++": {
    "params": 1, 
    "_List_const_iterator<TagLib::MP4::Atom_*> *": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "~_List_impl": {
    "void": 1, 
    "_List_impl *": 1, 
    "label": "~", 
    "params": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "_M_insert": {
    "void": 1, 
    "params": 3, 
    "value_type *": 1, 
    "iterator": 1, 
    "return;": 1, 
    "list<TagLib::MP4::Atom_*,_std::allocator<TagLib::MP4::Atom_*>_> *": 1, 
    ".*\\-": 2, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "_M_valptr": {
    "params": 1, 
    ".*\\-": 1, 
    "_List_node<TagLib::MP4::Atom_*> *": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "push_back": {
    "void": 1, 
    "params": 2, 
    "value_type *": 1, 
    "return;": 1, 
    "list<TagLib::MP4::Atom_*,_std::allocator<TagLib::MP4::Atom_*>_> *": 1, 
    "return": 0
  }, 
  "__cxx_global_var_init": {
    "void": 1, 
    "label": "init", 
    "params": 0, 
    "return;": 1, 
    "return": 0
  }, 
  "allocator<std::_List_node<TagLib::MP4::Atom_*>_>": {
    "void": 1, 
    "params": 2, 
    "allocator<TagLib::MP4::Atom_*> *": 1, 
    "allocator<std::_List_node<TagLib::MP4::Atom_*>_> *": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "end": {
    "params": 1, 
    ".*\\-": 1, 
    "List<TagLib::MP4::Atom_*> *": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "~new_allocator": {
    "void": 1, 
    "label": "~", 
    "params": 1, 
    "new_allocator<TagLib::MP4::Atom_*> *": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "_List_node_header": {
    "void": 1, 
    "params": 1, 
    "return;": 1, 
    "_List_node_header *": 1, 
    "return": 0
  }, 
  "__clang_call_terminate": {
    "void": 1, 
    "params": 0, 
    "return": 0
  }, 
  "~Atom": {
    "void": 1, 
    "label": "~", 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 2, 
    "Atom *": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "splice": {
    "void": 1, 
    "params": 3, 
    "iterator": 1, 
    "return;": 1, 
    "list<TagLib::MP4::Atom_*,_std::allocator<TagLib::MP4::Atom_*>_> *": 2, 
    ".*\\-": 3, 
    "if (.*)": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "_M_initialize_dispatch<std::_List_const_iterator<TagLib::MP4::Atom_*>_>": {
    "void": 1, 
    "label": "init", 
    "params": 3, 
    "_List_const_iterator<TagLib::MP4::Atom_*>": 2, 
    "return;": 1, 
    "while(.*)": 1, 
    "list<TagLib::MP4::Atom_*,_std::allocator<TagLib::MP4::Atom_*>_> *": 1, 
    "return": 0
  }, 
  "Atoms": {
    "if (.* < \\d*)": 1, 
    "void": 1, 
    "if (.* < .*)": 1, 
    "File *": 1, 
    "params": 2, 
    "return;": 2, 
    "while(.*)": 1, 
    ".*\\-": 4, 
    "Atoms *": 1, 
    "if (.*)": 1, 
    "return": 0, 
    ".*\\- param": 1, 
    ".*\\+": 1
  }, 
  "clear": {
    "void": 1, 
    "params": 1, 
    "return;": 1, 
    "list<TagLib::MP4::Atom_*,_std::allocator<TagLib::MP4::Atom_*>_> *": 1, 
    ".*\\-": 2, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "findall": {
    "if (.* != 0)": 2, 
    "bool": 1, 
    "break": 1, 
    "params": 3, 
    ".*\\+ 0x.*": 2, 
    ".*\\+ param": 1, 
    "while(.*)": 1, 
    "char *": 1, 
    ".*\\-": 1, 
    "= .*\\+ param": 1, 
    "Atom *": 1, 
    "if (.*)": 3, 
    ".*\\+ 0x.* param": 1, 
    "return": 1, 
    ".*\\+": 2, 
    "= .*\\+": 2
  }, 
  "Atom": {
    "if (.* < \\d*)": 3, 
    "if (.* < \\d*) param": 1, 
    "if (.* != 0)": 4, 
    "void": 1, 
    "if (.* < .*)": 3, 
    "if (.* == 0) param": 1, 
    "File *": 1, 
    "params": 2, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 2, 
    "return;": 1, 
    "goto": 8, 
    "while(.*)": 1, 
    "for (.*)": 2, 
    ".*\\-": 25, 
    "if (.* < .*) param": 1, 
    "Atom *": 1, 
    "if (.*)": 12, 
    "return": 0, 
    ".*\\- param": 1, 
    ".*\\+": 11, 
    "= .*\\+": 5
  }, 
  "~allocator": {
    "void": 1, 
    "label": "~", 
    "params": 1, 
    "allocator<std::_List_node<TagLib::MP4::Atom_*>_> *": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "_M_put_node": {
    "pointer": 1, 
    "void": 1, 
    "_List_base<TagLib::MP4::Atom_*,_std::allocator<TagLib::MP4::Atom_*>_> *": 1, 
    "params": 2, 
    "return;": 1, 
    "return": 0
  }, 
  "~_List_base": {
    "void": 1, 
    "_List_base<TagLib::MP4::Atom_*,_std::allocator<TagLib::MP4::Atom_*>_> *": 1, 
    "label": "~", 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "_S_select_on_copy": {
    "label": "copy", 
    "params": 1, 
    "allocator<std::_List_node<TagLib::MP4::Atom_*>_> *": 1, 
    "return": 1
  }, 
  "detach": {
    "if (.* < \\d*)": 1, 
    "void": 1, 
    "if (.* < .*)": 1, 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 4, 
    "if (.*)": 1, 
    "List<TagLib::MP4::Atom_*> *": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "append": {
    "params": 2, 
    ".*\\-": 1, 
    "List<TagLib::MP4::Atom_*> *": 2, 
    "return": 1, 
    ".*\\- param": 1
  }
}