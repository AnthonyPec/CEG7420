{
  "wolfSSL_SetTlsHmacInner": {
    "WOLFSSL *": 1, 
    "memset(.*) param": 1, 
    "byte *": 1, 
    "label": "set", 
    "word32": 1, 
    "params": 5, 
    ".*\\+ 0x.*": 1, 
    "int": 3, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "memset(.*)": 1, 
    ".*\\-": 3, 
    "if (.*)": 1, 
    ".*\\+ 0x.* param": 1, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 1
  }, 
  "TLSX_KeyShare_GetSize": {
    "byte": 1, 
    "label": "get", 
    "KeyShareEntry *": 1, 
    "params": 2, 
    "if (.*) param": 1, 
    "while(.*)": 1, 
    ".*\\-": 3, 
    "if (.*)": 3, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "wolfTLS_server_method": {
    "params": 0, 
    "return": 1
  }, 
  "TLSX_SupportedFFDHE_Set": {
    "if (.* < \\d*)": 1, 
    "if (.* != 0)": 2, 
    "if (.* < .*)": 1, 
    "break": 1, 
    "WOLFSSL *": 1, 
    "label": "set", 
    "params": 1, 
    "int": 1, 
    "for (.*)": 1, 
    ".*\\-": 5, 
    "if (.*)": 6, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 3, 
    "= .*\\+": 2
  }, 
  "versionIsAtLeast": {
    "byte": 3, 
    "params": 3, 
    "int": 1, 
    "return": 1
  }, 
  "TLSX_UseSupportedCurve": {
    "if (.* != 0)": 3, 
    "params": 3, 
    "word16": 1, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "TLSX * *": 1, 
    "void *": 1, 
    ".*\\-": 3, 
    "if (.*)": 7, 
    "return": 1
  }, 
  "TLSX_SignatureAlgorithmsCert_Write": {
    "byte *": 1, 
    "memcpy(.*) param": 1, 
    "label": "write", 
    "params": 2, 
    ".*\\+ 0x.*": 3, 
    ".*\\+ param": 1, 
    "memcpy(.*)": 1, 
    "void *": 1, 
    ".*\\+ 0x.* param": 1, 
    "return": 1, 
    ".*\\+": 3
  }, 
  "TLSX_SignatureAlgorithmsCert_GetSize": {
    "label": "get", 
    "params": 1, 
    ".*\\+ 0x.*": 1, 
    ".*\\+ param": 1, 
    "void *": 1, 
    ".*\\+ 0x.* param": 1, 
    "return": 1, 
    ".*\\+": 1
  }, 
  "wolfTLSv1_3_client_method_ex": {
    "params": 1, 
    "void *": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "wolfTLSv1_1_server_method": {
    "params": 0, 
    "return": 1
  }, 
  "TLSX_SupportedCurve_ValidateRequest": {
    "void": 1, 
    "WOLFSSL *": 1, 
    "byte *": 1, 
    "params": 2, 
    "return;": 1, 
    "return": 0
  }, 
  "MakeTlsMasterSecret": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "WOLFSSL *": 1, 
    "label": "make", 
    "params": 1, 
    ".*\\+ 0x.*": 1, 
    "int": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 2, 
    ".*\\-": 13, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 3, 
    ".*\\+ 0x.* param": 1, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "TLSX_SetSupportedVersions": {
    "label": "set", 
    "params": 3, 
    "int": 1, 
    "if (.*) param": 1, 
    "TLSX * *": 1, 
    "void *": 2, 
    ".*\\-": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "wolfTLS_server_method_ex": {
    "params": 1, 
    "void *": 1, 
    ".*\\-": 2, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "tlsx_ffdhe_find_group": {
    "for (.*) param": 1, 
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* != 0)": 1, 
    "SupportedCurve *": 2, 
    "if (.* < .*)": 1, 
    "break": 3, 
    "WOLFSSL *": 1, 
    "params": 3, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 2, 
    "for (.*)": 2, 
    ".*\\-": 18, 
    "if (.* < .*) param": 1, 
    "if (.*)": 7, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "wolfTLS_client_method_ex": {
    "params": 1, 
    "void *": 1, 
    ".*\\-": 2, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "TLSX_GetResponseSize": {
    "if (.* < \\d*)": 3, 
    "if (.* != 0)": 1, 
    "if (.* < .*)": 3, 
    "break": 3, 
    "byte": 1, 
    "WOLFSSL *": 1, 
    "label": "get", 
    "params": 3, 
    "int": 1, 
    "if (.* == 0)": 3, 
    ".*\\-": 6, 
    "word16 *": 1, 
    "if (.*)": 7, 
    "return": 1, 
    "case": 4, 
    ".*\\- param": 1, 
    ".*\\+": 21, 
    "= .*\\+": 4
  }, 
  "ctMaskLT": {
    "byte": 1, 
    "params": 2, 
    "int": 2, 
    ".*\\+ param": 1, 
    "return 0": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\+": 1, 
    ".*\\- param": 1
  }, 
  "TLSX_SignatureAlgorithms_MapPss": {
    "for (.*) param": 1, 
    "if (.* < \\d*)": 2, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 2, 
    "WOLFSSL *": 1, 
    "byte *": 1, 
    "params": 3, 
    "word16": 1, 
    "int": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "for (.*)": 1, 
    ".*\\-": 3, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 3, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 5, 
    "= .*\\+": 5
  }, 
  "TLSX_SupportedCurve_Append": {
    "SupportedCurve *": 1, 
    "break": 1, 
    "params": 3, 
    "word16": 1, 
    "int": 1, 
    "if (.*) param": 1, 
    "while(.*)": 1, 
    "return 0": 1, 
    "void *": 1, 
    ".*\\-": 5, 
    "if (.*)": 3, 
    "return": 1
  }, 
  "wolfSSL_MakeTlsExtendedMasterSecret": {
    "byte *": 3, 
    "label": "make", 
    "word32": 3, 
    "params": 8, 
    "int": 3, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "TLSX_Push": {
    "break": 1, 
    "params": 4, 
    "int": 1, 
    "if (.*) param": 1, 
    "while(.*)": 1, 
    "TLSX * *": 1, 
    "void *": 2, 
    ".*\\-": 7, 
    "if (.*)": 2, 
    "TLSX_Type": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "TLSX_KeyShare_Parse": {
    "if (.* < \\d*)": 3, 
    "if (.* < \\d*) param": 1, 
    "if (.* != 0)": 2, 
    "if (.* < .*)": 3, 
    "byte": 1, 
    "WOLFSSL *": 1, 
    "byte *": 1, 
    "label": "parse", 
    "params": 4, 
    "word16": 1, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 4, 
    "for (.*)": 1, 
    ".*\\-": 12, 
    "if (.* < .*) param": 1, 
    "if (.*)": 17, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 3, 
    "= .*\\+": 2
  }, 
  "ctSetLTE": {
    "byte": 1, 
    "label": "set", 
    "params": 2, 
    "int": 2, 
    ".*\\+ param": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\+": 1, 
    ".*\\- param": 1
  }, 
  "versionIsLesser": {
    "byte": 3, 
    "params": 3, 
    "int": 1, 
    "return": 1
  }, 
  "TLSX_GetSize": {
    "byte": 1, 
    "byte *": 1, 
    "TLSX *": 1, 
    "label": "get", 
    "params": 4, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "while(.*)": 1, 
    ".*\\-": 14, 
    "word16 *": 1, 
    "if (.*)": 13, 
    "return": 1, 
    ".*\\+": 7, 
    "= .*\\+": 7
  }, 
  "wolfTLSv1_2_client_method": {
    "params": 0, 
    "return": 1
  }, 
  "TLSX_ValidateSupportedCurves": {
    "if (.* != 0)": 2, 
    "if (.* != 0) param": 1, 
    "if (.* < \\d*)": 2, 
    "if (.* < \\d*) param": 1, 
    "break": 5, 
    "if (.* < .*)": 2, 
    "byte": 2, 
    "WOLFSSL *": 1, 
    "if (.* == 0) param": 1, 
    "params": 3, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 16, 
    "goto": 3, 
    "for (.*)": 1, 
    ".*\\-": 19, 
    "if (.* < .*) param": 1, 
    "if (.*)": 19, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 3, 
    "= .*\\+": 2, 
    "case": 22
  }, 
  "wolfTLSv1_1_client_method_ex": {
    "params": 1, 
    "void *": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "TLSX_KeyShare_Empty": {
    "WOLFSSL *": 1, 
    "params": 1, 
    "int": 1, 
    ".*\\-": 5, 
    "if (.*)": 2, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "TLSX_EncryptThenMac_Use": {
    "WOLFSSL *": 1, 
    "params": 1, 
    "int": 1, 
    ".*\\-": 2, 
    "if (.*)": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "TLSX_PointFormat_ValidateResponse": {
    "if (.* != 0)": 1, 
    "if (.* != 0) param": 1, 
    "void": 1, 
    "WOLFSSL *": 1, 
    "byte *": 1, 
    "params": 2, 
    "if (.*) param": 1, 
    "return;": 1, 
    ".*\\-": 2, 
    "if (.*)": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "TLSX_KeyShare_Process": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "WOLFSSL *": 1, 
    "if (.* == 0) param": 1, 
    "label": "process", 
    "KeyShareEntry *": 1, 
    "params": 2, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 3, 
    ".*\\-": 5, 
    "if (.* < .*) param": 1, 
    "if (.*)": 4, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "TLSX_WriteRequest": {
    "if (.* < \\d*)": 3, 
    "if (.* < .*)": 3, 
    "byte": 1, 
    "WOLFSSL *": 1, 
    "byte *": 1, 
    "if (.* == 0) param": 1, 
    "label": "write", 
    "params": 4, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 5, 
    "memset(.*)": 1, 
    ".*\\-": 11, 
    "word16 *": 1, 
    "if (.*)": 10, 
    "return": 1, 
    ".*\\+": 18, 
    "= .*\\+": 4, 
    ".*\\- param": 1
  }, 
  "TLSX_ToSemaphore": {
    "if (.* == 0) param": 1, 
    "params": 1, 
    "word16": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "TLSX_SupportedGroups_Find": {
    "WOLFSSL *": 1, 
    "params": 2, 
    "word16": 1, 
    "int": 1, 
    "if (.*) param": 1, 
    "return 0": 1, 
    "for (.*)": 1, 
    ".*\\-": 3, 
    "if (.*)": 2, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "TLSX_GetRequestSize": {
    "if (.* < \\d*)": 2, 
    "if (.* != 0)": 1, 
    "if (.* < .*)": 2, 
    "byte": 1, 
    "WOLFSSL *": 1, 
    "if (.* == 0) param": 1, 
    "label": "get", 
    "params": 3, 
    "int": 1, 
    "if (.* == 0)": 5, 
    "if (.*) param": 1, 
    "memset(.*)": 1, 
    ".*\\-": 10, 
    "word16 *": 1, 
    "if (.*)": 10, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 13, 
    "= .*\\+": 3
  }, 
  "wolfTLSv1_3_server_method": {
    "params": 0, 
    "return": 1
  }, 
  "TLSX_SupportedVersions_Parse": {
    "if (.* != 0)": 8, 
    "if (.* < .*)": 4, 
    "byte *": 1, 
    "word16": 1, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 1, 
    "goto": 1, 
    "for (.*)": 1, 
    ".*\\-": 22, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    ".*\\+": 4, 
    "if (.* < \\d*) param": 1, 
    "if (.* < \\d*)": 4, 
    "byte": 1, 
    "WOLFSSL *": 1, 
    "label": "parse", 
    "params": 4, 
    "int": 1, 
    "if (.*) param": 1, 
    "return 0": 1, 
    "if (.*)": 22, 
    ".*\\- param": 1, 
    "return": 1, 
    "= .*\\+": 4
  }, 
  "Hmac_HashFinalRaw": {
    "uchar *": 1, 
    "break": 3, 
    "params": 2, 
    "int": 1, 
    ".*\\-": 2, 
    "Hmac *": 1, 
    "return": 1, 
    ".*\\- param": 1, 
    "case": 4
  }, 
  "TLSX_PointFormat_FreeAll": {
    "PointFormat *": 1, 
    "void": 1, 
    "label": "free", 
    "params": 2, 
    "return;": 1, 
    "while(.*)": 1, 
    "void *": 1, 
    ".*\\-": 1, 
    "if (.*)": 1, 
    "return": 0
  }, 
  "TLSX_ParseVersion": {
    "if (.* < \\d*)": 2, 
    "int *": 1, 
    "if (.* < .*)": 2, 
    "break": 1, 
    "byte": 1, 
    "WOLFSSL *": 1, 
    "byte *": 1, 
    "label": "parse", 
    "params": 5, 
    "word16": 1, 
    "int": 1, 
    "if (.* == 0)": 1, 
    "while(.*)": 1, 
    "if (.*)": 4, 
    "return": 1, 
    ".*\\+": 8, 
    "= .*\\+": 4
  }, 
  "ato16": {
    "void": 1, 
    "byte *": 1, 
    "params": 2, 
    "return;": 1, 
    "word16 *": 1, 
    "return": 0
  }, 
  "wolfTLSv1_2_server_method_ex": {
    "params": 1, 
    "void *": 1, 
    ".*\\-": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "TLSX_KeyShare_GenEccKey": {
    "if (.* != 0)": 3, 
    "WOLFSSL *": 1, 
    "memset(.*) param": 1, 
    "label": "gen", 
    "KeyShareEntry *": 1, 
    "params": 2, 
    "int": 1, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 6, 
    "if (.*) param": 1, 
    "memset(.*)": 1, 
    ".*\\-": 27, 
    "if (.*)": 17, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "TLSX_FreeAll": {
    "void": 1, 
    "TLSX *": 1, 
    "label": "free", 
    "params": 2, 
    "return;": 1, 
    "while(.*)": 1, 
    "void *": 1, 
    ".*\\-": 5, 
    "if (.*)": 5, 
    "return": 0
  }, 
  "TLSX_CheckUnsupportedExtension": {
    "WOLFSSL *": 1, 
    "label": "check", 
    "params": 2, 
    "int": 1, 
    ".*\\-": 2, 
    "if (.*)": 1, 
    "TLSX_Type": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "TLSX_Prepend": {
    "break": 1, 
    "params": 4, 
    "int": 1, 
    "if (.*) param": 1, 
    "while(.*)": 1, 
    "TLSX * *": 1, 
    "void *": 2, 
    ".*\\-": 8, 
    "if (.*)": 5, 
    "TLSX_Type": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "TLSX_KeyShare_SetSupported": {
    "if (.* != 0)": 1, 
    "WOLFSSL *": 1, 
    "label": "set", 
    "params": 1, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "for (.*)": 1, 
    ".*\\-": 10, 
    "if (.*)": 5, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "TLSX_SignatureAlgorithms_Parse": {
    "if (.* != 0)": 1, 
    "if (.* < .*)": 2, 
    "byte *": 1, 
    "memcpy(.*) param": 1, 
    "if (.* == 0) param": 1, 
    "word16": 1, 
    "if (.* == 0)": 1, 
    ".*\\-": 5, 
    "if (.* < .*) param": 1, 
    "Suites *": 1, 
    ".*\\+": 2, 
    "if (.* != 0) param": 1, 
    "if (.* < \\d*)": 2, 
    "if (.* < \\d*) param": 1, 
    "byte": 1, 
    "WOLFSSL *": 1, 
    "label": "parse", 
    "params": 5, 
    "int": 1, 
    "if (.*) param": 1, 
    "memcpy(.*)": 1, 
    "if (.*)": 5, 
    "return": 1, 
    "= .*\\+": 2, 
    ".*\\- param": 1
  }, 
  "TLSX_KeyShare_DeriveSecret": {
    "WOLFSSL *": 1, 
    "params": 1, 
    "int": 1, 
    ".*\\-": 2, 
    "if (.*)": 2, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "TLSX_SupportedCurve_New": {
    "SupportedCurve * *": 1, 
    "params": 3, 
    "word16": 1, 
    "int": 1, 
    "if (.*) param": 1, 
    "void *": 1, 
    ".*\\-": 4, 
    "if (.*)": 2, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "TLSX_EncryptThenMac_Respond": {
    "WOLFSSL *": 1, 
    "params": 1, 
    "int": 1, 
    ".*\\-": 2, 
    "if (.*)": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "TLSX_PointFormat_New": {
    "byte": 1, 
    "params": 3, 
    "int": 1, 
    "PointFormat * *": 1, 
    "if (.*) param": 1, 
    "void *": 1, 
    ".*\\-": 4, 
    "if (.*)": 2, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "TLSX_Write": {
    "byte": 1, 
    "byte *": 2, 
    "TLSX *": 1, 
    "label": "write", 
    "params": 5, 
    "int": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "while(.*)": 1, 
    ".*\\-": 16, 
    "word16 *": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 13, 
    "return": 1, 
    ".*\\+": 17, 
    "= .*\\+": 14
  }, 
  "TLSX_EncryptThenMac_GetSize": {
    "byte": 1, 
    "label": "get", 
    "params": 2, 
    "int": 1, 
    "if (.*) param": 1, 
    "word16 *": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "TLSX_PointFormat_Append": {
    "PointFormat *": 1, 
    "break": 1, 
    "byte": 1, 
    "params": 3, 
    "int": 1, 
    "if (.*) param": 1, 
    "while(.*)": 1, 
    "return 0": 1, 
    "void *": 1, 
    ".*\\-": 5, 
    "if (.*)": 3, 
    "return": 1
  }, 
  "TLSX_SupportedCurve_Preferred": {
    "if (.* != 0)": 1, 
    "if (.* != 0) param": 1, 
    "WOLFSSL *": 1, 
    "if (.* == 0) param": 1, 
    "params": 2, 
    "int": 2, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "for (.*)": 1, 
    ".*\\-": 3, 
    "if (.*)": 2, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "_MakeTlsExtendedMasterSecret": {
    "byte *": 3, 
    "label": "make", 
    "word32": 3, 
    "params": 10, 
    ".*\\+ 0x.*": 1, 
    "int": 4, 
    ".*\\+ param": 1, 
    "void *": 1, 
    "= .*\\+ param": 1, 
    ".*\\+ 0x.* param": 1, 
    "return": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "TLSX_PopulateSupportedGroups": {
    "for (.*) param": 1, 
    "WOLFSSL *": 1, 
    "params": 2, 
    "int": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "TLSX * *": 1, 
    "for (.*)": 1, 
    ".*\\-": 9, 
    "= .*\\+ param": 1, 
    "if (.*)": 3, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "TLSX_KeyShare_ProcessX448": {
    "WOLFSSL *": 1, 
    "label": "process", 
    "KeyShareEntry *": 1, 
    "params": 2, 
    "int": 1, 
    "return": 1
  }, 
  "TLSX_EncryptThenMac_Write": {
    "byte": 1, 
    "byte *": 1, 
    "label": "write", 
    "params": 4, 
    "int": 1, 
    "if (.*) param": 1, 
    "void *": 1, 
    "word16 *": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "wolfSSL_DeriveTlsKeys": {
    "byte *": 4, 
    "word32": 2, 
    "params": 8, 
    "int": 3, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "TLS_hmac": {
    "if (.* < \\d*)": 2, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 2, 
    "WOLFSSL *": 1, 
    "byte *": 2, 
    "if (.* == 0) param": 1, 
    "word32": 1, 
    "params": 8, 
    "int": 5, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 5, 
    ".*\\-": 5, 
    "if (.* < .*) param": 1, 
    "if (.*)": 7, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 1
  }, 
  "TLSX_Find": {
    "break": 1, 
    "TLSX *": 1, 
    "params": 2, 
    "while(.*)": 1, 
    ".*\\-": 2, 
    "if (.*)": 2, 
    "TLSX_Type": 1, 
    "return": 1
  }, 
  "TLSX_SignatureAlgorithms_GetSize": {
    "label": "get", 
    "params": 1, 
    ".*\\+ param": 1, 
    "void *": 1, 
    "return": 1, 
    ".*\\+": 1
  }, 
  "wolfTLSv1_1_client_method": {
    "params": 0, 
    "return": 1
  }, 
  "TLSX_KeyShare_GroupRank": {
    "break": 1, 
    "WOLFSSL *": 1, 
    "params": 2, 
    "int": 2, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "while(.*)": 1, 
    ".*\\-": 16, 
    "if (.*)": 3, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 5, 
    "= .*\\+": 5
  }, 
  "TLSX_SupportedVersions_Write": {
    "if (.* != 0)": 3, 
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "byte": 1, 
    "byte *": 1, 
    "label": "write", 
    "params": 4, 
    ".*\\+ 0x.*": 6, 
    "int": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "return 0": 1, 
    "void *": 1, 
    "word16 *": 1, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 6, 
    ".*\\+ 0x.* param": 1, 
    "return": 1, 
    ".*\\+": 15, 
    "= .*\\+": 14
  }, 
  "TLSX_SetSignatureAlgorithmsCert": {
    "label": "set", 
    "params": 3, 
    "int": 1, 
    "if (.*) param": 1, 
    "TLSX * *": 1, 
    "void *": 2, 
    ".*\\-": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "_DeriveTlsKeys": {
    "byte *": 4, 
    "memcpy(.*) param": 1, 
    "word32": 2, 
    "params": 10, 
    ".*\\+ 0x.*": 1, 
    "int": 4, 
    "memcpy(.*)": 2, 
    "void *": 1, 
    "return": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "TLSX_KeyShare_ProcessX25519": {
    "WOLFSSL *": 1, 
    "label": "process", 
    "KeyShareEntry *": 1, 
    "params": 2, 
    "int": 1, 
    "return": 1
  }, 
  "TLSX_SetSignatureAlgorithms": {
    "label": "set", 
    "params": 3, 
    "int": 1, 
    "if (.*) param": 1, 
    "TLSX * *": 1, 
    "void *": 2, 
    ".*\\-": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "wolfTLS_client_method": {
    "params": 0, 
    "return": 1
  }, 
  "TLSX_PointFormat_ValidateRequest": {
    "void": 1, 
    "WOLFSSL *": 1, 
    "byte *": 1, 
    "params": 2, 
    "return;": 1, 
    "for (.*)": 1, 
    ".*\\-": 3, 
    "return": 0, 
    ".*\\- param": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "TLSX_KeyShare_Use": {
    "for (.*) param": 1, 
    "if (.* != 0)": 2, 
    "WOLFSSL *": 1, 
    "byte *": 1, 
    "params": 5, 
    "word16": 2, 
    "int": 1, 
    "if (.*) param": 1, 
    "for (.*)": 1, 
    "KeyShareEntry * *": 1, 
    ".*\\-": 12, 
    "if (.*)": 8, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "wolfTLSv1_2_client_method_ex": {
    "params": 1, 
    "void *": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "TLSX_PointFormat_Parse": {
    "byte": 1, 
    "WOLFSSL *": 1, 
    "byte *": 1, 
    "if (.* == 0) param": 1, 
    "label": "parse", 
    "params": 4, 
    "word16": 1, 
    "int": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    ".*\\-": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 3, 
    "return": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1, 
    ".*\\- param": 1
  }, 
  "Hmac_OuterHash": {
    "if (.* < \\d*)": 1, 
    "uchar *": 1, 
    "if (.* < .*)": 1, 
    "params": 2, 
    "int": 1, 
    "if (.* == 0)": 3, 
    ".*\\-": 5, 
    "if (.*)": 4, 
    "Hmac *": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "TLSX_KeyShare_GenDhKey": {
    "if (.* != 0)": 1, 
    "WOLFSSL *": 1, 
    "memset(.*) param": 1, 
    "if (.* == 0) param": 1, 
    "label": "gen", 
    "KeyShareEntry *": 1, 
    "params": 2, 
    "int": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 6, 
    "memset(.*)": 2, 
    ".*\\-": 41, 
    "if (.*)": 22, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 2
  }, 
  "ForceZero": {
    "void": 1, 
    "word32": 1, 
    "params": 2, 
    "return;": 1, 
    "while(.*)": 1, 
    "void *": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "BuildTlsFinished": {
    "WOLFSSL *": 1, 
    "byte *": 1, 
    "label": "build", 
    "params": 3, 
    ".*\\+ 0x.*": 4, 
    "int": 1, 
    "if (.* == 0)": 4, 
    "Hashes *": 1, 
    ".*\\-": 3, 
    "if (.*)": 4, 
    "return": 1, 
    ".*\\+": 4, 
    "= .*\\+": 4
  }, 
  "TLSX_SupportedCurve_FreeAll": {
    "void": 1, 
    "SupportedCurve *": 1, 
    "label": "free", 
    "params": 2, 
    "return;": 1, 
    "while(.*)": 1, 
    "void *": 1, 
    ".*\\-": 1, 
    "if (.*)": 1, 
    "return": 0
  }, 
  "TLSX_WriteResponse": {
    "if (.* != 0)": 2, 
    "if (.* < \\d*)": 4, 
    "if (.* < .*)": 4, 
    "break": 3, 
    "byte": 1, 
    "WOLFSSL *": 1, 
    "byte *": 1, 
    "label": "write", 
    "params": 4, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 2, 
    ".*\\-": 7, 
    "word16 *": 1, 
    "if (.*)": 9, 
    "return": 1, 
    "case": 4, 
    ".*\\- param": 1, 
    ".*\\+": 26, 
    "= .*\\+": 4
  }, 
  "TLSX_PointFormat_GetSize": {
    "for (.*) param": 1, 
    "PointFormat *": 1, 
    "label": "get", 
    "params": 1, 
    "for (.*)": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "TLSX_SupportedCurve_Parse": {
    "if (.* != 0)": 2, 
    "if (.* < \\d*)": 1, 
    "if (.* < .*)": 1, 
    "byte": 1, 
    "WOLFSSL *": 1, 
    "byte *": 1, 
    "label": "parse", 
    "params": 4, 
    "word16": 1, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "for (.*)": 1, 
    ".*\\-": 9, 
    "if (.*)": 8, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 5, 
    "= .*\\+": 3
  }, 
  "TLSX_KeyShare_GenX25519Key": {
    "WOLFSSL *": 1, 
    "label": "gen", 
    "KeyShareEntry *": 1, 
    "params": 2, 
    "int": 1, 
    ".*\\-": 1, 
    "return": 1
  }, 
  "TLSX_KeyShare_ProcessEcc": {
    "if (.* != 0)": 1, 
    "WOLFSSL *": 1, 
    "label": "process", 
    "KeyShareEntry *": 1, 
    "params": 2, 
    "int": 1, 
    "if (.* == 0)": 2, 
    "if (.*) param": 1, 
    ".*\\-": 30, 
    "if (.*)": 16, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "TLSX_KeyShare_FreeAll": {
    "if (.* < \\d*)": 1, 
    "if (.* != 0)": 1, 
    "void": 1, 
    "if (.* < .*)": 1, 
    "label": "free", 
    "KeyShareEntry *": 1, 
    "params": 2, 
    "return;": 1, 
    "while(.*)": 1, 
    "void *": 1, 
    ".*\\-": 13, 
    "if (.*)": 7, 
    "return": 0
  }, 
  "wolfTLSv1_2_server_method": {
    "params": 0, 
    "return": 1
  }, 
  "TLSX_SupportedCurve_CheckPriority": {
    "WOLFSSL *": 1, 
    "label": "check", 
    "params": 1, 
    "int": 1, 
    "for (.*)": 1, 
    ".*\\-": 10, 
    "if (.*)": 4, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "wolfSSL_GetHmacType": {
    "break": 4, 
    "WOLFSSL *": 1, 
    "label": "get", 
    "params": 1, 
    "int": 1, 
    "if (.*) param": 1, 
    ".*\\-": 3, 
    "if (.*)": 1, 
    "return": 1, 
    ".*\\- param": 1, 
    "case": 4
  }, 
  "versionIsGreater": {
    "byte": 3, 
    "params": 3, 
    "int": 1, 
    "return": 1
  }, 
  "TLSX_KeyShare_GenX448Key": {
    "WOLFSSL *": 1, 
    "label": "gen", 
    "KeyShareEntry *": 1, 
    "params": 2, 
    "int": 1, 
    ".*\\-": 1, 
    "return": 1
  }, 
  "TLSX_KeyShare_Establish": {
    "if (.* != 0)": 1, 
    "int *": 1, 
    "WOLFSSL *": 1, 
    "params": 2, 
    ".*\\+ 0x.*": 2, 
    "int": 1, 
    "if (.* == 0)": 1, 
    "for (.*)": 1, 
    ".*\\-": 26, 
    "if (.*)": 6, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 2, 
    "= .*\\+": 1
  }, 
  "TLSX_SupportedCurve_GetSize": {
    "for (.*) param": 1, 
    "SupportedCurve *": 1, 
    "label": "get", 
    "params": 1, 
    "for (.*)": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "wolfTLSv1_1_server_method_ex": {
    "params": 1, 
    "void *": 1, 
    ".*\\-": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "_MakeTlsMasterSecret": {
    "byte *": 4, 
    "memcpy(.*) param": 1, 
    "label": "make", 
    "word32": 2, 
    "params": 10, 
    ".*\\+ 0x.*": 1, 
    "int": 4, 
    "memcpy(.*)": 2, 
    "void *": 1, 
    "return": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "BuildTlsHandshakeHash": {
    "if (.* != 0)": 2, 
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "WOLFSSL *": 1, 
    "byte *": 1, 
    "label": "build", 
    "params": 3, 
    ".*\\+ 0x.*": 1, 
    "int": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "word32 *": 1, 
    ".*\\-": 6, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 5, 
    ".*\\+ 0x.* param": 1, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "c16toa": {
    "void": 1, 
    "byte *": 1, 
    "params": 2, 
    "word16": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "DeriveTlsKeys": {
    "WOLFSSL *": 1, 
    "params": 1, 
    ".*\\+ 0x.*": 2, 
    "int": 1, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 1, 
    ".*\\-": 7, 
    "if (.*)": 1, 
    "return": 1, 
    ".*\\+": 3, 
    ".*\\- param": 1
  }, 
  "TLSX_KeyShareEntry_Parse": {
    "if (.* < \\d*)": 2, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 2, 
    "WOLFSSL *": 1, 
    "byte *": 1, 
    "label": "parse", 
    "params": 4, 
    "word16": 1, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 2, 
    "memcpy(.*)": 1, 
    "KeyShareEntry * *": 1, 
    ".*\\-": 3, 
    "if (.* < .*) param": 1, 
    "if (.*)": 6, 
    "return": 1, 
    ".*\\+": 4, 
    "= .*\\+": 2
  }, 
  "TLSX_UsePointFormat": {
    "if (.* != 0)": 3, 
    "byte": 1, 
    "params": 3, 
    "int": 1, 
    "if (.*) param": 1, 
    "TLSX * *": 1, 
    "void *": 1, 
    ".*\\-": 2, 
    "if (.*)": 6, 
    "return": 1
  }, 
  "TLSX_Remove": {
    "void": 1, 
    "break": 1, 
    "params": 3, 
    "return;": 1, 
    "while(.*)": 1, 
    "TLSX * *": 1, 
    "void *": 1, 
    ".*\\-": 5, 
    "if (.*)": 3, 
    "TLSX_Type": 1, 
    "return": 0
  }, 
  "Hmac_HashUpdate": {
    "break": 3, 
    "byte *": 1, 
    "label": "update", 
    "word32": 1, 
    "params": 3, 
    "int": 1, 
    ".*\\-": 2, 
    "Hmac *": 1, 
    "return": 1, 
    ".*\\- param": 1, 
    "case": 4
  }, 
  "TLSX_PopulateExtensions": {
    "if (.* < \\d*)": 4, 
    "if (.* < \\d*) param": 1, 
    "if (.* != 0)": 5, 
    "if (.* != 0) param": 1, 
    "if (.* < .*)": 4, 
    "break": 2, 
    "byte": 1, 
    "WOLFSSL *": 1, 
    "params": 2, 
    ".*\\+ 0x.*": 4, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "while(.*)": 1, 
    "for (.*)": 1, 
    ".*\\-": 21, 
    "if (.* < .*) param": 1, 
    "if (.*)": 16, 
    ".*\\+ 0x.* param": 1, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 6, 
    "= .*\\+": 5
  }, 
  "wolfTLSv1_3_client_method": {
    "params": 0, 
    "return": 1
  }, 
  "TLSX_KeyShare_IsSupported": {
    "if (.* == 0) param": 1, 
    "params": 1, 
    "int": 2, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "wolfSSL_make_eap_keys": {
    "WOLFSSL *": 1, 
    "memcpy(.*) param": 1, 
    "label": "make", 
    "uint": 1, 
    "params": 4, 
    "int": 1, 
    "memcpy(.*)": 2, 
    "void *": 1, 
    "char *": 1, 
    ".*\\-": 5, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "ctMaskEq": {
    "byte": 1, 
    "params": 2, 
    "int": 2, 
    "return": 1
  }, 
  "c32toa": {
    "void": 1, 
    "byte *": 1, 
    "word32": 1, 
    "params": 2, 
    "return;": 1, 
    "return": 0
  }, 
  "TLSX_SetResponse": {
    "void": 1, 
    "WOLFSSL *": 1, 
    "label": "set", 
    "params": 2, 
    "return;": 1, 
    ".*\\-": 2, 
    "if (.*)": 1, 
    "TLSX_Type": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "ctMaskSel": {
    "byte": 4, 
    "params": 3, 
    "return": 1
  }, 
  "wolfTLSv1_3_server_method_ex": {
    "params": 1, 
    "void *": 1, 
    ".*\\-": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "wolfSSL_MakeTlsMasterSecret": {
    "byte *": 4, 
    "label": "make", 
    "word32": 2, 
    "params": 8, 
    "int": 3, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "TLSX_KeyShare_GenKey": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "WOLFSSL *": 1, 
    "if (.* == 0) param": 1, 
    "label": "gen", 
    "KeyShareEntry *": 1, 
    "params": 2, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 2, 
    ".*\\-": 3, 
    "if (.* < .*) param": 1, 
    "if (.*)": 3, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "TLSX_KeyShare_Write": {
    "byte": 1, 
    "byte *": 1, 
    "memcpy(.*) param": 1, 
    "label": "write", 
    "KeyShareEntry *": 1, 
    "params": 3, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "while(.*)": 1, 
    "memcpy(.*)": 1, 
    ".*\\-": 8, 
    "if (.*)": 4, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 4, 
    "= .*\\+": 1
  }, 
  "TLSX_SignatureAlgorithmsCert_Parse": {
    "if (.* != 0)": 1, 
    "if (.* != 0) param": 1, 
    "if (.* < \\d*)": 2, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 2, 
    "byte": 1, 
    "WOLFSSL *": 1, 
    "byte *": 1, 
    "label": "parse", 
    "params": 4, 
    "word16": 1, 
    "int": 1, 
    "if (.*) param": 1, 
    "memcpy(.*)": 1, 
    ".*\\-": 4, 
    "if (.* < .*) param": 1, 
    "if (.*)": 4, 
    "return": 1, 
    ".*\\+": 2, 
    "= .*\\+": 2
  }, 
  "Hmac_UpdateFinal_CT": {
    "for (.*) param": 1, 
    "if (.* != 0)": 4, 
    "if (.* < .*)": 3, 
    "byte *": 3, 
    "word32": 1, 
    ".*\\+ 0x.*": 1, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 1, 
    "memset(.*)": 2, 
    "for (.*)": 3, 
    ".*\\-": 14, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    "Hmac *": 1, 
    ".*\\+": 15, 
    "case": 4, 
    "if (.* < \\d*)": 3, 
    "if (.* < \\d*) param": 1, 
    "break": 3, 
    "memset(.*) param": 1, 
    "label": "update", 
    "params": 6, 
    "int": 2, 
    "if (.*) param": 1, 
    "if (.*)": 9, 
    ".*\\+ 0x.* param": 1, 
    ".*\\- param": 1, 
    "return": 1, 
    "= .*\\+": 14
  }, 
  "TLSX_EncryptThenMac_Parse": {
    "if (.* < \\d*)": 2, 
    "if (.* != 0)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 2, 
    "byte": 1, 
    "WOLFSSL *": 1, 
    "byte *": 1, 
    "if (.* == 0) param": 1, 
    "label": "parse", 
    "params": 4, 
    "word16": 1, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    ".*\\-": 6, 
    "if (.* < .*) param": 1, 
    "if (.*)": 6, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "TLSX_SupportedCurve_Write": {
    "for (.*) param": 1, 
    "SupportedCurve *": 1, 
    "byte *": 1, 
    "label": "write", 
    "params": 2, 
    ".*\\+ param": 1, 
    "for (.*)": 1, 
    ".*\\-": 3, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 2, 
    "= .*\\+": 1
  }, 
  "MakeTLSv1_1": {
    "label": "make", 
    "params": 0, 
    "return": 1
  }, 
  "MakeTLSv1_2": {
    "label": "make", 
    "params": 0, 
    "return": 1
  }, 
  "TLSX_SignatureAlgorithms_Write": {
    "byte *": 1, 
    "memcpy(.*) param": 1, 
    "label": "write", 
    "params": 2, 
    ".*\\+ 0x.*": 1, 
    ".*\\+ param": 1, 
    "memcpy(.*)": 1, 
    "void *": 1, 
    ".*\\+ 0x.* param": 1, 
    "return": 1, 
    ".*\\+": 5
  }, 
  "TLSX_HandleUnsupportedExtension": {
    "WOLFSSL *": 1, 
    "params": 1, 
    "int": 1, 
    ".*\\-": 1, 
    "return": 1
  }, 
  "MakeTLSv1_3": {
    "label": "make", 
    "params": 0, 
    "return": 1
  }, 
  "TLSX_PointFormat_Write": {
    "for (.*) param": 1, 
    "PointFormat *": 1, 
    "byte *": 1, 
    "label": "write", 
    "params": 2, 
    ".*\\+ 0x.*": 1, 
    ".*\\+ param": 1, 
    "for (.*)": 1, 
    ".*\\-": 2, 
    ".*\\+ 0x.* param": 1, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 2, 
    "= .*\\+": 2
  }, 
  "TLSX_Parse": {
    "if (.* < \\d*)": 2, 
    "if (.* != 0)": 4, 
    "if (.* < .*)": 2, 
    "byte": 1, 
    "WOLFSSL *": 1, 
    "byte *": 1, 
    "label": "parse", 
    "params": 5, 
    "word16": 1, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 24, 
    "for (.*)": 1, 
    ".*\\-": 23, 
    "if (.*)": 58, 
    "Suites *": 1, 
    "return": 1, 
    ".*\\+": 11, 
    "= .*\\+": 6
  }, 
  "TLSX_SupportedVersions_GetSize": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* != 0)": 2, 
    "if (.* < .*)": 1, 
    "byte": 1, 
    "label": "get", 
    "params": 3, 
    ".*\\+ 0x.*": 5, 
    "int": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "return 0": 1, 
    "void *": 1, 
    "word16 *": 1, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 8, 
    ".*\\+ 0x.* param": 1, 
    "return": 1, 
    ".*\\+": 9, 
    "= .*\\+": 8
  }, 
  "TLSX_KeyShare_New": {
    "for (.*) param": 1, 
    "params": 4, 
    "int": 2, 
    "memset(.*)": 1, 
    "for (.*)": 1, 
    "KeyShareEntry * *": 2, 
    "void *": 1, 
    ".*\\-": 3, 
    "if (.*)": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "ctMaskGT": {
    "byte": 1, 
    "params": 2, 
    "int": 2, 
    ".*\\+ param": 1, 
    "return 0": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\+": 1, 
    ".*\\- param": 1
  }, 
  "versionIsLessEqual": {
    "byte": 3, 
    "params": 3, 
    "int": 1, 
    "return": 1
  }, 
  "TLSX_KeyShare_ProcessDh": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* != 0)": 1, 
    "if (.* < .*)": 1, 
    "WOLFSSL *": 1, 
    "memset(.*) param": 1, 
    "if (.* == 0) param": 1, 
    "label": "process", 
    "KeyShareEntry *": 1, 
    "params": 2, 
    "int": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "memset(.*)": 1, 
    ".*\\-": 33, 
    "if (.* < .*) param": 1, 
    "if (.*)": 15, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 1
  }, 
  "TLSX_KeyShare_Find": {
    "WOLFSSL *": 1, 
    "params": 2, 
    ".*\\+ 0x.*": 1, 
    "word16": 1, 
    "int": 1, 
    "if (.*) param": 1, 
    "return 0": 1, 
    "for (.*)": 1, 
    ".*\\-": 3, 
    "if (.*)": 2, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "TLSX_New": {
    "params": 3, 
    "void *": 2, 
    ".*\\-": 4, 
    "if (.*)": 1, 
    "TLSX_Type": 1, 
    "return": 1
  }, 
  "TLSX_SupportExtensions": {
    "WOLFSSL *": 1, 
    "params": 1, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    ".*\\-": 1, 
    "if (.*)": 2, 
    "return": 1, 
    ".*\\- param": 1
  }
}