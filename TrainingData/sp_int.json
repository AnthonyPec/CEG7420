{
  "sp_addmod": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "if (.* == 0) param": 1, 
    "label": "add", 
    "params": 4, 
    "int": 1, 
    "sp_int *": 4, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 2, 
    ".*\\-": 4, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 5, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "_sp_exptmod_nct": {
    "for (.*) param": 1, 
    "if (.* != 0)": 1, 
    "if (.* < .*)": 10, 
    "if (.* == 0) param": 1, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 4, 
    "while(.*)": 3, 
    "for (.*)": 5, 
    ".*\\-": 35, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    ".*\\+": 26, 
    "if (.* < \\d*)": 10, 
    "if (.* < \\d*) param": 1, 
    "if (.* != 0) param": 1, 
    "break": 3, 
    "while(.*) param": 1, 
    "params": 4, 
    "break param": 1, 
    "int": 1, 
    "sp_int *": 4, 
    "if (.*) param": 1, 
    "if (.*)": 35, 
    ".*\\- param": 1, 
    "return": 1, 
    "= .*\\+": 22
  }, 
  "_sp_mul": {
    "for (.*) param": 1, 
    "if (.* < \\d*)": 1, 
    "if (.* < .*)": 1, 
    "memcpy(.*) param": 1, 
    "while(.*) param": 1, 
    "params": 3, 
    "int": 1, 
    "sp_int *": 3, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "while(.*)": 1, 
    "memcpy(.*)": 1, 
    "for (.*)": 2, 
    ".*\\-": 10, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 1, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 15, 
    "= .*\\+": 14
  }, 
  "_sp_exptmod_ex": {
    "while(.*) param": 1, 
    "if (.* == 0) param": 1, 
    "params": 5, 
    ".*\\+ 0x.*": 2, 
    "int": 2, 
    "sp_int *": 4, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 4, 
    "while(.*)": 1, 
    "for (.*)": 1, 
    ".*\\-": 6, 
    "= .*\\+ param": 1, 
    "if (.*)": 5, 
    ".*\\+ 0x.* param": 1, 
    "return": 1, 
    ".*\\+": 14, 
    "= .*\\+": 5, 
    ".*\\- param": 1
  }, 
  "_sp_cmp_abs": {
    "if (.* < \\d*)": 4, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 4, 
    "while(.*) param": 1, 
    "params": 2, 
    "int": 1, 
    "sp_int *": 2, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "return 0": 1, 
    "while(.*)": 1, 
    ".*\\-": 10, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 4, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 4, 
    "= .*\\+": 3
  }, 
  "sp_mod_2d": {
    "if (.* != 0)": 1, 
    "if (.* < .*)": 1, 
    "memcpy(.*) param": 1, 
    "if (.* == 0) param": 1, 
    ".*\\+ 0x.*": 1, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 1, 
    "while(.*)": 1, 
    ".*\\-": 11, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    ".*\\+": 4, 
    "if (.* != 0) param": 1, 
    "if (.* < \\d*)": 1, 
    "while(.*) param": 1, 
    "params": 3, 
    "int": 2, 
    "sp_int *": 2, 
    "if (.*) param": 1, 
    "memcpy(.*)": 1, 
    "if (.*)": 6, 
    ".*\\+ 0x.* param": 1, 
    ".*\\- param": 1, 
    "return": 1, 
    "= .*\\+": 4
  }, 
  "sp_exch": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "memcpy(.*) param": 1, 
    "if (.* == 0) param": 1, 
    "params": 2, 
    ".*\\+ 0x.*": 3, 
    "int": 1, 
    "sp_int *": 2, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 5, 
    "memcpy(.*)": 3, 
    ".*\\-": 13, 
    "if (.* < .*) param": 1, 
    "if (.*)": 6, 
    ".*\\+ 0x.* param": 1, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 4
  }, 
  "sp_div_2": {
    "for (.*) param": 1, 
    "if (.* < \\d*)": 1, 
    "if (.* < .*)": 1, 
    "while(.*) param": 1, 
    "if (.* == 0) param": 1, 
    "params": 2, 
    "int": 1, 
    "sp_int *": 2, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "while(.*)": 1, 
    "for (.*)": 1, 
    ".*\\-": 11, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 3, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 5, 
    "= .*\\+": 5
  }, 
  "sp_set": {
    "if (.* == 0) param": 1, 
    "label": "set", 
    "sp_int_digit": 1, 
    "params": 2, 
    "int": 1, 
    "sp_int *": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    ".*\\-": 3, 
    "if (.*)": 2, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "_sp_sqr": {
    "for (.*) param": 1, 
    "if (.* < .*)": 2, 
    "memcpy(.*) param": 1, 
    ".*\\+ param": 1, 
    "while(.*)": 2, 
    "for (.*)": 1, 
    ".*\\-": 7, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    ".*\\+": 21, 
    "if (.* < \\d*)": 2, 
    "if (.* < \\d*) param": 1, 
    "break": 1, 
    "while(.*) param": 1, 
    "params": 2, 
    "break param": 1, 
    "int": 1, 
    "sp_int *": 2, 
    "if (.*) param": 1, 
    "memcpy(.*)": 1, 
    "if (.*)": 3, 
    ".*\\- param": 1, 
    "return": 1, 
    "= .*\\+": 20
  }, 
  "_sp_div_3": {
    "if (.* < \\d*)": 1, 
    "sp_int_digit *": 1, 
    "void": 1, 
    "if (.* < .*)": 1, 
    "return; param": 1, 
    "while(.*) param": 1, 
    "params": 3, 
    ".*\\+ 0x.*": 3, 
    "sp_int *": 2, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "return;": 1, 
    "while(.*)": 3, 
    ".*\\-": 15, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 3, 
    ".*\\+ 0x.* param": 1, 
    "return": 0, 
    ".*\\- param": 1, 
    ".*\\+": 12, 
    "= .*\\+": 9
  }, 
  "sp_to_unsigned_bin_at_pos": {
    "uchar *": 1, 
    "if (.* == 0) param": 1, 
    "params": 3, 
    "int": 2, 
    "sp_int *": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 1, 
    "return": 1, 
    ".*\\+": 2, 
    "= .*\\+": 2
  }, 
  "sp_set_bit": {
    "for (.*) param": 1, 
    "label": "set", 
    "params": 2, 
    "int": 2, 
    "sp_int *": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "for (.*)": 1, 
    ".*\\-": 7, 
    "= .*\\+ param": 1, 
    "if (.*)": 2, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 2, 
    "= .*\\+": 2
  }, 
  "sp_cmp_mag": {
    "params": 2, 
    "int": 1, 
    "sp_int *": 2, 
    "if (.*) param": 1, 
    ".*\\-": 1, 
    "if (.*)": 3, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "sp_toradix": {
    "if (.* == 0) param": 1, 
    "params": 3, 
    "int": 2, 
    "sp_int *": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "char *": 1, 
    ".*\\-": 2, 
    "if (.*)": 3, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "sp_2expt": {
    "if (.* == 0) param": 1, 
    "params": 2, 
    "int": 2, 
    "sp_int *": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    ".*\\-": 1, 
    "if (.*)": 2, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "sp_add": {
    "if (.* == 0) param": 1, 
    "label": "add", 
    "params": 3, 
    "int": 1, 
    "sp_int *": 3, 
    "if (.*) param": 1, 
    "if (.* == 0)": 2, 
    ".*\\-": 3, 
    "if (.*)": 3, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "sp_mod_d": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "sp_int_digit *": 1, 
    "if (.* < .*)": 1, 
    "while(.*) param": 1, 
    "if (.* == 0) param": 1, 
    "sp_int_digit": 1, 
    "params": 3, 
    "int": 1, 
    "sp_int *": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 4, 
    "while(.*)": 1, 
    ".*\\-": 8, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 7, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 3, 
    "= .*\\+": 3
  }, 
  "sp_div": {
    "for (.*) param": 1, 
    "if (.* != 0)": 9, 
    "if (.* < .*)": 7, 
    "if (.* == 0) param": 1, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 12, 
    "while(.*)": 2, 
    "for (.*)": 1, 
    ".*\\-": 24, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    ".*\\+": 15, 
    "if (.* < \\d*) param": 1, 
    "if (.* < \\d*)": 7, 
    "if (.* != 0) param": 1, 
    "while(.*) param": 1, 
    "params": 4, 
    "int": 1, 
    "sp_int *": 4, 
    "if (.*) param": 1, 
    "if (.*)": 27, 
    ".*\\- param": 1, 
    "return": 1, 
    "= .*\\+": 9
  }, 
  "_sp_mul_d": {
    "for (.*) param": 1, 
    "if (.* != 0)": 1, 
    "if (.* != 0) param": 1, 
    "if (.* < \\d*)": 1, 
    "if (.* < .*)": 1, 
    "while(.*) param": 1, 
    "sp_int_digit": 1, 
    "params": 4, 
    "int": 2, 
    "sp_int *": 2, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "while(.*)": 1, 
    "for (.*)": 1, 
    ".*\\-": 12, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 3, 
    "return": 1, 
    ".*\\+": 6, 
    ".*\\- param": 1, 
    "= .*\\+": 6
  }, 
  "CheckRunTimeFastMath": {
    "label": "check", 
    "params": 0, 
    "return 0": 1, 
    "return": 1
  }, 
  "sp_grow": {
    "for (.*) param": 1, 
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "if (.* == 0) param": 1, 
    "params": 2, 
    "int": 2, 
    "sp_int *": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 2, 
    "for (.*)": 1, 
    ".*\\-": 5, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 3, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "sp_init": {
    "if (.* == 0) param": 1, 
    "label": "init", 
    "params": 1, 
    "int": 1, 
    "sp_int *": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    ".*\\-": 2, 
    "if (.*)": 2, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "sp_leading_bit": {
    "for (.*) param": 1, 
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "params": 1, 
    "int": 1, 
    "sp_int *": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "for (.*)": 1, 
    ".*\\-": 2, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 1, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "CheckRunTimeSettings": {
    "label": "check", 
    "params": 0, 
    "return": 1
  }, 
  "sp_clear": {
    "for (.*) param": 1, 
    "void": 1, 
    "params": 1, 
    "sp_int *": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "return;": 1, 
    "for (.*)": 1, 
    ".*\\-": 2, 
    "= .*\\+ param": 1, 
    "if (.*)": 1, 
    "return": 0, 
    ".*\\+": 1, 
    ".*\\- param": 1, 
    "= .*\\+": 1
  }, 
  "sp_exptmod_nct": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* != 0)": 1, 
    "if (.* != 0) param": 1, 
    "if (.* < .*)": 1, 
    "if (.* == 0) param": 1, 
    "params": 4, 
    "int": 1, 
    "sp_int *": 4, 
    "if (.*) param": 1, 
    "if (.* == 0)": 5, 
    ".*\\-": 10, 
    "if (.* < .*) param": 1, 
    "if (.*)": 8, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "sp_sub_d": {
    "sp_int_digit": 1, 
    "params": 3, 
    "int": 1, 
    "sp_int *": 2, 
    "if (.*) param": 1, 
    ".*\\-": 1, 
    "if (.*)": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "sp_exptmod_ex": {
    "if (.* != 0)": 2, 
    "if (.* != 0) param": 1, 
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "if (.* == 0) param": 1, 
    "params": 5, 
    "int": 2, 
    "sp_int *": 4, 
    "if (.*) param": 1, 
    "if (.* == 0)": 10, 
    ".*\\-": 12, 
    "if (.* < .*) param": 1, 
    "if (.*)": 13, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "sp_div_2_mod_ct": {
    "for (.*) param": 1, 
    "if (.* < \\d*)": 3, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 3, 
    "while(.*) param": 1, 
    "if (.* == 0) param": 1, 
    "params": 3, 
    "int": 1, 
    "sp_int *": 3, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 2, 
    "while(.*)": 1, 
    "for (.*)": 1, 
    ".*\\-": 16, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 5, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 8, 
    "= .*\\+": 8
  }, 
  "_sp_exptmod_mont_ex": {
    "while(.*) param": 1, 
    "if (.* == 0) param": 1, 
    "params": 5, 
    ".*\\+ 0x.*": 8, 
    "int": 2, 
    "sp_int *": 4, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 11, 
    "if (.*) param": 1, 
    "while(.*)": 1, 
    "for (.*)": 1, 
    ".*\\-": 5, 
    "= .*\\+ param": 1, 
    "if (.*)": 12, 
    ".*\\+ 0x.* param": 1, 
    "return": 1, 
    ".*\\+": 12, 
    "= .*\\+": 3, 
    ".*\\- param": 1
  }, 
  "sp_div_2d": {
    "if (.* != 0)": 1, 
    "if (.* < .*)": 2, 
    "if (.* == 0) param": 1, 
    ".*\\+ 0x.*": 1, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 1, 
    "while(.*)": 1, 
    ".*\\-": 9, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    ".*\\+": 4, 
    "if (.* < \\d*) param": 1, 
    "if (.* < \\d*)": 2, 
    "if (.* != 0) param": 1, 
    "while(.*) param": 1, 
    "params": 4, 
    "int": 2, 
    "sp_int *": 3, 
    "if (.*) param": 1, 
    "if (.*)": 7, 
    ".*\\+ 0x.* param": 1, 
    ".*\\- param": 1, 
    "return": 1, 
    "= .*\\+": 4
  }, 
  "sp_init_copy": {
    "if (.* == 0) param": 1, 
    "label": "init", 
    "params": 2, 
    "int": 1, 
    "sp_int *": 2, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "sp_to_unsigned_bin": {
    "byte *": 1, 
    "params": 2, 
    "int": 1, 
    "sp_int *": 1, 
    "return": 1
  }, 
  "sp_mont_norm": {
    "if (.* < \\d*)": 2, 
    "if (.* < .*)": 2, 
    "params": 2, 
    "int": 1, 
    "sp_int *": 2, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 4, 
    "while(.*)": 1, 
    ".*\\-": 10, 
    "= .*\\+ param": 1, 
    "if (.*)": 7, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 2, 
    "= .*\\+": 2
  }, 
  "sp_set_int": {
    "if (.* == 0) param": 1, 
    "label": "set", 
    "params": 2, 
    "int": 1, 
    "sp_int *": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "ulong": 1, 
    ".*\\-": 3, 
    "if (.*)": 2, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "sp_div_d": {
    "if (.* < \\d*)": 2, 
    "if (.* < \\d*) param": 1, 
    "sp_int_digit *": 1, 
    "if (.* < .*)": 2, 
    "while(.*) param": 1, 
    "if (.* == 0) param": 1, 
    "sp_int_digit": 1, 
    "params": 4, 
    "int": 1, 
    "sp_int *": 2, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 2, 
    "while(.*)": 2, 
    ".*\\-": 12, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 9, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 6, 
    "= .*\\+": 5
  }, 
  "sp_rshd": {
    "for (.*) param": 1, 
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "void": 1, 
    "if (.* < .*)": 1, 
    "params": 2, 
    "int": 1, 
    "sp_int *": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "return;": 1, 
    "for (.*)": 1, 
    ".*\\-": 4, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 2, 
    "return": 0, 
    ".*\\- param": 1, 
    ".*\\+": 2, 
    "= .*\\+": 2
  }, 
  "_sp_add_off": {
    "for (.*) param": 1, 
    "if (.* != 0)": 1, 
    "if (.* < .*)": 2, 
    ".*\\+ param": 1, 
    "while(.*)": 2, 
    "for (.*)": 2, 
    ".*\\-": 21, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    ".*\\+": 13, 
    "if (.* < \\d*) param": 1, 
    "if (.* < \\d*)": 2, 
    "if (.* != 0) param": 1, 
    "break": 1, 
    "while(.*) param": 1, 
    "label": "add", 
    "params": 4, 
    "break param": 1, 
    "int": 2, 
    "sp_int *": 3, 
    "if (.*) param": 1, 
    "return 0": 1, 
    "return 0 param": 1, 
    "if (.*)": 4, 
    ".*\\- param": 1, 
    "return": 1, 
    "= .*\\+": 13
  }, 
  "sp_rshb": {
    "for (.*) param": 1, 
    "if (.* != 0)": 1, 
    "if (.* < .*)": 2, 
    "if (.* == 0) param": 1, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 1, 
    "while(.*)": 1, 
    "for (.*)": 2, 
    ".*\\-": 13, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    ".*\\+": 8, 
    "if (.* < \\d*) param": 1, 
    "if (.* < \\d*)": 2, 
    "if (.* != 0) param": 1, 
    "void": 1, 
    "return; param": 1, 
    "while(.*) param": 1, 
    "params": 3, 
    "int": 1, 
    "sp_int *": 2, 
    "if (.*) param": 1, 
    "return;": 1, 
    "if (.*)": 4, 
    ".*\\- param": 1, 
    "return": 0, 
    "= .*\\+": 8
  }, 
  "sp_sqr": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "if (.* == 0) param": 1, 
    "params": 2, 
    "int": 1, 
    "sp_int *": 2, 
    "if (.*) param": 1, 
    "if (.* == 0)": 3, 
    ".*\\-": 4, 
    "if (.* < .*) param": 1, 
    "if (.*)": 4, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "sp_add_d": {
    "label": "add", 
    "sp_int_digit": 1, 
    "params": 3, 
    "int": 1, 
    "sp_int *": 2, 
    "if (.*) param": 1, 
    ".*\\-": 1, 
    "if (.*)": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "sp_mont_red": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "if (.* == 0) param": 1, 
    "sp_int_digit": 1, 
    "params": 3, 
    "int": 1, 
    "sp_int *": 2, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    ".*\\-": 4, 
    "if (.* < .*) param": 1, 
    "if (.*)": 2, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 1
  }, 
  "sp_submod": {
    "for (.*) param": 1, 
    "if (.* < \\d*)": 3, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 3, 
    "if (.* == 0) param": 1, 
    "params": 4, 
    "int": 1, 
    "sp_int *": 4, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 5, 
    "for (.*)": 1, 
    ".*\\-": 12, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 10, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 4, 
    "= .*\\+": 4
  }, 
  "sp_read_unsigned_bin": {
    "for (.*) param": 1, 
    "if (.* != 0)": 1, 
    "if (.* < .*)": 2, 
    "byte *": 1, 
    "if (.* == 0) param": 1, 
    "word32": 1, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 2, 
    "while(.*)": 1, 
    "for (.*)": 1, 
    ".*\\-": 22, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    "case param": 1, 
    ".*\\+": 15, 
    "case": 7, 
    "if (.* != 0) param": 1, 
    "if (.* < \\d*)": 2, 
    "if (.* < \\d*) param": 1, 
    "while(.*) param": 1, 
    "label": "read", 
    "params": 3, 
    "int": 1, 
    "sp_int *": 1, 
    "if (.*) param": 1, 
    "if (.*)": 4, 
    ".*\\- param": 1, 
    "return": 1, 
    "= .*\\+": 6
  }, 
  "sp_mul_d": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "if (.* == 0) param": 1, 
    "sp_int_digit": 1, 
    "params": 3, 
    "int": 1, 
    "sp_int *": 2, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 2, 
    ".*\\-": 3, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 3, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "sp_mul": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "if (.* == 0) param": 1, 
    "params": 3, 
    "int": 1, 
    "sp_int *": 3, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 3, 
    ".*\\-": 4, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 4, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "sp_addmod_ct": {
    "for (.*) param": 1, 
    "if (.* < \\d*)": 5, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 5, 
    "while(.*) param": 1, 
    "if (.* == 0) param": 1, 
    "label": "add", 
    "params": 4, 
    "int": 1, 
    "sp_int *": 4, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 2, 
    "while(.*)": 1, 
    "for (.*)": 2, 
    ".*\\-": 23, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 7, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 13, 
    "= .*\\+": 12
  }, 
  "sp_is_bit_set": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "label": "set", 
    "uint": 1, 
    "params": 2, 
    "int": 1, 
    "sp_int *": 1, 
    "if (.*) param": 1, 
    ".*\\-": 2, 
    "if (.* < .*) param": 1, 
    "if (.*)": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "_sp_zero": {
    "void": 1, 
    "params": 1, 
    "sp_int *": 1, 
    "return;": 1, 
    ".*\\-": 2, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "_sp_cmp": {
    "params": 2, 
    "int": 1, 
    "sp_int *": 2, 
    "return": 1
  }, 
  "sp_sqrmod": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "if (.* == 0) param": 1, 
    "params": 3, 
    "int": 1, 
    "sp_int *": 3, 
    "if (.*) param": 1, 
    "if (.* == 0)": 3, 
    ".*\\-": 3, 
    "if (.* < .*) param": 1, 
    "if (.*)": 4, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "sp_prime_is_prime_ex": {
    "for (.*) param": 1, 
    "if (.* != 0)": 3, 
    "int *": 1, 
    "if (.* < .*)": 2, 
    "if (.* == 0) param": 1, 
    ".*\\+ 0x.*": 2, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 10, 
    "while(.*)": 2, 
    "for (.*)": 4, 
    ".*\\-": 22, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    ".*\\+": 19, 
    "if (.* != 0) param": 1, 
    "if (.* < \\d*)": 2, 
    "break": 3, 
    "while(.*) param": 1, 
    "params": 4, 
    "break param": 1, 
    "int": 2, 
    "WC_RNG *": 1, 
    "sp_int *": 1, 
    "if (.*) param": 1, 
    "if (.*)": 15, 
    ".*\\+ 0x.* param": 1, 
    ".*\\- param": 1, 
    "return": 1, 
    "= .*\\+": 14
  }, 
  "sp_mont_setup": {
    "sp_int_digit *": 1, 
    "if (.* == 0) param": 1, 
    "label": "set", 
    "params": 2, 
    "int": 1, 
    "sp_int *": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 2, 
    ".*\\-": 7, 
    "if (.*)": 3, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "sp_init_multi": {
    "label": "init", 
    "params": 6, 
    "int": 1, 
    "sp_int *": 6, 
    "if (.*) param": 1, 
    "return 0": 1, 
    ".*\\-": 12, 
    "if (.*)": 6, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "sp_invmod_mont_ct": {
    "for (.*) param": 1, 
    "if (.* < .*)": 3, 
    "if (.* == 0) param": 1, 
    ".*\\+ 0x.*": 5, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 12, 
    "while(.*)": 1, 
    "for (.*)": 3, 
    ".*\\-": 23, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    ".*\\+": 18, 
    "if (.* < \\d*)": 3, 
    "if (.* < \\d*) param": 1, 
    "sp_int_digit": 1, 
    "params": 4, 
    "int": 1, 
    "sp_int *": 3, 
    "if (.*) param": 1, 
    "if (.*)": 14, 
    ".*\\+ 0x.* param": 1, 
    ".*\\- param": 1, 
    "return": 1, 
    "= .*\\+": 14
  }, 
  "ForceZero": {
    "void": 1, 
    "word32": 1, 
    "params": 2, 
    "return;": 1, 
    "while(.*)": 1, 
    "void *": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "sp_lshb": {
    "for (.*) param": 1, 
    "if (.* != 0)": 2, 
    "if (.* < .*)": 1, 
    "if (.* == 0) param": 1, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 2, 
    "memset(.*)": 1, 
    "while(.*)": 1, 
    "for (.*)": 1, 
    ".*\\-": 16, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    ".*\\+": 12, 
    "if (.* != 0) param": 1, 
    "if (.* < \\d*)": 1, 
    "memset(.*) param": 1, 
    "while(.*) param": 1, 
    "params": 2, 
    "int": 2, 
    "sp_int *": 1, 
    "if (.*) param": 1, 
    "if (.*)": 6, 
    ".*\\- param": 1, 
    "return": 1, 
    "= .*\\+": 8
  }, 
  "sp_submod_ct": {
    "for (.*) param": 1, 
    "if (.* < \\d*)": 4, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 4, 
    "while(.*) param": 1, 
    "if (.* == 0) param": 1, 
    "params": 4, 
    "int": 1, 
    "sp_int *": 4, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 2, 
    "while(.*)": 1, 
    "for (.*)": 2, 
    ".*\\-": 21, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 6, 
    "return": 1, 
    ".*\\+": 10, 
    ".*\\- param": 1, 
    "= .*\\+": 9
  }, 
  "sp_lshd": {
    "if (.* < \\d*)": 2, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 2, 
    "memset(.*) param": 1, 
    "while(.*) param": 1, 
    "if (.* == 0) param": 1, 
    "params": 2, 
    "int": 2, 
    "sp_int *": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 2, 
    "memset(.*)": 1, 
    "while(.*)": 1, 
    ".*\\-": 11, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 4, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 5, 
    "= .*\\+": 4
  }, 
  "sp_to_unsigned_bin_len": {
    "for (.*) param": 1, 
    "if (.* != 0)": 1, 
    "if (.* < .*)": 2, 
    "byte *": 1, 
    "if (.* == 0) param": 1, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 1, 
    "while(.*)": 1, 
    "for (.*)": 2, 
    ".*\\-": 8, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    ".*\\+": 5, 
    "if (.* != 0) param": 1, 
    "if (.* < \\d*)": 2, 
    "if (.* < \\d*) param": 1, 
    "break": 2, 
    "params": 3, 
    "break param": 1, 
    "int": 2, 
    "sp_int *": 1, 
    "if (.*) param": 1, 
    "if (.*)": 6, 
    ".*\\- param": 1, 
    "return": 1, 
    "= .*\\+": 5
  }, 
  "_sp_div_10": {
    "if (.* < \\d*)": 1, 
    "sp_int_digit *": 1, 
    "void": 1, 
    "if (.* < .*)": 1, 
    "return; param": 1, 
    "while(.*) param": 1, 
    "params": 3, 
    "sp_int *": 2, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "return;": 1, 
    "while(.*)": 3, 
    ".*\\-": 16, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 3, 
    "return": 0, 
    ".*\\- param": 1, 
    ".*\\+": 9, 
    "= .*\\+": 8
  }, 
  "_sp_add_d": {
    "for (.*) param": 1, 
    "if (.* < .*)": 2, 
    "if (.* == 0) param": 1, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 2, 
    "while(.*)": 1, 
    "for (.*)": 1, 
    ".*\\-": 14, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    ".*\\+": 6, 
    "if (.* < \\d*)": 2, 
    "if (.* < \\d*) param": 1, 
    "while(.*) param": 1, 
    "label": "add", 
    "sp_int_digit": 1, 
    "params": 3, 
    "int": 1, 
    "sp_int *": 2, 
    "if (.*) param": 1, 
    "if (.*)": 5, 
    ".*\\- param": 1, 
    "return": 1, 
    "= .*\\+": 6
  }, 
  "sp_prime_miller_rabin": {
    "for (.*) param": 1, 
    "int *": 1, 
    "params": 3, 
    "int": 1, 
    "sp_int *": 2, 
    ".*\\+ param": 1, 
    "for (.*)": 1, 
    ".*\\-": 5, 
    "= .*\\+ param": 1, 
    "return": 1, 
    ".*\\+": 3, 
    "= .*\\+": 2, 
    ".*\\- param": 1
  }, 
  "_sp_sub_off": {
    "for (.*) param": 1, 
    "if (.* < .*)": 3, 
    ".*\\+ param": 1, 
    "while(.*)": 3, 
    "for (.*)": 1, 
    ".*\\-": 17, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    ".*\\+": 10, 
    "if (.* < \\d*)": 3, 
    "if (.* < \\d*) param": 1, 
    "break": 2, 
    "while(.*) param": 1, 
    "params": 4, 
    "break param": 1, 
    "int": 2, 
    "sp_int *": 3, 
    "if (.*) param": 1, 
    "return 0": 1, 
    "return 0 param": 1, 
    "if (.*)": 5, 
    ".*\\- param": 1, 
    "return": 1, 
    "= .*\\+": 10
  }, 
  "sp_init_size": {
    "if (.* == 0) param": 1, 
    "label": "init", 
    "params": 2, 
    "int": 2, 
    "sp_int *": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    ".*\\-": 1, 
    "if (.*)": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "sp_invmod": {
    "for (.*) param": 1, 
    "if (.* != 0)": 6, 
    "if (.* < .*)": 1, 
    "if (.* == 0) param": 1, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 8, 
    "while(.*)": 1, 
    "for (.*)": 1, 
    ".*\\-": 15, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    ".*\\+": 10, 
    "if (.* < \\d*) param": 1, 
    "if (.* < \\d*)": 1, 
    "if (.* != 0) param": 1, 
    "break": 1, 
    "while(.*) param": 1, 
    "params": 3, 
    "break param": 1, 
    "int": 1, 
    "sp_int *": 3, 
    "if (.*) param": 1, 
    "if (.*)": 24, 
    ".*\\- param": 1, 
    "return": 1, 
    "= .*\\+": 6
  }, 
  "sp_exptmod": {
    "params": 4, 
    "int": 1, 
    "sp_int *": 4, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    ".*\\-": 2, 
    "if (.*)": 2, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "sp_mod": {
    "if (.* == 0) param": 1, 
    "params": 3, 
    "int": 1, 
    "sp_int *": 3, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    ".*\\-": 1, 
    "if (.*)": 2, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "sp_zero": {
    "void": 1, 
    "params": 1, 
    "sp_int *": 1, 
    "if (.*) param": 1, 
    "return;": 1, 
    "if (.*)": 1, 
    "return": 0
  }, 
  "sp_mulmod": {
    "if (.* < \\d*)": 2, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 2, 
    "if (.* == 0) param": 1, 
    "params": 4, 
    "int": 1, 
    "sp_int *": 4, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 5, 
    ".*\\-": 5, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 7, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 3, 
    "= .*\\+": 3
  }, 
  "_sp_mont_red": {
    "for (.*) param": 1, 
    "if (.* != 0)": 1, 
    "if (.* != 0) param": 1, 
    "if (.* < \\d*)": 1, 
    "if (.* < .*)": 1, 
    "while(.*) param": 1, 
    "sp_int_digit": 1, 
    "params": 3, 
    "int": 1, 
    "sp_int *": 2, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "while(.*)": 1, 
    "return 0": 1, 
    "for (.*)": 3, 
    ".*\\-": 36, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 4, 
    "return": 1, 
    ".*\\+": 24, 
    ".*\\- param": 1, 
    "= .*\\+": 18
  }, 
  "sp_todecimal": {
    "for (.*) param": 1, 
    "while(.*) param": 1, 
    "if (.* == 0) param": 1, 
    "params": 2, 
    "int": 1, 
    "sp_int *": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 2, 
    "while(.*)": 1, 
    "for (.*)": 1, 
    "char *": 1, 
    ".*\\-": 6, 
    "= .*\\+ param": 1, 
    "if (.*)": 3, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 8, 
    "= .*\\+": 6
  }, 
  "sp_mul_2d": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "if (.* == 0) param": 1, 
    "params": 3, 
    "int": 2, 
    "sp_int *": 2, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 3, 
    ".*\\-": 4, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 5, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 2, 
    "= .*\\+": 2
  }, 
  "sp_unsigned_bin_size": {
    "params": 1, 
    "int": 1, 
    "sp_int *": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 1, 
    "return": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "sp_prime_miller_rabin_ex": {
    "if (.* != 0)": 3, 
    "if (.* != 0) param": 1, 
    "int *": 1, 
    "break": 1, 
    "while(.*) param": 1, 
    "if (.* == 0) param": 1, 
    "params": 6, 
    "break param": 1, 
    "int": 1, 
    "sp_int *": 5, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 2, 
    "while(.*)": 1, 
    "goto": 1, 
    ".*\\-": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 7, 
    "return": 1, 
    ".*\\+": 2, 
    ".*\\- param": 1, 
    "= .*\\+": 2
  }, 
  "sp_prime_is_prime": {
    "for (.*) param": 1, 
    "if (.* != 0)": 2, 
    "int *": 1, 
    "if (.* < .*)": 1, 
    "if (.* == 0) param": 1, 
    ".*\\+ 0x.*": 3, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 8, 
    "for (.*)": 3, 
    ".*\\-": 4, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    ".*\\+": 6, 
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* != 0) param": 1, 
    "break": 2, 
    "params": 3, 
    "break param": 1, 
    "int": 2, 
    "sp_int *": 1, 
    "if (.*) param": 1, 
    "return 0": 1, 
    "return 0 param": 1, 
    "if (.*)": 11, 
    ".*\\+ 0x.* param": 1, 
    ".*\\- param": 1, 
    "return": 1, 
    "= .*\\+": 5
  }, 
  "_sp_div_small": {
    "if (.* < \\d*)": 1, 
    "sp_int_digit *": 1, 
    "void": 1, 
    "if (.* < .*)": 1, 
    "return; param": 1, 
    "while(.*) param": 1, 
    "sp_int_digit": 1, 
    "params": 4, 
    "sp_int *": 2, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "return;": 1, 
    "while(.*)": 3, 
    ".*\\-": 15, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 3, 
    "return": 0, 
    ".*\\- param": 1, 
    ".*\\+": 10, 
    "= .*\\+": 7
  }, 
  "sp_read_radix": {
    "if (.* == 0) param": 1, 
    "label": "read", 
    "params": 3, 
    "int": 2, 
    "sp_int *": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 2, 
    "char *": 1, 
    ".*\\-": 4, 
    "if (.*)": 5, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "sp_cnt_lsb": {
    "for (.*) param": 1, 
    "if (.* != 0)": 1, 
    "if (.* < .*)": 1, 
    ".*\\+ 0x.*": 2, 
    ".*\\+ param": 1, 
    "while(.*)": 1, 
    "for (.*)": 1, 
    ".*\\-": 4, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    ".*\\+": 5, 
    "if (.* != 0) param": 1, 
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "break": 1, 
    "break param": 1, 
    "params": 1, 
    "int": 1, 
    "sp_int *": 1, 
    "if (.*) param": 1, 
    "if (.*)": 4, 
    ".*\\+ 0x.* param": 1, 
    ".*\\- param": 1, 
    "return": 1, 
    "= .*\\+": 4
  }, 
  "sp_sub": {
    "params": 3, 
    "int": 1, 
    "sp_int *": 3, 
    "if (.*) param": 1, 
    ".*\\-": 1, 
    "if (.*)": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "_sp_div": {
    "for (.*) param": 1, 
    "if (.* < .*)": 2, 
    ".*\\+ param": 1, 
    "while(.*)": 3, 
    "for (.*)": 3, 
    ".*\\-": 30, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    ".*\\+": 22, 
    "if (.* < \\d*)": 2, 
    "if (.* < \\d*) param": 1, 
    "break": 1, 
    "while(.*) param": 1, 
    "params": 4, 
    "break param": 1, 
    "int": 1, 
    "sp_int *": 4, 
    "if (.*) param": 1, 
    "return 0": 1, 
    "return 0 param": 1, 
    "if (.*)": 4, 
    "return": 1, 
    ".*\\- param": 1, 
    "= .*\\+": 16
  }, 
  "sp_tohex": {
    "for (.*) param": 1, 
    "while(.*) param": 1, 
    "if (.* == 0) param": 1, 
    "params": 2, 
    "int": 1, 
    "sp_int *": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 3, 
    "while(.*)": 1, 
    "for (.*)": 3, 
    "char *": 1, 
    ".*\\-": 11, 
    "= .*\\+ param": 1, 
    "if (.*)": 4, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 7, 
    "= .*\\+": 7
  }, 
  "ByteToHex": {
    "byte": 1, 
    "params": 1, 
    ".*\\+ 0x.*": 1, 
    "char": 1, 
    ".*\\+ 0x.* param": 1, 
    "return": 1, 
    ".*\\+": 1
  }, 
  "_sp_sub_d": {
    "for (.*) param": 1, 
    "if (.* < .*)": 2, 
    "if (.* == 0) param": 1, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 1, 
    "while(.*)": 2, 
    "for (.*)": 1, 
    ".*\\-": 15, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    ".*\\+": 5, 
    "if (.* < \\d*)": 2, 
    "if (.* < \\d*) param": 1, 
    "void": 1, 
    "return; param": 1, 
    "while(.*) param": 1, 
    "sp_int_digit": 1, 
    "params": 3, 
    "sp_int *": 2, 
    "if (.*) param": 1, 
    "return;": 1, 
    "if (.*)": 4, 
    ".*\\- param": 1, 
    "return": 0, 
    "= .*\\+": 5
  }, 
  "sp_radix_size": {
    "if (.* != 0)": 1, 
    "int *": 1, 
    "while(.*) param": 1, 
    "if (.* == 0) param": 1, 
    "params": 3, 
    "int": 2, 
    "sp_int *": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 4, 
    "while(.*)": 1, 
    ".*\\-": 4, 
    "= .*\\+ param": 1, 
    "if (.*)": 7, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 5, 
    "= .*\\+": 5
  }, 
  "sp_cond_swap_ct": {
    "for (.*) param": 1, 
    "params": 4, 
    "int": 3, 
    "sp_int *": 2, 
    ".*\\+ param": 1, 
    "for (.*)": 3, 
    ".*\\-": 7, 
    "= .*\\+ param": 1, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 3, 
    "= .*\\+": 3
  }, 
  "HexCharToByte": {
    "if (.* < \\d*)": 3, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 3, 
    "params": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "char": 2, 
    ".*\\-": 4, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 3, 
    "return": 1, 
    ".*\\+": 3, 
    ".*\\- param": 1, 
    "= .*\\+": 3
  }, 
  "sp_copy": {
    "memcpy(.*) param": 1, 
    "if (.* == 0) param": 1, 
    "label": "copy", 
    "params": 2, 
    "int": 1, 
    "sp_int *": 2, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "memcpy(.*)": 1, 
    ".*\\-": 5, 
    "if (.*)": 3, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "_sp_exptmod_base_2": {
    "if (.* < \\d*)": 6, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 6, 
    "while(.*) param": 1, 
    "if (.* == 0) param": 1, 
    "params": 4, 
    "int": 2, 
    "sp_int *": 3, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 2, 
    "while(.*)": 2, 
    "for (.*)": 1, 
    ".*\\-": 16, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 15, 
    "return": 1, 
    ".*\\+": 10, 
    "= .*\\+": 9, 
    ".*\\- param": 1
  }, 
  "_sp_read_radix_16": {
    "for (.*) param": 1, 
    "if (.* < .*)": 3, 
    "if (.* == 0) param": 1, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 2, 
    "while(.*)": 2, 
    "goto": 2, 
    "for (.*)": 1, 
    ".*\\-": 13, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    ".*\\+": 8, 
    "if (.* < \\d*)": 3, 
    "if (.* < \\d*) param": 1, 
    "while(.*) param": 1, 
    "label": "read", 
    "params": 2, 
    "int": 1, 
    "sp_int *": 1, 
    "if (.*) param": 1, 
    "char *": 1, 
    "if (.*)": 6, 
    "return": 1, 
    "= .*\\+": 7, 
    ".*\\- param": 1
  }, 
  "sp_cmp_d": {
    "if (.* < \\d*)": 3, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 3, 
    "if (.* == 0) param": 1, 
    "sp_int_digit": 1, 
    "params": 2, 
    "int": 1, 
    "sp_int *": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 2, 
    ".*\\-": 7, 
    "if (.* < .*) param": 1, 
    "if (.*)": 6, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "sp_count_bits": {
    "for (.*) param": 1, 
    "if (.* < \\d*)": 3, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 3, 
    "while(.*) param": 1, 
    "label": "count", 
    "params": 1, 
    ".*\\+ 0x.*": 1, 
    "int": 1, 
    "sp_int *": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "while(.*)": 1, 
    "for (.*)": 2, 
    ".*\\-": 6, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 4, 
    ".*\\+ 0x.* param": 1, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 6, 
    "= .*\\+": 6
  }, 
  "sp_div_word": {
    "sp_int_digit": 3, 
    "params": 3, 
    "int": 1, 
    "return": 1
  }, 
  "_sp_read_radix_10": {
    "for (.*) param": 1, 
    "if (.* != 0)": 2, 
    "if (.* < .*)": 1, 
    ".*\\+ param": 1, 
    "while(.*)": 1, 
    "for (.*)": 1, 
    ".*\\-": 2, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    ".*\\+": 2, 
    "if (.* < \\d*) param": 1, 
    "if (.* < \\d*)": 1, 
    "if (.* != 0) param": 1, 
    "break": 1, 
    "label": "read", 
    "params": 2, 
    "break param": 1, 
    "int": 1, 
    "sp_int *": 1, 
    "if (.*) param": 1, 
    "char *": 1, 
    "if (.*)": 4, 
    "return": 1, 
    "= .*\\+": 2, 
    ".*\\- param": 1
  }, 
  "sp_forcezero": {
    "void": 1, 
    "params": 1, 
    "sp_int *": 1, 
    "if (.*) param": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "if (.*)": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "sp_cmp": {
    "params": 2, 
    "int": 1, 
    "sp_int *": 2, 
    "if (.*) param": 1, 
    ".*\\-": 1, 
    "if (.*)": 3, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "sp_free": {
    "void": 1, 
    "label": "free", 
    "params": 1, 
    "sp_int *": 1, 
    "return;": 1, 
    "return": 0
  }
}