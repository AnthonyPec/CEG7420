{
  "wc_RsaPSS_VerifyInline_ex": {
    "byte *": 1, 
    "byte * *": 1, 
    "RsaKey *": 1, 
    "word32": 1, 
    "params": 7, 
    "int": 3, 
    "wc_HashType": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "wc_RsaFunctionSync": {
    "if (.* != 0)": 6, 
    "if (.* < .*)": 4, 
    "byte *": 2, 
    "if (.* == 0) param": 1, 
    "RsaKey *": 1, 
    "word32": 1, 
    ".*\\+ 0x.*": 14, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 19, 
    "word32 *": 1, 
    ".*\\-": 30, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    ".*\\+": 14, 
    "if (.* < \\d*)": 4, 
    "if (.* != 0) param": 1, 
    "if (.* < \\d*) param": 1, 
    "params": 7, 
    "int": 2, 
    "WC_RNG *": 1, 
    "if (.*) param": 1, 
    "if (.*)": 29, 
    ".*\\+ 0x.* param": 1, 
    ".*\\- param": 1, 
    "return": 1, 
    "= .*\\+": 12
  }, 
  "wc_RsaSSL_Verify": {
    "byte *": 2, 
    "RsaKey *": 1, 
    "word32": 2, 
    "params": 5, 
    "int": 1, 
    "return": 1
  }, 
  "wc_RsaPSS_Verify": {
    "byte *": 2, 
    "RsaKey *": 1, 
    "word32": 2, 
    "params": 7, 
    "int": 2, 
    "wc_HashType": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "wc_RsaPSS_CheckPadding_ex2": {
    "if (.* != 0)": 1, 
    "if (.* < .*)": 2, 
    "byte *": 2, 
    "memcpy(.*) param": 1, 
    "if (.* == 0) param": 1, 
    "word32": 2, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 6, 
    "wc_HashType": 1, 
    "memset(.*)": 1, 
    ".*\\-": 6, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    ".*\\+": 8, 
    "if (.* < \\d*)": 2, 
    "if (.* < \\d*) param": 1, 
    "if (.* != 0) param": 1, 
    "label": "check", 
    "params": 8, 
    "int": 3, 
    "if (.*) param": 1, 
    "memcpy(.*)": 2, 
    "void *": 1, 
    "if (.*)": 10, 
    ".*\\- param": 1, 
    "return": 1, 
    "= .*\\+": 5
  }, 
  "wc_RsaSetRNG": {
    "RsaKey *": 1, 
    "label": "set", 
    "params": 2, 
    "int": 1, 
    "WC_RNG *": 1, 
    "if (.*) param": 1, 
    ".*\\-": 2, 
    "if (.*)": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "wc_RsaPSS_CheckPadding_ex": {
    "byte *": 2, 
    "label": "check", 
    "word32": 2, 
    "params": 7, 
    "int": 3, 
    "wc_HashType": 1, 
    "return": 1
  }, 
  "wc_RsaPSS_VerifyCheckInline": {
    "if (.* < \\d*)": 2, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 2, 
    "byte *": 2, 
    "byte * *": 1, 
    "RsaKey *": 1, 
    "label": "check", 
    "word32": 2, 
    "params": 8, 
    "int": 2, 
    "if (.*) param": 1, 
    "if (.* == 0)": 2, 
    "wc_HashType": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 5, 
    "return": 1
  }, 
  "ctMaskSelInt": {
    "byte": 1, 
    "params": 3, 
    "int": 3, 
    "return": 1
  }, 
  "wc_RsaPrivateDecrypt": {
    "byte *": 2, 
    "RsaKey *": 1, 
    "word32": 2, 
    "params": 5, 
    "int": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "RsaUnPad": {
    "for (.*) param": 1, 
    "if (.* < .*)": 2, 
    "byte *": 1, 
    "byte * *": 1, 
    ".*\\+ param": 1, 
    "while(.*)": 1, 
    "for (.*)": 1, 
    ".*\\-": 7, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    ".*\\+": 5, 
    "if (.* < \\d*)": 2, 
    "if (.* < \\d*) param": 1, 
    "break": 1, 
    "byte": 1, 
    "while(.*) param": 1, 
    "uint": 1, 
    "params": 4, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.*)": 5, 
    "return": 1, 
    "= .*\\+": 5, 
    ".*\\- param": 1
  }, 
  "ctMaskGTE": {
    "byte": 1, 
    "params": 2, 
    "int": 2, 
    "return 0": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "wc_RsaPrivateDecrypt_ex": {
    "byte *": 3, 
    "RsaKey *": 1, 
    "word32": 3, 
    "params": 10, 
    "int": 3, 
    "wc_HashType": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "RsaMGF1": {
    "for (.*) param": 1, 
    "if (.* < \\d*)": 4, 
    "if (.* != 0)": 1, 
    "if (.* < .*)": 4, 
    "byte *": 2, 
    "while(.*) param": 1, 
    "word32": 2, 
    "params": 6, 
    "int": 1, 
    ".*\\+ param": 1, 
    "wc_HashType": 1, 
    "memset(.*)": 1, 
    "while(.*)": 1, 
    "memcpy(.*)": 1, 
    "for (.*)": 1, 
    "void *": 1, 
    ".*\\-": 2, 
    "= .*\\+ param": 1, 
    "if (.*)": 5, 
    "return": 1, 
    ".*\\+": 10, 
    "= .*\\+": 5
  }, 
  "wc_RsaPrivateDecryptInline": {
    "byte *": 1, 
    "byte * *": 1, 
    "RsaKey *": 1, 
    "word32": 1, 
    "params": 4, 
    "int": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "ForceZero": {
    "void": 1, 
    "word32": 1, 
    "params": 2, 
    "return;": 1, 
    "while(.*)": 1, 
    "void *": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "ctMaskLT": {
    "byte": 1, 
    "params": 2, 
    "int": 2, 
    ".*\\+ param": 1, 
    "return 0": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\+": 1, 
    ".*\\- param": 1
  }, 
  "wc_RsaFunction": {
    "byte *": 2, 
    "RsaKey *": 1, 
    "word32": 1, 
    "params": 7, 
    "int": 2, 
    "WC_RNG *": 1, 
    "word32 *": 1, 
    "return": 1
  }, 
  "RsaPad_OAEP": {
    "if (.* != 0)": 1, 
    "if (.* < .*)": 7, 
    "byte *": 3, 
    "word32": 3, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 4, 
    "wc_HashType": 1, 
    "memset(.*)": 1, 
    "while(.*)": 1, 
    "for (.*)": 2, 
    ".*\\-": 11, 
    "= .*\\+ param": 1, 
    ".*\\+": 15, 
    "if (.* != 0) param": 1, 
    "if (.* < \\d*)": 7, 
    "break": 1, 
    "byte": 1, 
    "params": 11, 
    "int": 2, 
    "WC_RNG *": 1, 
    "if (.*) param": 1, 
    "memcpy(.*)": 2, 
    "void *": 1, 
    "if (.*)": 13, 
    "return": 1, 
    "= .*\\+": 11, 
    ".*\\- param": 1
  }, 
  "RsaMGF": {
    "break": 6, 
    "byte *": 2, 
    "word32": 2, 
    "params": 6, 
    "int": 2, 
    "void *": 1, 
    ".*\\-": 1, 
    "return": 1, 
    "case": 6
  }, 
  "wc_RsaExportKey": {
    "byte *": 5, 
    "RsaKey *": 1, 
    "params": 11, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 5, 
    "word32 *": 5, 
    ".*\\-": 6, 
    "if (.*)": 6, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "RsaGetValue": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "byte *": 1, 
    "label": "get", 
    "mp_int *": 1, 
    "params": 3, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 2, 
    "word32 *": 1, 
    ".*\\-": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 3, 
    "return": 1
  }, 
  "ctMask16Eq": {
    "params": 2, 
    "int": 2, 
    "return": 1
  }, 
  "wc_RsaPublicEncrypt": {
    "byte *": 2, 
    "RsaKey *": 1, 
    "word32": 2, 
    "params": 6, 
    "int": 1, 
    "WC_RNG *": 1, 
    "return": 1
  }, 
  "wc_RsaPublicEncrypt_ex": {
    "byte *": 3, 
    "RsaKey *": 1, 
    "word32": 3, 
    "params": 11, 
    "int": 3, 
    "WC_RNG *": 1, 
    "wc_HashType": 1, 
    "return": 1
  }, 
  "RsaPad": {
    "if (.* != 0)": 1, 
    "if (.* < .*)": 1, 
    "byte *": 2, 
    "memcpy(.*) param": 1, 
    "if (.* == 0) param": 1, 
    "word32": 2, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 1, 
    "memset(.*)": 1, 
    "for (.*)": 1, 
    ".*\\-": 8, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    ".*\\+": 6, 
    "if (.* < \\d*) param": 1, 
    "if (.* < \\d*)": 1, 
    "byte": 1, 
    "memset(.*) param": 1, 
    "params": 6, 
    "int": 1, 
    "WC_RNG *": 1, 
    "if (.*) param": 1, 
    "memcpy(.*)": 1, 
    "if (.*)": 5, 
    ".*\\- param": 1, 
    "return": 1, 
    "= .*\\+": 3
  }, 
  "wc_RsaUnPad_ex": {
    "byte": 1, 
    "byte *": 2, 
    "byte * *": 1, 
    "if (.* == 0) param": 1, 
    "word32": 2, 
    "params": 12, 
    "int": 5, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "wc_HashType": 1, 
    "void *": 1, 
    ".*\\-": 1, 
    "if (.*)": 3, 
    "return": 1
  }, 
  "wc_InitRsaKey_ex": {
    "memset(.*) param": 1, 
    "RsaKey *": 1, 
    "label": "init", 
    "params": 3, 
    "int": 2, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "memset(.*)": 1, 
    "void *": 1, 
    ".*\\-": 11, 
    "if (.*)": 2, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "wc_RsaPSS_VerifyCheck": {
    "if (.* < \\d*)": 2, 
    "if (.* < .*)": 2, 
    "byte *": 3, 
    "RsaKey *": 1, 
    "label": "check", 
    "word32": 3, 
    "params": 9, 
    "int": 2, 
    "if (.*) param": 1, 
    "if (.* == 0)": 2, 
    "wc_HashType": 1, 
    ".*\\-": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 5, 
    "return": 1
  }, 
  "wc_RsaPSS_Sign_ex": {
    "byte *": 2, 
    "RsaKey *": 1, 
    "word32": 2, 
    "params": 9, 
    "int": 3, 
    "WC_RNG *": 1, 
    "wc_HashType": 1, 
    "return": 1
  }, 
  "ctMaskNotEq": {
    "byte": 1, 
    "params": 2, 
    "int": 2, 
    "return": 1
  }, 
  "wc_RsaPrivateDecryptInline_ex": {
    "byte *": 2, 
    "byte * *": 1, 
    "RsaKey *": 1, 
    "word32": 2, 
    "params": 9, 
    "int": 3, 
    "wc_HashType": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "wc_InitRsaKey": {
    "RsaKey *": 1, 
    "label": "init", 
    "params": 2, 
    "int": 1, 
    "void *": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "wc_RsaPSS_VerifyInline": {
    "byte *": 1, 
    "byte * *": 1, 
    "RsaKey *": 1, 
    "word32": 1, 
    "params": 6, 
    "int": 2, 
    "wc_HashType": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "wc_RsaSSL_Verify_ex2": {
    "byte *": 2, 
    "RsaKey *": 1, 
    "word32": 2, 
    "params": 7, 
    "int": 2, 
    "if (.*) param": 1, 
    "wc_HashType": 1, 
    ".*\\-": 3, 
    "if (.*)": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "ctMaskEq": {
    "byte": 1, 
    "params": 2, 
    "int": 2, 
    "return": 1
  }, 
  "wc_RsaPSS_CheckPadding": {
    "byte *": 2, 
    "label": "check", 
    "word32": 2, 
    "params": 5, 
    "int": 1, 
    "wc_HashType": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "ctMask16GT": {
    "params": 2, 
    "int": 2, 
    ".*\\+ param": 1, 
    "return 0": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\+": 1, 
    ".*\\- param": 1
  }, 
  "wc_hash2mgf": {
    "break": 5, 
    "params": 1, 
    "int": 1, 
    "wc_HashType": 1, 
    "goto": 1, 
    "return": 1, 
    "case": 18
  }, 
  "wc_FreeRsaKey": {
    "RsaKey *": 1, 
    "label": "free", 
    "params": 1, 
    "int": 1, 
    "if (.*) param": 1, 
    ".*\\-": 15, 
    "if (.*)": 2, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "wc_RsaPSS_Sign": {
    "byte *": 2, 
    "RsaKey *": 1, 
    "word32": 2, 
    "params": 8, 
    "int": 2, 
    "WC_RNG *": 1, 
    "wc_HashType": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "RsaPrivateDecryptEx": {
    "for (.*) param": 1, 
    "if (.* != 0)": 1, 
    "if (.* < .*)": 4, 
    "byte *": 3, 
    "memcpy(.*) param": 1, 
    "byte * *": 1, 
    "if (.* == 0) param": 1, 
    "RsaKey *": 1, 
    "word32": 3, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 3, 
    "wc_HashType": 1, 
    "goto": 1, 
    "for (.*)": 1, 
    ".*\\-": 27, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    "case": 6, 
    ".*\\+": 2, 
    "if (.* < \\d*)": 4, 
    "if (.* < \\d*) param": 1, 
    "if (.* != 0) param": 1, 
    "break": 5, 
    "byte": 1, 
    "params": 15, 
    "int": 5, 
    "WC_RNG *": 1, 
    "if (.*) param": 1, 
    "memcpy(.*)": 2, 
    "if (.*)": 11, 
    ".*\\- param": 1, 
    "return": 1, 
    "= .*\\+": 2
  }, 
  "RsaPublicEncryptEx": {
    "if (.* < \\d*)": 7, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 7, 
    "byte": 1, 
    "byte *": 3, 
    "if (.* == 0) param": 1, 
    "RsaKey *": 1, 
    "word32": 3, 
    "params": 14, 
    "int": 5, 
    "WC_RNG *": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "wc_HashType": 1, 
    "goto": 4, 
    ".*\\-": 17, 
    "if (.* < .*) param": 1, 
    "if (.*)": 11, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "wc_RsaSSL_Verify_ex": {
    "byte *": 2, 
    "RsaKey *": 1, 
    "word32": 2, 
    "params": 6, 
    "int": 2, 
    "return": 1
  }, 
  "wc_RsaFunction_ex": {
    "if (.* != 0)": 4, 
    "if (.* != 0) param": 1, 
    "if (.* < \\d*)": 1, 
    "if (.* < .*)": 1, 
    "byte *": 2, 
    "if (.* == 0) param": 1, 
    "RsaKey *": 1, 
    "word32": 1, 
    "params": 8, 
    "int": 3, 
    "WC_RNG *": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 5, 
    "word32 *": 1, 
    ".*\\-": 11, 
    "if (.*)": 9, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "wc_RsaSSL_Sign": {
    "byte *": 2, 
    "RsaKey *": 1, 
    "word32": 2, 
    "params": 6, 
    "int": 1, 
    "WC_RNG *": 1, 
    "return": 1
  }, 
  "ctMaskLTE": {
    "byte": 1, 
    "params": 2, 
    "int": 2, 
    "return 0": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "wc_RsaCleanup": {
    "void": 1, 
    "RsaKey *": 1, 
    "label": "clean", 
    "params": 1, 
    "if (.*) param": 1, 
    "return;": 1, 
    ".*\\-": 9, 
    "if (.*)": 4, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "wc_RsaPad_ex": {
    "byte": 1, 
    "byte *": 3, 
    "if (.* == 0) param": 1, 
    "word32": 3, 
    "params": 14, 
    "int": 5, 
    "WC_RNG *": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "wc_HashType": 1, 
    "void *": 1, 
    ".*\\-": 1, 
    "if (.*)": 3, 
    "return": 1
  }, 
  "ctMask16LT": {
    "params": 2, 
    "int": 2, 
    ".*\\+ param": 1, 
    "return 0": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\+": 1, 
    ".*\\- param": 1
  }, 
  "wc_RsaFlattenPublicKey": {
    "if (.* < \\d*)": 2, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 2, 
    "byte *": 2, 
    "RsaKey *": 1, 
    "params": 5, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 2, 
    "word32 *": 2, 
    ".*\\-": 5, 
    "if (.* < .*) param": 1, 
    "if (.*)": 5, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "ctMaskGT": {
    "byte": 1, 
    "params": 2, 
    "int": 2, 
    ".*\\+ param": 1, 
    "return 0": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\+": 1, 
    ".*\\- param": 1
  }, 
  "RsaUnPad_OAEP": {
    "if (.* != 0)": 1, 
    "if (.* < .*)": 1, 
    "byte *": 2, 
    "byte * *": 1, 
    "word32": 1, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 3, 
    "wc_HashType": 1, 
    "memset(.*)": 1, 
    "while(.*)": 1, 
    "for (.*)": 2, 
    ".*\\-": 8, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    ".*\\+": 16, 
    "if (.* != 0) param": 1, 
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "memset(.*) param": 1, 
    "uint": 1, 
    "params": 8, 
    "int": 2, 
    "if (.*) param": 1, 
    "void *": 1, 
    "if (.*)": 5, 
    "return": 1, 
    ".*\\- param": 1, 
    "= .*\\+": 13
  }, 
  "wc_RsaPSS_Verify_ex": {
    "byte *": 2, 
    "RsaKey *": 1, 
    "word32": 2, 
    "params": 8, 
    "int": 3, 
    "wc_HashType": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "wc_RsaEncryptSize": {
    "RsaKey *": 1, 
    "params": 1, 
    "int": 1, 
    "if (.*) param": 1, 
    ".*\\-": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "ConstantCompare": {
    "for (.*) param": 1, 
    "byte *": 2, 
    "label": "compare", 
    "params": 3, 
    "int": 2, 
    ".*\\+ param": 1, 
    "for (.*)": 1, 
    "= .*\\+ param": 1, 
    "return": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "RsaPad_PSS": {
    "for (.*) param": 1, 
    "if (.* != 0)": 1, 
    "if (.* < .*)": 5, 
    "byte *": 2, 
    "memcpy(.*) param": 1, 
    "if (.* == 0) param": 1, 
    "word32": 2, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 5, 
    "wc_HashType": 1, 
    "memset(.*)": 1, 
    "for (.*)": 1, 
    ".*\\-": 13, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    ".*\\+": 15, 
    "if (.* < \\d*)": 5, 
    "if (.* < \\d*) param": 1, 
    "params": 10, 
    "int": 4, 
    "WC_RNG *": 1, 
    "if (.*) param": 1, 
    "memcpy(.*)": 1, 
    "void *": 1, 
    "if (.*)": 15, 
    ".*\\- param": 1, 
    "return": 1, 
    "= .*\\+": 11
  }, 
  "wc_RsaSSL_VerifyInline": {
    "byte *": 1, 
    "byte * *": 1, 
    "RsaKey *": 1, 
    "word32": 1, 
    "params": 4, 
    "int": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "RsaUnPad_PSS": {
    "for (.*) param": 1, 
    "if (.* < .*)": 4, 
    "byte *": 1, 
    "byte * *": 1, 
    "if (.* == 0) param": 1, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 5, 
    "wc_HashType": 1, 
    "while(.*)": 1, 
    "for (.*)": 1, 
    ".*\\-": 12, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    ".*\\+": 8, 
    "if (.* < \\d*)": 4, 
    "if (.* < \\d*) param": 1, 
    "uint": 1, 
    "params": 8, 
    "int": 4, 
    "if (.*) param": 1, 
    "void *": 1, 
    "if (.*)": 17, 
    ".*\\- param": 1, 
    "return": 1, 
    "= .*\\+": 6
  }
}