{
  "~PagePrivate": {
    "PagePrivate *": 1, 
    "void": 1, 
    "label": "~", 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 2, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "operator=": {
    "params": 2, 
    "return": 1, 
    "List<TagLib::ByteVector> *": 2
  }, 
  "__niter_base<char_*,_std::vector<char,_std::allocator<char>_>_>": {
    "__normal_iterator<char_*,_std::vector<char,_std::allocator<char>_>_>": 1, 
    "params": 1, 
    "char": 1, 
    "return": 1
  }, 
  "operator==": {
    "_Self *": 2, 
    "params": 2, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "operator--": {
    "_List_const_iterator<TagLib::ByteVector> *": 1, 
    "params": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "deallocate": {
    "pointer": 1, 
    "void": 1, 
    "size_type": 1, 
    "delete(.*)": 1, 
    "params": 3, 
    "delete(.*) param": 1, 
    "return;": 1, 
    "return": 0, 
    "new_allocator<std::_List_node<TagLib::Ogg::Page_*>_> *": 1
  }, 
  "paginate": {
    "if (.* < \\d*)": 1, 
    "if (.* != 0)": 2, 
    "bool": 3, 
    "break": 3, 
    "if (.* < .*)": 1, 
    "PaginationStrategy": 1, 
    "uint": 1, 
    "params": 7, 
    ".*\\+ 0x.*": 2, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "while(.*)": 3, 
    "ByteVectorList *": 1, 
    "if (.*)": 9, 
    "return": 1, 
    ".*\\+": 4, 
    "= .*\\+": 4
  }, 
  "_M_get_Node_allocator": {
    "_List_base<TagLib::Ogg::Page_*,_std::allocator<TagLib::Ogg::Page_*>_> *": 1, 
    "label": "get", 
    "params": 1, 
    "return": 1
  }, 
  "construct": {
    "pointer": 1, 
    "void": 1, 
    "params": 3, 
    "return;": 1, 
    "new_allocator<TagLib::Ogg::Page_*> *": 1, 
    "return": 0, 
    "Page * *": 1
  }, 
  "_M_clear": {
    "_List_base<TagLib::Ogg::Page_*,_std::allocator<TagLib::Ogg::Page_*>_> *": 1, 
    "void": 1, 
    "while(.*) param": 1, 
    "params": 1, 
    "return;": 1, 
    "while(.*)": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "ListPrivateBase": {
    "void": 1, 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 2, 
    "return": 0, 
    ".*\\- param": 1, 
    "ListPrivateBase *": 1
  }, 
  "packets": {
    "break": 1, 
    "params": 1, 
    ".*\\+ 0x.*": 2, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 1, 
    "Page *": 1, 
    "while(.*)": 1, 
    ".*\\-": 1, 
    "if (.*)": 3, 
    ".*\\+ 0x.* param": 1, 
    "return": 1, 
    ".*\\+": 6, 
    "= .*\\+": 2
  }, 
  "_M_inc_size": {
    "_List_base<TagLib::Ogg::Page_*,_std::allocator<TagLib::Ogg::Page_*>_> *": 1, 
    "void": 1, 
    "size_t": 1, 
    "params": 2, 
    ".*\\+ param": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "= .*\\+ param": 1, 
    "return": 0, 
    ".*\\+": 1, 
    ".*\\- param": 1, 
    "= .*\\+": 1
  }, 
  "allocator": {
    "void": 1, 
    "params": 1, 
    "return;": 1, 
    "allocator<std::_List_node<int>_> *": 1, 
    "return": 0
  }, 
  "~ListPrivate": {
    "void": 1, 
    "label": "~", 
    "ListPrivate<TagLib::Ogg::Page_*> *": 1, 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "_M_node_count": {
    "list<TagLib::ByteVector,_std::allocator<TagLib::ByteVector>_> *": 1, 
    "label": "count", 
    "params": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "operator->": {
    "_List_const_iterator<TagLib::ByteVector> *": 1, 
    "params": 1, 
    "int": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "operator*": {
    "params": 1, 
    "_List_const_iterator<TagLib::Ogg::Page_*> *": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "operator+": {
    "__normal_iterator<char_*,_std::vector<char,_std::allocator<char>_>_> *": 1, 
    "params": 2, 
    ".*\\+ param": 1, 
    "difference_type": 1, 
    "char": 1, 
    ".*\\-": 1, 
    "= .*\\+ param": 1, 
    "return": 1, 
    ".*\\+": 1, 
    ".*\\- param": 1, 
    "= .*\\+": 1
  }, 
  "containsPacket": {
    "if (.* < \\d*)": 2, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 2, 
    "params": 2, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "Page *": 1, 
    ".*\\-": 4, 
    "if (.* < .*) param": 1, 
    "if (.*)": 5, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "__addressof<int>": {
    "int *": 1, 
    "label": "add", 
    "params": 1, 
    "int": 1, 
    "return": 1
  }, 
  "copy<__gnu_cxx::__normal_iterator<const_char_*,_std::vector<char,_std::allocator<char>_>_>,___gnu_cxx::__normal_iterator<char_*,_std::vector<char,_std::allocator<char>_>_>_>": {
    "__normal_iterator<char_*,_std::vector<char,_std::allocator<char>_>_>": 1, 
    "label": "copy", 
    "__normal_iterator<const_char_*,_std::vector<char,_std::allocator<char>_>_>": 2, 
    "params": 3, 
    "char": 1, 
    "return": 1
  }, 
  "__niter_wrap<__gnu_cxx::__normal_iterator<char_*,_std::vector<char,_std::allocator<char>_>_>,_char_*>": {
    "__normal_iterator<char_*,_std::vector<char,_std::allocator<char>_>_>": 1, 
    "params": 2, 
    "char *": 1, 
    "char": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "_List_iterator": {
    "void": 1, 
    "params": 2, 
    "return;": 1, 
    "_List_iterator<TagLib::Ogg::Page_*> *": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1, 
    "_List_node_base *": 1
  }, 
  "new_allocator": {
    "void": 1, 
    "params": 1, 
    "new_allocator<std::_List_node<int>_> *": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "destroy": {
    "pointer": 1, 
    "void": 1, 
    "label": "destroy", 
    "params": 2, 
    "return;": 1, 
    "new_allocator<TagLib::Ogg::Page_*> *": 1, 
    "return": 0
  }, 
  "__addressof<TagLib::Ogg::Page_*const>": {
    "label": "add", 
    "params": 1, 
    "return": 1, 
    "Page * *": 1
  }, 
  "setFirstPacketIndex": {
    "void": 1, 
    "label": "set", 
    "params": 2, 
    "int": 1, 
    "return;": 1, 
    "Page *": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "allocator<std::_List_node<TagLib::Ogg::Page_*>_>": {
    "void": 1, 
    "allocator<TagLib::Ogg::Page_*> *": 1, 
    "allocator<std::_List_node<TagLib::Ogg::Page_*>_> *": 1, 
    "params": 2, 
    "return;": 1, 
    "return": 0
  }, 
  "~List": {
    "void": 1, 
    "delete(.*)": 1, 
    "label": "~", 
    "params": 1, 
    "delete(.*) param": 1, 
    "List<TagLib::Ogg::Page_*> *": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "size": {
    "list<TagLib::ByteVector,_std::allocator<TagLib::ByteVector>_> *": 1, 
    "params": 1, 
    "return": 1
  }, 
  "allocate": {
    "if (.* < \\d*)": 1, 
    "size_type": 1, 
    "if (.* < .*)": 1, 
    "params": 3, 
    "int": 1, 
    "if (.*) param": 1, 
    "void *": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 1, 
    "return": 1, 
    "new_allocator<std::_List_node<TagLib::Ogg::Page_*>_> *": 1
  }, 
  "_M_initialize_dispatch<std::_List_const_iterator<int>_>": {
    "void": 1, 
    "label": "init", 
    "params": 3, 
    "list<int,_std::allocator<int>_> *": 1, 
    "return;": 1, 
    "while(.*)": 1, 
    "_List_const_iterator<int>": 2, 
    "return": 0
  }, 
  "~Page": {
    "void": 1, 
    "delete(.*)": 1, 
    "label": "~", 
    "params": 1, 
    "delete(.*) param": 1, 
    "return;": 1, 
    "Page *": 1, 
    "return": 0
  }, 
  "_List_impl": {
    "void": 1, 
    "_List_impl *": 1, 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "begin": {
    "list<TagLib::Ogg::Page_*,_std::allocator<TagLib::Ogg::Page_*>_> *": 1, 
    "params": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "~list": {
    "void": 1, 
    "list<TagLib::Ogg::Page_*,_std::allocator<TagLib::Ogg::Page_*>_> *": 1, 
    "label": "~", 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "firstPacketIndex": {
    "params": 1, 
    "int": 1, 
    "Page *": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "_M_create_node": {
    "list<TagLib::Ogg::Page_*,_std::allocator<TagLib::Ogg::Page_*>_> *": 1, 
    "label": "create", 
    "params": 2, 
    "value_type *": 1, 
    ".*\\-": 2, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "__miter_base<__gnu_cxx::__normal_iterator<const_char_*,_std::vector<char,_std::allocator<char>_>_>_>": {
    "__normal_iterator<const_char_*,_std::vector<char,_std::allocator<char>_>_>": 1, 
    "params": 1, 
    "char": 1, 
    "return": 1
  }, 
  "packetCount": {
    "label": "count", 
    "uint": 1, 
    "params": 1, 
    "int": 1, 
    "Page *": 1, 
    "return": 1
  }, 
  "operator++": {
    "params": 1, 
    "_List_const_iterator<TagLib::Ogg::Page_*> *": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "_M_insert": {
    "void": 1, 
    "list<TagLib::Ogg::Page_*,_std::allocator<TagLib::Ogg::Page_*>_> *": 1, 
    "params": 3, 
    "value_type *": 1, 
    "iterator": 1, 
    "return;": 1, 
    ".*\\-": 2, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "getCopyWithNewPageSequenceNumber": {
    "label": "get", 
    "params": 2, 
    "int": 1, 
    "Page *": 1, 
    ".*\\-": 1, 
    "return": 1
  }, 
  "__addressof<const_TagLib::ByteVector>": {
    "label": "add", 
    "params": 1, 
    "ByteVector *": 1, 
    "return": 1
  }, 
  "__copy_m<char>": {
    "if (.* != 0)": 1, 
    "label": "copy", 
    "params": 3, 
    ".*\\+ param": 1, 
    "char *": 3, 
    "char": 1, 
    ".*\\-": 1, 
    "if (.*)": 1, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 1
  }, 
  "__cxx_global_var_init": {
    "void": 1, 
    "label": "init", 
    "params": 0, 
    "return;": 1, 
    "return": 0
  }, 
  "setPageSequenceNumber": {
    "void": 1, 
    "label": "set", 
    "params": 2, 
    "int": 1, 
    "return;": 1, 
    "Page *": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "~new_allocator": {
    "void": 1, 
    "label": "~", 
    "params": 1, 
    "return;": 1, 
    "new_allocator<TagLib::Ogg::Page_*> *": 1, 
    "return": 0
  }, 
  "_List_node_header": {
    "void": 1, 
    "params": 1, 
    "return;": 1, 
    "_List_node_header *": 1, 
    "return": 0
  }, 
  "__clang_call_terminate": {
    "void": 1, 
    "params": 0, 
    "return": 0
  }, 
  "~allocator": {
    "void": 1, 
    "allocator<TagLib::Ogg::Page_*> *": 1, 
    "label": "~", 
    "params": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "~_List_base": {
    "_List_base<TagLib::Ogg::Page_*,_std::allocator<TagLib::Ogg::Page_*>_> *": 1, 
    "void": 1, 
    "label": "~", 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "_S_select_on_copy": {
    "allocator<std::_List_node<TagLib::Ogg::Page_*>_> *": 1, 
    "label": "copy", 
    "params": 1, 
    "return": 1
  }, 
  "_List_base": {
    "void": 1, 
    "_List_base<int,_std::allocator<int>_> *": 1, 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "__addressof<const_int>": {
    "int *": 1, 
    "label": "add", 
    "params": 1, 
    "int": 1, 
    "return": 1
  }, 
  "__copy_move_a2<false,___gnu_cxx::__normal_iterator<const_char_*,_std::vector<char,_std::allocator<char>_>_>,___gnu_cxx::__normal_iterator<char_*,_std::vector<char,_std::allocator<char>_>_>_>": {
    "__normal_iterator<char_*,_std::vector<char,_std::allocator<char>_>_>": 1, 
    "label": "copy", 
    "__normal_iterator<const_char_*,_std::vector<char,_std::allocator<char>_>_>": 2, 
    "params": 3, 
    "char": 1, 
    "return": 1
  }, 
  "Page": {
    "void": 1, 
    "bool": 3, 
    "break": 1, 
    "uint": 1, 
    "params": 7, 
    "int": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "return;": 1, 
    "Page *": 1, 
    "while(.*)": 1, 
    ".*\\-": 11, 
    "ByteVectorList *": 1, 
    "if (.*)": 2, 
    "return": 0, 
    ".*\\- param": 1, 
    ".*\\+": 4
  }, 
  "empty": {
    "list<TagLib::ByteVector,_std::allocator<TagLib::ByteVector>_> *": 1, 
    "params": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "ref": {
    "void": 1, 
    "RefCounterOld *": 1, 
    "params": 1, 
    ".*\\+ param": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "= .*\\+ param": 1, 
    "return": 0, 
    ".*\\+": 1, 
    ".*\\- param": 1, 
    "= .*\\+": 1
  }, 
  "List": {
    "void": 1, 
    "params": 2, 
    "return;": 1, 
    ".*\\-": 3, 
    "return": 0, 
    "List<TagLib::ByteVector> *": 2, 
    ".*\\- param": 1
  }, 
  "_M_init": {
    "_List_base<TagLib::Ogg::Page_*,_std::allocator<TagLib::Ogg::Page_*>_> *": 1, 
    "void": 1, 
    "label": "init", 
    "params": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "ListPrivate": {
    "ListPrivate<int> *": 1, 
    "void": 1, 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 2, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "allocator<std::_List_node<TagLib::ByteVector>_>": {
    "void": 1, 
    "allocator<TagLib::ByteVector> *": 1, 
    "params": 2, 
    "allocator<std::_List_node<TagLib::ByteVector>_> *": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "operator!=": {
    "_Self *": 2, 
    "params": 2, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "swap": {
    "void": 1, 
    "params": 2, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    "List<TagLib::ByteVector> *": 2, 
    ".*\\- param": 1
  }, 
  "count": {
    "RefCounterOld *": 1, 
    "label": "count", 
    "params": 1, 
    "int": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "list": {
    "void": 1, 
    "params": 1, 
    "list<int,_std::allocator<int>_> *": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "max_size": {
    "params": 1, 
    "return": 1, 
    "new_allocator<std::_List_node<TagLib::Ogg::Page_*>_> *": 1
  }, 
  "_M_get_size": {
    "label": "get", 
    "params": 1, 
    "_List_base<TagLib::ByteVector,_std::allocator<TagLib::ByteVector>_> *": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "_M_get_node": {
    "_List_base<TagLib::Ogg::Page_*,_std::allocator<TagLib::Ogg::Page_*>_> *": 1, 
    "label": "get", 
    "params": 1, 
    "int": 1, 
    "return": 1
  }, 
  "_List_const_iterator": {
    "void": 1, 
    "params": 2, 
    "_List_const_iterator<TagLib::Ogg::Page_*> *": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1, 
    "_List_node_base *": 1
  }, 
  "__copy_move_a<false,_const_char_*,_char_*>": {
    "label": "copy", 
    "params": 3, 
    "char *": 3, 
    "char": 1, 
    "return": 1
  }, 
  "header": {
    "params": 1, 
    "Page *": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "RefCounterOld": {
    "void": 1, 
    "RefCounterOld *": 1, 
    "label": "count", 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "deref": {
    "RefCounterOld *": 1, 
    "params": 1, 
    ".*\\-": 2, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "_GLOBAL__sub_I_oggpage.cpp": {
    "void": 1, 
    "params": 0, 
    "return;": 1, 
    "return": 0
  }, 
  "~_List_impl": {
    "void": 1, 
    "_List_impl *": 1, 
    "label": "~", 
    "params": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "allocator<std::_List_node<int>_>": {
    "void": 1, 
    "params": 2, 
    "return;": 1, 
    "allocator<std::_List_node<int>_> *": 1, 
    "allocator<int> *": 1, 
    "return": 0
  }, 
  "__addressof<TagLib::Ogg::Page_*>": {
    "label": "add", 
    "params": 1, 
    "return": 1, 
    "Page * *": 1
  }, 
  "_M_valptr": {
    "params": 1, 
    "_List_node<TagLib::Ogg::Page_*> *": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "push_back": {
    "void": 1, 
    "list<TagLib::Ogg::Page_*,_std::allocator<TagLib::Ogg::Page_*>_> *": 1, 
    "params": 2, 
    "value_type *": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "_M_initialize_dispatch<std::_List_const_iterator<TagLib::ByteVector>_>": {
    "void": 1, 
    "list<TagLib::ByteVector,_std::allocator<TagLib::ByteVector>_> *": 1, 
    "_List_const_iterator<TagLib::ByteVector>": 2, 
    "label": "init", 
    "params": 3, 
    "return;": 1, 
    "while(.*)": 1, 
    "return": 0
  }, 
  "_M_initialize_dispatch<std::_List_const_iterator<TagLib::Ogg::Page_*>_>": {
    "void": 1, 
    "list<TagLib::Ogg::Page_*,_std::allocator<TagLib::Ogg::Page_*>_> *": 1, 
    "label": "init", 
    "params": 3, 
    "return;": 1, 
    "while(.*)": 1, 
    "_List_const_iterator<TagLib::Ogg::Page_*>": 2, 
    "return": 0
  }, 
  "__niter_base<const_char_*,_std::vector<char,_std::allocator<char>_>_>": {
    "__normal_iterator<const_char_*,_std::vector<char,_std::allocator<char>_>_>": 1, 
    "params": 1, 
    "char": 1, 
    "return": 1
  }, 
  "end": {
    "list<TagLib::Ogg::Page_*,_std::allocator<TagLib::Ogg::Page_*>_> *": 1, 
    "params": 1, 
    "return": 1
  }, 
  "pageSequenceNumber": {
    "params": 1, 
    "int": 1, 
    "Page *": 1, 
    "return": 1
  }, 
  "render": {
    "break": 1, 
    "params": 1, 
    ".*\\+ 0x.*": 3, 
    "if (.* == 0)": 2, 
    "Page *": 1, 
    "while(.*)": 1, 
    ".*\\-": 1, 
    "if (.*)": 4, 
    "return": 1, 
    ".*\\+": 7, 
    "= .*\\+": 2
  }, 
  "swap<TagLib::List<TagLib::ByteVector>::ListPrivate<TagLib::ByteVector>_*>": {
    "void": 1, 
    "ListPrivate<TagLib::ByteVector> * *": 2, 
    "params": 2, 
    "return;": 1, 
    "return": 0
  }, 
  "isEmpty": {
    "params": 1, 
    ".*\\-": 1, 
    "return": 1, 
    "List<TagLib::ByteVector> *": 1, 
    ".*\\- param": 1
  }, 
  "clear": {
    "void": 1, 
    "list<TagLib::Ogg::Page_*,_std::allocator<TagLib::Ogg::Page_*>_> *": 1, 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 2, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "fileOffset": {
    "label": "set", 
    "params": 1, 
    "Page *": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "PagePrivate": {
    "PagePrivate *": 1, 
    "void": 1, 
    "File *": 1, 
    "params": 3, 
    "long": 1, 
    "return;": 1, 
    ".*\\-": 5, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "_M_put_node": {
    "_List_base<TagLib::Ogg::Page_*,_std::allocator<TagLib::Ogg::Page_*>_> *": 1, 
    "pointer": 1, 
    "void": 1, 
    "params": 2, 
    "return;": 1, 
    "return": 0
  }, 
  "__addressof<TagLib::ByteVector>": {
    "label": "add", 
    "params": 1, 
    "ByteVector *": 1, 
    "return": 1
  }, 
  "detach": {
    "if (.* < \\d*)": 1, 
    "void": 1, 
    "if (.* < .*)": 1, 
    "params": 1, 
    "List<TagLib::Ogg::Page_*> *": 1, 
    "return;": 1, 
    ".*\\-": 4, 
    "if (.*)": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "__normal_iterator": {
    "void": 1, 
    "__normal_iterator<char_*,_std::vector<char,_std::allocator<char>_>_> *": 1, 
    "params": 2, 
    "char * *": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "append": {
    "int *": 1, 
    "List<int> *": 1, 
    "params": 2, 
    "int": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "base": {
    "__normal_iterator<char_*,_std::vector<char,_std::allocator<char>_>_> *": 1, 
    "params": 1, 
    "char": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }
}