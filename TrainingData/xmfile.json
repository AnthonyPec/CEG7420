{
  "min<unsigned_long>": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "params": 2, 
    "ulong *": 2, 
    "if (.*) param": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "operator--": {
    "params": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1, 
    "_List_const_iterator<TagLib::String> *": 1
  }, 
  "u16L": {
    "params": 2, 
    "unsigned short *": 1, 
    "StructReader *": 1, 
    "return": 1
  }, 
  "setProperties": {
    "PropertyMap *": 1, 
    "label": "set", 
    "File *": 1, 
    "params": 2, 
    "return": 1
  }, 
  "deallocate": {
    "pointer": 1, 
    "void": 1, 
    "new_allocator<std::_List_node<(anonymous_namespace)::Reader_*>_> *": 1, 
    "size_type": 1, 
    "delete(.*)": 1, 
    "params": 3, 
    "delete(.*) param": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "advance<std::_List_const_iterator<TagLib::String>,_unsigned_int>": {
    "void": 1, 
    "uint": 1, 
    "params": 2, 
    "return;": 1, 
    "return": 0, 
    "_List_const_iterator<TagLib::String> *": 1
  }, 
  "~File": {
    "void": 1, 
    "delete(.*)": 1, 
    "label": "~", 
    "File *": 1, 
    "params": 1, 
    "delete(.*) param": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "_M_get_Node_allocator": {
    "_List_base<(anonymous_namespace)::Reader_*,_std::allocator<(anonymous_namespace)::Reader_*>_> *": 1, 
    "label": "get", 
    "params": 1, 
    "return": 1
  }, 
  "construct": {
    "Reader * *": 1, 
    "pointer": 1, 
    "void": 1, 
    "new_allocator<(anonymous_namespace)::Reader_*> *": 1, 
    "params": 3, 
    "return;": 1, 
    "return": 0
  }, 
  "u32L": {
    "params": 2, 
    "ulong *": 1, 
    "StructReader *": 1, 
    "return": 1
  }, 
  "_M_clear": {
    "void": 1, 
    "while(.*) param": 1, 
    "_List_base<(anonymous_namespace)::Reader_*,_std::allocator<(anonymous_namespace)::Reader_*>_> *": 1, 
    "params": 1, 
    "return;": 1, 
    "while(.*)": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "ListPrivateBase": {
    "void": 1, 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 2, 
    "return": 0, 
    ".*\\- param": 1, 
    "ListPrivateBase *": 1
  }, 
  "_M_inc_size": {
    "void": 1, 
    "_List_base<(anonymous_namespace)::Reader_*,_std::allocator<(anonymous_namespace)::Reader_*>_> *": 1, 
    "size_t": 1, 
    "params": 2, 
    ".*\\+ param": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "= .*\\+ param": 1, 
    "return": 0, 
    ".*\\+": 1, 
    ".*\\- param": 1, 
    "= .*\\+": 1
  }, 
  "allocator": {
    "void": 1, 
    "params": 2, 
    "return;": 1, 
    "allocator<std::_List_node<(anonymous_namespace)::Reader_*>_> *": 2, 
    "return": 0
  }, 
  "~ListPrivate": {
    "ListPrivate<(anonymous_namespace)::Reader_*> *": 1, 
    "void": 1, 
    "label": "~", 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "_M_node_count": {
    "label": "count", 
    "list<TagLib::String,_std::allocator<TagLib::String>_> *": 1, 
    "params": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "~Reader": {
    "Reader *": 1, 
    "void": 1, 
    "label": "read", 
    "params": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "setAutoDelete": {
    "void": 1, 
    "bool": 1, 
    "label": "set", 
    "params": 2, 
    "List<(anonymous_namespace)::Reader_*> *": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "operator*": {
    "params": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1, 
    "_List_const_iterator<TagLib::String> *": 1
  }, 
  "_List_iterator": {
    "void": 1, 
    "params": 2, 
    "return;": 1, 
    "_List_iterator<TagLib::String> *": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1, 
    "_List_node_base *": 1
  }, 
  "byte": {
    "uchar *": 1, 
    "params": 2, 
    ".*\\-": 1, 
    "StructReader *": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "new_allocator": {
    "void": 1, 
    "new_allocator<std::_List_node<(anonymous_namespace)::Reader_*>_> *": 2, 
    "params": 2, 
    "return;": 1, 
    "return": 0
  }, 
  "destroy": {
    "pointer": 1, 
    "void": 1, 
    "new_allocator<(anonymous_namespace)::Reader_*> *": 1, 
    "label": "destroy", 
    "params": 2, 
    "return;": 1, 
    "return": 0
  }, 
  "~List": {
    "void": 1, 
    "delete(.*)": 1, 
    "label": "~", 
    "params": 1, 
    "delete(.*) param": 1, 
    "List<(anonymous_namespace)::Reader_*> *": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "__advance<std::_List_const_iterator<TagLib::String>,_int>": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "void": 1, 
    "if (.* < .*)": 1, 
    "params": 2, 
    "int": 1, 
    "if (.*) param": 1, 
    "return;": 1, 
    "while(.*)": 2, 
    ".*\\-": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 1, 
    "return": 0, 
    ".*\\+": 2, 
    "= .*\\+": 2, 
    "_List_const_iterator<TagLib::String> *": 1
  }, 
  "size": {
    "list<TagLib::String,_std::allocator<TagLib::String>_> *": 1, 
    "params": 1, 
    "return": 1
  }, 
  "allocate": {
    "if (.* < \\d*)": 1, 
    "new_allocator<std::_List_node<(anonymous_namespace)::Reader_*>_> *": 1, 
    "size_type": 1, 
    "if (.* < .*)": 1, 
    "params": 3, 
    "int": 1, 
    "if (.*) param": 1, 
    "void *": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "allocator<std::_List_node<(anonymous_namespace)::Reader_*>_>": {
    "void": 1, 
    "allocator<(anonymous_namespace)::Reader_*> *": 1, 
    "label": "read", 
    "params": 2, 
    "return;": 1, 
    "allocator<std::_List_node<(anonymous_namespace)::Reader_*>_> *": 1, 
    "return": 0
  }, 
  "_List_impl": {
    "void": 1, 
    "_List_impl *": 1, 
    "_Node_alloc_type *": 1, 
    "params": 2, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "begin": {
    "list<TagLib::String,_std::allocator<TagLib::String>_> *": 1, 
    "params": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "~list": {
    "void": 1, 
    "label": "~", 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "list<(anonymous_namespace)::Reader_*,_std::allocator<(anonymous_namespace)::Reader_*>_> *": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "_M_create_node": {
    "label": "create", 
    "params": 2, 
    "value_type *": 1, 
    ".*\\-": 2, 
    "list<(anonymous_namespace)::Reader_*,_std::allocator<(anonymous_namespace)::Reader_*>_> *": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "operator[]": {
    "List<TagLib::String> *": 1, 
    "uint": 1, 
    "params": 2, 
    ".*\\+ param": 1, 
    "return": 1, 
    ".*\\+": 1
  }, 
  "__addressof<(anonymous_namespace)::Reader_*const>": {
    "Reader * *": 1, 
    "label": "read", 
    "params": 1, 
    "return": 1
  }, 
  "operator++": {
    "params": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1, 
    "_List_const_iterator<TagLib::String> *": 1
  }, 
  "save": {
    "label": "save", 
    "File *": 1, 
    "params": 1, 
    "if (.* == 0)": 3, 
    ".*\\-": 1, 
    "if (.*)": 3, 
    "return": 1
  }, 
  "Reader": {
    "Reader *": 1, 
    "void": 1, 
    "label": "read", 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "_M_insert": {
    "void": 1, 
    "params": 3, 
    "value_type *": 1, 
    "iterator": 1, 
    "return;": 1, 
    ".*\\-": 2, 
    "list<(anonymous_namespace)::Reader_*,_std::allocator<(anonymous_namespace)::Reader_*>_> *": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "__cxx_global_var_init": {
    "void": 1, 
    "label": "init", 
    "params": 0, 
    "return;": 1, 
    "return": 0
  }, 
  "~FilePrivate": {
    "void": 1, 
    "label": "~", 
    "params": 1, 
    "return;": 1, 
    "FilePrivate *": 1, 
    ".*\\-": 2, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "~StructReader": {
    "void": 1, 
    "delete(.*)": 1, 
    "label": "read", 
    "params": 1, 
    "delete(.*) param": 1, 
    "return;": 1, 
    "StructReader *": 1, 
    "return": 0
  }, 
  "~ByteReader": {
    "void": 1, 
    "delete(.*)": 1, 
    "label": "read", 
    "params": 1, 
    "delete(.*) param": 1, 
    "ByteReader *": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "StringReader": {
    "void": 1, 
    "String *": 1, 
    "StringReader *": 1, 
    "label": "read", 
    "uint": 1, 
    "params": 3, 
    "return;": 1, 
    ".*\\-": 3, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "~StringReader": {
    "void": 1, 
    "delete(.*)": 1, 
    "StringReader *": 1, 
    "label": "read", 
    "params": 1, 
    "delete(.*) param": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "~new_allocator": {
    "void": 1, 
    "new_allocator<(anonymous_namespace)::Reader_*> *": 1, 
    "label": "~", 
    "params": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "u16": {
    "bool": 1, 
    "params": 3, 
    ".*\\-": 1, 
    "unsigned short *": 1, 
    "StructReader *": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "StructReader": {
    "void": 1, 
    "label": "read", 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 4, 
    "StructReader *": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "_List_node_header": {
    "void": 1, 
    "params": 1, 
    "return;": 1, 
    "_List_node_header *": 1, 
    "return": 0
  }, 
  "__clang_call_terminate": {
    "void": 1, 
    "params": 0, 
    "return": 0
  }, 
  "U32Reader": {
    "void": 1, 
    "bool": 1, 
    "label": "read", 
    "params": 3, 
    "ulong *": 1, 
    "return;": 1, 
    ".*\\-": 2, 
    "U32Reader *": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "~ValueReader": {
    "void": 1, 
    "label": "read", 
    "params": 1, 
    "return;": 1, 
    "ValueReader<unsigned_long> *": 1, 
    "return": 0
  }, 
  "__iterator_category<std::_List_const_iterator<TagLib::String>_>": {
    "params": 1, 
    "return": 1, 
    "_List_const_iterator<TagLib::String> *": 1
  }, 
  "~allocator": {
    "void": 1, 
    "allocator<(anonymous_namespace)::Reader_*> *": 1, 
    "label": "~", 
    "params": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "~_List_base": {
    "void": 1, 
    "_List_base<(anonymous_namespace)::Reader_*,_std::allocator<(anonymous_namespace)::Reader_*>_> *": 1, 
    "label": "~", 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "_S_select_on_copy": {
    "label": "copy", 
    "params": 1, 
    "allocator<std::_List_node<(anonymous_namespace)::Reader_*>_> *": 1, 
    "return": 1
  }, 
  "_List_base": {
    "void": 1, 
    "_List_base<(anonymous_namespace)::Reader_*,_std::allocator<(anonymous_namespace)::Reader_*>_> *": 1, 
    "_Node_alloc_type *": 1, 
    "params": 2, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "empty": {
    "list<TagLib::String,_std::allocator<TagLib::String>_> *": 1, 
    "params": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "U16Reader": {
    "void": 1, 
    "bool": 1, 
    "label": "read", 
    "params": 3, 
    "return;": 1, 
    ".*\\-": 2, 
    "unsigned short *": 1, 
    "U16Reader *": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "FilePrivate": {
    "void": 1, 
    "params": 2, 
    "ReadStyle": 1, 
    "return;": 1, 
    "FilePrivate *": 1, 
    ".*\\-": 2, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "__addressof<const_TagLib::String>": {
    "String *": 1, 
    "label": "add", 
    "params": 1, 
    "return": 1
  }, 
  "u32": {
    "bool": 1, 
    "params": 3, 
    "ulong *": 1, 
    ".*\\-": 1, 
    "StructReader *": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "List": {
    "void": 1, 
    "params": 1, 
    "List<(anonymous_namespace)::Reader_*> *": 1, 
    "return;": 1, 
    ".*\\-": 2, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "tag": {
    "File *": 1, 
    "params": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "ValueReader": {
    "void": 1, 
    "label": "read", 
    "params": 2, 
    "ulong *": 1, 
    "return;": 1, 
    "ValueReader<unsigned_long> *": 1, 
    ".*\\-": 3, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "_M_init": {
    "void": 1, 
    "label": "init", 
    "params": 1, 
    "return;": 1, 
    "_List_node_header *": 1, 
    ".*\\-": 3, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "ListPrivate": {
    "ListPrivate<(anonymous_namespace)::Reader_*> *": 1, 
    "void": 1, 
    "params": 2, 
    "return;": 1, 
    ".*\\-": 2, 
    "list<(anonymous_namespace)::Reader_*,_std::allocator<(anonymous_namespace)::Reader_*>_> *": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "operator!=": {
    "_Self *": 2, 
    "params": 2, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "~FileBase": {
    "void": 1, 
    "label": "~", 
    "params": 1, 
    "FileBase *": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "read": {
    "label": "read", 
    "File *": 1, 
    "uint": 2, 
    "params": 3, 
    "int": 1, 
    ".*\\-": 1, 
    "U32Reader *": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "__addressof<(anonymous_namespace)::Reader_*>": {
    "Reader * *": 1, 
    "label": "read", 
    "params": 1, 
    "return": 1
  }, 
  "~NumberReader": {
    "void": 1, 
    "label": "read", 
    "params": 1, 
    "return;": 1, 
    "NumberReader<unsigned_long> *": 1, 
    "return": 0
  }, 
  "count": {
    "RefCounterOld *": 1, 
    "label": "count", 
    "params": 1, 
    "int": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "NumberReader": {
    "void": 1, 
    "bool": 1, 
    "label": "read", 
    "params": 3, 
    "ulong *": 1, 
    "return;": 1, 
    "NumberReader<unsigned_long> *": 1, 
    ".*\\-": 3, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "_M_initialize_dispatch<std::_List_const_iterator<(anonymous_namespace)::Reader_*>_>": {
    "void": 1, 
    "label": "read", 
    "params": 3, 
    "return;": 1, 
    "while(.*)": 1, 
    "_List_const_iterator<(anonymous_namespace)::Reader_*>": 2, 
    "list<(anonymous_namespace)::Reader_*,_std::allocator<(anonymous_namespace)::Reader_*>_> *": 1, 
    "return": 0
  }, 
  "list": {
    "void": 1, 
    "params": 2, 
    "return;": 1, 
    ".*\\-": 2, 
    "list<(anonymous_namespace)::Reader_*,_std::allocator<(anonymous_namespace)::Reader_*>_> *": 2, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "max_size": {
    "new_allocator<std::_List_node<(anonymous_namespace)::Reader_*>_> *": 1, 
    "params": 1, 
    "return": 1
  }, 
  "_M_get_size": {
    "_List_base<TagLib::String,_std::allocator<TagLib::String>_> *": 1, 
    "label": "get", 
    "params": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "_M_get_node": {
    "_List_base<(anonymous_namespace)::Reader_*,_std::allocator<(anonymous_namespace)::Reader_*>_> *": 1, 
    "label": "get", 
    "params": 1, 
    "int": 1, 
    "return": 1
  }, 
  "_List_const_iterator": {
    "void": 1, 
    "iterator *": 1, 
    "params": 2, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1, 
    "_List_const_iterator<TagLib::String> *": 1
  }, 
  "_GLOBAL__sub_I_xmfile.cpp": {
    "void": 1, 
    "params": 0, 
    "return;": 1, 
    "return": 0
  }, 
  "File": {
    "if (.* != 0)": 1, 
    "void": 1, 
    "bool": 1, 
    "File *": 1, 
    "params": 4, 
    "ReadStyle": 1, 
    "return;": 1, 
    ".*\\-": 2, 
    "IOStream *": 1, 
    "if (.*)": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "RefCounterOld": {
    "void": 1, 
    "RefCounterOld *": 1, 
    "label": "count", 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "deref": {
    "RefCounterOld *": 1, 
    "params": 1, 
    ".*\\-": 2, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "ByteReader": {
    "void": 1, 
    "uchar *": 1, 
    "label": "read", 
    "params": 2, 
    "ByteReader *": 1, 
    "return;": 1, 
    ".*\\-": 2, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "string": {
    "String *": 1, 
    "uint": 1, 
    "params": 3, 
    ".*\\-": 1, 
    "StructReader *": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "~U32Reader": {
    "void": 1, 
    "delete(.*)": 1, 
    "label": "read", 
    "params": 1, 
    "delete(.*) param": 1, 
    "return;": 1, 
    "U32Reader *": 1, 
    "return": 0
  }, 
  "~_List_impl": {
    "void": 1, 
    "_List_impl *": 1, 
    "label": "~", 
    "params": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "_M_valptr": {
    "_List_node<TagLib::String> *": 1, 
    "params": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "push_back": {
    "void": 1, 
    "params": 2, 
    "value_type *": 1, 
    "return;": 1, 
    "list<(anonymous_namespace)::Reader_*,_std::allocator<(anonymous_namespace)::Reader_*>_> *": 1, 
    "return": 0
  }, 
  "end": {
    "params": 1, 
    "List<(anonymous_namespace)::Reader_*> *": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "min<unsigned_int>": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "uint *": 2, 
    "uint": 1, 
    "params": 2, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "clear": {
    "void": 1, 
    "params": 1, 
    "return;": 1, 
    ".*\\-": 2, 
    "list<(anonymous_namespace)::Reader_*,_std::allocator<(anonymous_namespace)::Reader_*>_> *": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "isEmpty": {
    "List<TagLib::String> *": 1, 
    "params": 1, 
    ".*\\+ param": 1, 
    "return": 1, 
    ".*\\+": 1
  }, 
  "~U16Reader": {
    "void": 1, 
    "delete(.*)": 1, 
    "label": "read", 
    "params": 1, 
    "delete(.*) param": 1, 
    "return;": 1, 
    "U16Reader *": 1, 
    "return": 0
  }, 
  "_M_put_node": {
    "pointer": 1, 
    "void": 1, 
    "_List_base<(anonymous_namespace)::Reader_*,_std::allocator<(anonymous_namespace)::Reader_*>_> *": 1, 
    "params": 2, 
    "return;": 1, 
    "return": 0
  }, 
  "detach": {
    "if (.* < \\d*)": 1, 
    "void": 1, 
    "if (.* < .*)": 1, 
    "params": 1, 
    "List<(anonymous_namespace)::Reader_*> *": 1, 
    "return;": 1, 
    ".*\\-": 4, 
    "if (.*)": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "audioProperties": {
    "File *": 1, 
    "params": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "properties": {
    "File *": 1, 
    "params": 1, 
    "return": 1
  }, 
  "append": {
    "Reader * *": 1, 
    "params": 2, 
    "List<(anonymous_namespace)::Reader_*> *": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }
}