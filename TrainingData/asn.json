{
  "GetMyVersion": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "int *": 1, 
    "if (.* < .*)": 1, 
    "byte *": 1, 
    "label": "get", 
    "word32": 1, 
    "params": 4, 
    "int": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "word32 *": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 4, 
    "return": 1, 
    ".*\\+": 3, 
    "= .*\\+": 2
  }, 
  "FreeSigner": {
    "void": 1, 
    "Signer *": 1, 
    "label": "free", 
    "params": 2, 
    "if (.*) param": 1, 
    "return;": 1, 
    "void *": 1, 
    ".*\\-": 8, 
    "if (.*)": 5, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "wc_PemGetHeaderFooter": {
    "break": 8, 
    "label": "get", 
    "params": 3, 
    ".*\\+ 0x.*": 18, 
    "int": 2, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "char * *": 2, 
    ".*\\-": 1, 
    "if (.*)": 18, 
    ".*\\+ 0x.* param": 1, 
    "return": 1, 
    "case": 15, 
    ".*\\+": 18, 
    "= .*\\+": 18
  }, 
  "SetLength": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "byte *": 1, 
    "label": "set", 
    "word32": 1, 
    "params": 2, 
    "if (.*) param": 1, 
    "for (.*)": 1, 
    ".*\\-": 2, 
    "if (.* < .*) param": 1, 
    "if (.*)": 4, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "GetValidity": {
    "if (.* < \\d*)": 3, 
    "DecodedCert *": 1, 
    "if (.* < .*)": 3, 
    "label": "get", 
    "params": 3, 
    "int": 3, 
    "if (.* == 0)": 1, 
    ".*\\-": 5, 
    "if (.*)": 4, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "CalcHashId": {
    "byte *": 2, 
    "word32": 1, 
    "params": 3, 
    "int": 1, 
    "return": 1
  }, 
  "SkipObjectId": {
    "byte *": 1, 
    "word32": 1, 
    "params": 3, 
    "int": 1, 
    "if (.* == 0)": 1, 
    "word32 *": 1, 
    "if (.*)": 1, 
    "return": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "FreeDecodedCert": {
    "if (.* != 0)": 1, 
    "if (.* != 0) param": 1, 
    "void": 1, 
    "DecodedCert *": 1, 
    "label": "free", 
    "params": 1, 
    "if (.*) param": 1, 
    "return;": 1, 
    ".*\\-": 15, 
    "if (.*)": 8, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "DecodeECC_DSA_Sig": {
    "if (.* < \\d*)": 3, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 3, 
    "byte *": 1, 
    "word32": 1, 
    "mp_int *": 2, 
    "params": 4, 
    "int": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    ".*\\-": 5, 
    "if (.* < .*) param": 1, 
    "if (.*)": 5, 
    "return": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "wc_EccPrivateKeyDecode": {
    "if (.* < \\d*)": 11, 
    "ecc_key *": 1, 
    "if (.* < .*)": 11, 
    "byte *": 1, 
    "word32": 1, 
    "params": 4, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 6, 
    "word32 *": 1, 
    "memcpy(.*)": 2, 
    ".*\\-": 12, 
    "if (.*)": 17, 
    "return": 1, 
    ".*\\+": 9, 
    "= .*\\+": 6
  }, 
  "wc_BuildEccKeyDer": {
    "if (.* != 0)": 6, 
    "if (.* != 0) param": 1, 
    "if (.* < \\d*)": 4, 
    "ecc_key *": 1, 
    "if (.* < .*)": 4, 
    "byte *": 1, 
    "memcpy(.*) param": 1, 
    "label": "build", 
    "params": 5, 
    "int": 3, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "word32 *": 1, 
    "memcpy(.*)": 5, 
    ".*\\-": 7, 
    "= .*\\+ param": 1, 
    "if (.*)": 24, 
    "return": 1, 
    ".*\\+": 31, 
    "= .*\\+": 26, 
    ".*\\- param": 1
  }, 
  "eccToPKCS8": {
    "if (.* < \\d*)": 4, 
    "ecc_key *": 1, 
    "if (.* < .*)": 4, 
    "byte *": 1, 
    "params": 4, 
    "int": 2, 
    "if (.*) param": 1, 
    "word32 *": 1, 
    "memset(.*)": 1, 
    ".*\\-": 8, 
    "if (.*)": 14, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "MatchBaseName": {
    "for (.*) param": 1, 
    "if (.* < \\d*)": 2, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 2, 
    "params": 5, 
    "int": 4, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "return 0": 1, 
    "for (.*)": 3, 
    "char *": 2, 
    ".*\\-": 4, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 9, 
    "return": 1, 
    ".*\\+": 10, 
    "= .*\\+": 10, 
    ".*\\- param": 1
  }, 
  "GetSet_ex": {
    "int *": 1, 
    "byte *": 1, 
    "label": "get", 
    "word32": 1, 
    "params": 5, 
    "int": 2, 
    "word32 *": 1, 
    "return": 1
  }, 
  "wc_EccPublicKeyToDer_ex": {
    "ecc_key *": 1, 
    "byte *": 1, 
    "word32": 1, 
    "params": 5, 
    "int": 3, 
    "return": 1
  }, 
  "wc_ValidateDate": {
    "if (.* < \\d*)": 1, 
    "if (.* != 0)": 4, 
    "if (.* < .*)": 1, 
    "byte": 1, 
    "byte *": 1, 
    "params": 3, 
    "int": 2, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 1, 
    "if (.*) param": 1, 
    "return 0": 5, 
    ".*\\-": 3, 
    "if (.*)": 11, 
    "return": 1, 
    ".*\\+": 4, 
    ".*\\- param": 1, 
    "= .*\\+": 4
  }, 
  "wc_EccPrivateKeyToPKCS8": {
    "ecc_key *": 1, 
    "byte *": 1, 
    "params": 3, 
    "int": 1, 
    "word32 *": 1, 
    "return": 1
  }, 
  "ToTraditional": {
    "byte *": 1, 
    "word32": 1, 
    "params": 2, 
    "int": 1, 
    "return": 1
  }, 
  "GetHashId": {
    "byte *": 2, 
    "memcpy(.*) param": 1, 
    "if (.* == 0) param": 1, 
    "label": "get", 
    "params": 3, 
    "int": 2, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "memcpy(.*)": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "DecodeECC_DSA_Sig_Bin": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "byte *": 3, 
    "memcpy(.*) param": 1, 
    "word32": 1, 
    "params": 6, 
    "int": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 2, 
    "word32 *": 2, 
    "memcpy(.*)": 2, 
    ".*\\-": 3, 
    "if (.* < .*) param": 1, 
    "if (.*)": 9, 
    "return": 1, 
    ".*\\+": 5, 
    "= .*\\+": 2
  }, 
  "GetSignature": {
    "DecodedCert *": 1, 
    "label": "get", 
    "params": 1, 
    "int": 1, 
    "if (.* == 0)": 1, 
    ".*\\-": 6, 
    "if (.*)": 2, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 2, 
    "= .*\\+": 2
  }, 
  "wc_GetDateInfo": {
    "int *": 1, 
    "byte *": 2, 
    "byte * *": 1, 
    "label": "get", 
    "params": 5, 
    "int": 2, 
    "return": 1
  }, 
  "wc_FreeDer": {
    "void": 1, 
    "label": "free", 
    "params": 1, 
    "DerBuffer * *": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "GetCertName": {
    "if (.* != 0)": 1, 
    "if (.* < .*)": 8, 
    "byte *": 2, 
    "memcpy(.*) param": 1, 
    "word32": 1, 
    ".*\\+ 0x.*": 14, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 3, 
    "word32 *": 1, 
    "for (.*)": 1, 
    ".*\\-": 19, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    ".*\\+": 30, 
    "if (.* < \\d*)": 8, 
    "if (.* < \\d*) param": 1, 
    "DecodedCert *": 1, 
    "label": "get", 
    "params": 7, 
    "int": 2, 
    "if (.*) param": 1, 
    "memcpy(.*)": 2, 
    "char *": 1, 
    "if (.*)": 32, 
    "return": 1, 
    ".*\\- param": 1, 
    "= .*\\+": 25
  }, 
  "GetIntPositive": {
    "byte *": 1, 
    "label": "get", 
    "word32": 1, 
    "mp_int *": 1, 
    "params": 4, 
    "int": 1, 
    "if (.* == 0)": 4, 
    "word32 *": 1, 
    ".*\\-": 4, 
    "if (.*)": 4, 
    "return": 1, 
    ".*\\+": 2, 
    "= .*\\+": 2
  }, 
  "wc_EccPrivateKeyToDer": {
    "ecc_key *": 1, 
    "byte *": 1, 
    "word32": 1, 
    "params": 3, 
    "int": 1, 
    "return": 1
  }, 
  "FreeSignatureCtx": {
    "void": 1, 
    "label": "free", 
    "params": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 2, 
    "return;": 1, 
    "SignatureCtx *": 1, 
    ".*\\-": 20, 
    "if (.*)": 10, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "SetMyVersion": {
    "if (.* != 0)": 1, 
    "if (.* != 0) param": 1, 
    "byte *": 1, 
    "label": "set", 
    "word32": 1, 
    "params": 3, 
    "int": 2, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    ".*\\-": 1, 
    "if (.*)": 2, 
    "return": 1, 
    ".*\\+": 3, 
    "= .*\\+": 1
  }, 
  "wc_GetKeyOID": {
    "if (.* < \\d*)": 1, 
    "int *": 1, 
    "if (.* < .*)": 1, 
    "byte *": 1, 
    "byte * *": 1, 
    "if (.* == 0) param": 1, 
    "label": "get", 
    "word32": 1, 
    "params": 6, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 4, 
    "word32 *": 1, 
    "void *": 1, 
    ".*\\-": 6, 
    "if (.*)": 11, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "GetLength_ex": {
    "if (.* < \\d*)": 7, 
    "if (.* < \\d*) param": 1, 
    "int *": 1, 
    "if (.* < .*)": 7, 
    "byte *": 1, 
    "if (.* == 0) param": 1, 
    "label": "get", 
    "word32": 1, 
    "params": 5, 
    "int": 2, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 2, 
    "word32 *": 1, 
    "while(.*)": 1, 
    ".*\\-": 7, 
    "if (.* < .*) param": 1, 
    "if (.*)": 10, 
    "return": 1, 
    ".*\\+": 5, 
    "= .*\\+": 3
  }, 
  "AltNameNew": {
    "params": 1, 
    "memset(.*)": 1, 
    "void *": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "wc_CreatePKCS8Key": {
    "if (.* != 0)": 2, 
    "if (.* < .*)": 3, 
    "byte *": 3, 
    "memcpy(.*) param": 1, 
    "word32": 2, 
    ".*\\+ 0x.*": 3, 
    ".*\\+ param": 1, 
    "word32 *": 1, 
    ".*\\-": 5, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    ".*\\+": 25, 
    "if (.* < \\d*) param": 1, 
    "if (.* < \\d*)": 3, 
    "if (.* != 0) param": 1, 
    "label": "create", 
    "params": 7, 
    "int": 2, 
    "if (.*) param": 1, 
    "memcpy(.*)": 2, 
    "if (.*)": 9, 
    ".*\\+ 0x.* param": 1, 
    "return": 1, 
    "= .*\\+": 20
  }, 
  "wc_RsaPublicKeyDecode": {
    "byte *": 1, 
    "RsaKey *": 1, 
    "word32": 1, 
    "params": 4, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "word32 *": 1, 
    ".*\\-": 1, 
    "if (.*)": 2, 
    "return": 1
  }, 
  "SetOctetString8Bit": {
    "byte *": 1, 
    "label": "set", 
    "word32": 1, 
    "params": 2, 
    "return": 1
  }, 
  "wc_EccKeyDerSize": {
    "ecc_key *": 1, 
    "params": 2, 
    "int": 2, 
    "if (.* == 0)": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "wc_RsaPublicKeyDecode_ex": {
    "if (.* < \\d*)": 9, 
    "if (.* != 0)": 2, 
    "if (.* < .*)": 9, 
    "byte *": 1, 
    "byte * *": 2, 
    "word32": 1, 
    "params": 7, 
    "int": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "word32 *": 3, 
    ".*\\-": 11, 
    "if (.*)": 20, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 5, 
    "= .*\\+": 5
  }, 
  "GetLength": {
    "int *": 1, 
    "byte *": 1, 
    "label": "get", 
    "word32": 1, 
    "params": 4, 
    "int": 1, 
    "word32 *": 1, 
    "return": 1
  }, 
  "wc_EncodeSignature": {
    "byte *": 2, 
    "word32": 1, 
    "params": 4, 
    "int": 1, 
    "memcpy(.*)": 3, 
    "return": 1, 
    ".*\\+": 4, 
    "= .*\\+": 1
  }, 
  "StoreEccKey": {
    "if (.* < \\d*)": 3, 
    "if (.* != 0)": 1, 
    "DecodedCert *": 1, 
    "if (.* < .*)": 3, 
    "byte *": 2, 
    "memcpy(.*) param": 1, 
    "word32": 2, 
    "params": 6, 
    "int": 1, 
    "word32 *": 1, 
    "memcpy(.*)": 1, 
    ".*\\-": 9, 
    "if (.*)": 6, 
    "return": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "GetInteger16Bit": {
    "if (.* < \\d*)": 3, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 3, 
    "byte *": 1, 
    "label": "get", 
    "word32": 1, 
    "params": 3, 
    "int": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "word32 *": 1, 
    ".*\\-": 3, 
    "if (.* < .*) param": 1, 
    "if (.*)": 7, 
    "return": 1, 
    ".*\\+": 8, 
    "= .*\\+": 5
  }, 
  "wc_AllocDer": {
    "word32": 1, 
    "params": 4, 
    "int": 2, 
    "DerBuffer * *": 1, 
    "void *": 1, 
    "return": 1
  }, 
  "wc_FreeDecodedCert": {
    "void": 1, 
    "DecodedCert *": 1, 
    "label": "free", 
    "params": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "GetInt": {
    "byte *": 1, 
    "label": "get", 
    "word32": 1, 
    "mp_int *": 1, 
    "params": 4, 
    "int": 1, 
    "if (.* == 0)": 3, 
    "word32 *": 1, 
    ".*\\-": 2, 
    "if (.*)": 3, 
    "return": 1, 
    ".*\\+": 2, 
    "= .*\\+": 2
  }, 
  "GetAlgoV2": {
    "int *": 3, 
    "byte * *": 1, 
    "if (.* == 0) param": 1, 
    "label": "get", 
    "params": 5, 
    ".*\\+ 0x.*": 1, 
    "int": 2, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    ".*\\-": 1, 
    "if (.*)": 1, 
    "return": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "wc_DhKeyDecode": {
    "if (.* < \\d*)": 3, 
    "if (.* < .*)": 3, 
    "byte *": 1, 
    "word32": 1, 
    "params": 4, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "word32 *": 1, 
    "DhKey *": 1, 
    ".*\\-": 6, 
    "if (.*)": 4, 
    "return": 1
  }, 
  "IsSigAlgoECDSA": {
    "if (.* == 0) param": 1, 
    "params": 1, 
    "int": 2, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "CheckAlgoV2": {
    "int *": 2, 
    "if (.* == 0) param": 1, 
    "label": "check", 
    "params": 3, 
    "int": 2, 
    "if (.*) param": 1, 
    "if (.* == 0)": 2, 
    ".*\\-": 1, 
    "if (.*)": 4, 
    "return": 1
  }, 
  "DecodeCertExtensions": {
    "if (.* < \\d*)": 9, 
    "DecodedCert *": 1, 
    "if (.* < .*)": 9, 
    "params": 1, 
    "int": 1, 
    "if (.* == 0)": 2, 
    "goto": 1, 
    "for (.*)": 1, 
    ".*\\-": 11, 
    "if (.*)": 14, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 3, 
    "= .*\\+": 2
  }, 
  "wc_EccKeyToDer": {
    "ecc_key *": 1, 
    "byte *": 1, 
    "word32": 1, 
    "params": 3, 
    "int": 1, 
    "return": 1
  }, 
  "FreeNameSubtrees": {
    "void": 1, 
    "Base_entry *": 1, 
    "label": "free", 
    "params": 2, 
    "return;": 1, 
    "while(.*)": 1, 
    "void *": 1, 
    ".*\\-": 3, 
    "if (.*)": 2, 
    "return": 0
  }, 
  "EncryptContent": {
    "if (.* != 0)": 1, 
    "if (.* < .*)": 9, 
    "byte *": 3, 
    "memcpy(.*) param": 1, 
    "if (.* == 0) param": 1, 
    "word32": 2, 
    ".*\\+ 0x.*": 1, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 4, 
    "word32 *": 1, 
    ".*\\-": 12, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    ".*\\+": 29, 
    "if (.* < \\d*)": 9, 
    "if (.* < \\d*) param": 1, 
    "params": 13, 
    "int": 5, 
    "WC_RNG *": 1, 
    "if (.*) param": 1, 
    "memcpy(.*)": 3, 
    "char *": 1, 
    "void *": 1, 
    "if (.*)": 16, 
    ".*\\+ 0x.* param": 1, 
    "return": 1, 
    "= .*\\+": 21
  }, 
  "MakeSigner": {
    "label": "make", 
    "params": 1, 
    "memset(.*)": 1, 
    "void *": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "KeyPemToDerPassCb": {
    "params": 4, 
    "int": 3, 
    "if (.*) param": 1, 
    "char *": 1, 
    "void *": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "SetASNInt": {
    "if (.* != 0)": 2, 
    "if (.* != 0) param": 1, 
    "byte": 1, 
    "byte *": 1, 
    "label": "set", 
    "params": 3, 
    "int": 2, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 5, 
    "return": 1, 
    ".*\\+": 4, 
    "= .*\\+": 4
  }, 
  "SetSequence": {
    "byte *": 1, 
    "label": "set", 
    "word32": 1, 
    "params": 2, 
    "return": 1
  }, 
  "DateLessThan": {
    "params": 2, 
    "int": 1, 
    "tm *": 2, 
    "return": 1
  }, 
  "wc_CheckPrivateKey": {
    "if (.* < \\d*)": 3, 
    "if (.* < .*)": 3, 
    "byte *": 2, 
    "Key_Sum": 1, 
    "label": "check", 
    "word32": 2, 
    "params": 5, 
    ".*\\+ 0x.*": 1, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    ".*\\-": 1, 
    "if (.*)": 12, 
    "return": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "DecodeNameConstraints": {
    "if (.* < \\d*)": 3, 
    "if (.* != 0)": 1, 
    "DecodedCert *": 1, 
    "if (.* < .*)": 3, 
    "byte *": 1, 
    "params": 3, 
    "int": 2, 
    "if (.* == 0)": 1, 
    "for (.*)": 1, 
    ".*\\-": 7, 
    "if (.*)": 5, 
    "return": 1, 
    ".*\\+": 3, 
    "= .*\\+": 3
  }, 
  "min": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "word32": 2, 
    "params": 2, 
    "if (.*) param": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "ConfirmNameConstraints": {
    "if (.* != 0)": 1, 
    "if (.* < \\d*)": 1, 
    "DecodedCert *": 1, 
    "Signer *": 1, 
    "if (.* < .*)": 1, 
    "params": 2, 
    ".*\\+ 0x.*": 10, 
    "int": 1, 
    "if (.*) param": 1, 
    "return 0": 5, 
    "for (.*)": 2, 
    ".*\\-": 7, 
    "if (.*)": 12, 
    "return": 1, 
    ".*\\+": 13, 
    "= .*\\+": 12, 
    ".*\\- param": 1
  }, 
  "is_leading_bit_set": {
    "if (.* != 0)": 1, 
    "if (.* != 0) param": 1, 
    "byte *": 1, 
    "label": "set", 
    "word32": 1, 
    "params": 2, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "DecodeSubtree": {
    "if (.* < \\d*)": 2, 
    "if (.* != 0)": 1, 
    "if (.* < .*)": 2, 
    "break": 1, 
    "byte *": 1, 
    "Base_entry * *": 1, 
    "params": 4, 
    "int": 2, 
    "if (.* == 0)": 1, 
    "while(.*)": 1, 
    "memcpy(.*)": 1, 
    "void *": 1, 
    ".*\\-": 6, 
    "if (.*)": 9, 
    "return": 1, 
    ".*\\+": 6, 
    "= .*\\+": 3
  }, 
  "DateGreaterThan": {
    "if (.* < \\d*)": 3, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 3, 
    "params": 2, 
    "int": 1, 
    "if (.*) param": 1, 
    "tm *": 2, 
    ".*\\-": 10, 
    "if (.* < .*) param": 1, 
    "if (.*)": 6, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "wc_GetTime": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "label": "get", 
    "word32": 1, 
    "params": 2, 
    "int": 1, 
    "if (.*) param": 1, 
    "void *": 1, 
    ".*\\-": 2, 
    "if (.* < .*) param": 1, 
    "if (.*)": 2, 
    "return": 1
  }, 
  "GetOID": {
    "if (.* != 0)": 1, 
    "if (.* != 0) param": 1, 
    "byte *": 1, 
    "while(.*) param": 1, 
    "label": "get", 
    "word32": 1, 
    "params": 5, 
    "int": 2, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "word32 *": 2, 
    "while(.*)": 1, 
    ".*\\-": 2, 
    "= .*\\+ param": 1, 
    "if (.*)": 1, 
    "return": 1, 
    ".*\\+": 4, 
    "= .*\\+": 4, 
    ".*\\- param": 1
  }, 
  "GetName": {
    "if (.* < \\d*)": 4, 
    "if (.* < \\d*) param": 1, 
    "DecodedCert *": 1, 
    "if (.* < .*)": 4, 
    "if (.* == 0) param": 1, 
    "label": "get", 
    "params": 3, 
    "int": 3, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    ".*\\-": 20, 
    "if (.* < .*) param": 1, 
    "if (.*)": 6, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 3, 
    "= .*\\+": 2
  }, 
  "DecodeSubjKeyId": {
    "if (.* < \\d*)": 2, 
    "if (.* < \\d*) param": 1, 
    "DecodedCert *": 1, 
    "if (.* < .*)": 2, 
    "byte *": 1, 
    "params": 3, 
    "int": 2, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    ".*\\-": 2, 
    "if (.* < .*) param": 1, 
    "if (.*)": 3, 
    "return": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "SetASNIntMP": {
    "if (.* != 0)": 1, 
    "if (.* != 0) param": 1, 
    "if (.* < \\d*)": 2, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 2, 
    "byte *": 1, 
    "if (.* == 0) param": 1, 
    "label": "set", 
    "mp_int *": 1, 
    "params": 3, 
    "int": 2, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 2, 
    ".*\\-": 3, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 4, 
    "return": 1, 
    ".*\\+": 4, 
    "= .*\\+": 2
  }, 
  "GetSigAlg": {
    "if (.* < \\d*)": 2, 
    "if (.* != 0)": 1, 
    "DecodedCert *": 1, 
    "if (.* < .*)": 2, 
    "label": "get", 
    "word32": 1, 
    "params": 3, 
    "int": 1, 
    "if (.* == 0)": 1, 
    "word32 *": 1, 
    ".*\\-": 14, 
    "if (.*)": 7, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "AllocDer": {
    "break": 6, 
    "memset(.*) param": 1, 
    "word32": 1, 
    "params": 4, 
    ".*\\+ 0x.*": 2, 
    "int": 2, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "DerBuffer * *": 1, 
    "memset(.*)": 1, 
    "void *": 1, 
    ".*\\-": 7, 
    "= .*\\+ param": 1, 
    "if (.*)": 2, 
    ".*\\+ 0x.* param": 1, 
    "return": 1, 
    "case": 6, 
    ".*\\+": 3, 
    "= .*\\+": 2
  }, 
  "StoreECC_DSA_Sig_Bin": {
    "if (.* < \\d*)": 3, 
    "if (.* < .*)": 3, 
    "byte *": 3, 
    "memcpy(.*) param": 1, 
    "if (.* == 0) param": 1, 
    "word32": 2, 
    "params": 6, 
    "int": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 2, 
    "word32 *": 1, 
    "memcpy(.*)": 2, 
    ".*\\-": 4, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 6, 
    "return": 1, 
    ".*\\+": 9, 
    "= .*\\+": 6
  }, 
  "SetOctetString": {
    "byte *": 1, 
    "label": "set", 
    "word32": 1, 
    "params": 2, 
    "return": 1
  }, 
  "DecodeRsaPssParams": {
    "if (.* < \\d*)": 13, 
    "if (.* != 0)": 1, 
    "int *": 2, 
    "if (.* < .*)": 13, 
    "byte *": 1, 
    "word32": 1, 
    "params": 5, 
    "int": 1, 
    "if (.* == 0)": 15, 
    "wc_HashType *": 1, 
    ".*\\-": 10, 
    "if (.*)": 20, 
    "return": 1
  }, 
  "wc_GetSerialNumber": {
    "if (.* < \\d*)": 2, 
    "if (.* < \\d*) param": 1, 
    "int *": 1, 
    "if (.* < .*)": 2, 
    "byte *": 2, 
    "memcpy(.*) param": 1, 
    "label": "get", 
    "word32": 1, 
    "params": 5, 
    "int": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "word32 *": 1, 
    "memcpy(.*)": 1, 
    ".*\\-": 3, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 4, 
    "return": 1, 
    ".*\\+": 3, 
    "= .*\\+": 1
  }, 
  "wc_GetPubX509": {
    "if (.* < \\d*)": 2, 
    "int *": 1, 
    "DecodedCert *": 1, 
    "if (.* < .*)": 2, 
    "label": "get", 
    "params": 3, 
    "int": 2, 
    "if (.*) param": 1, 
    ".*\\-": 6, 
    "if (.*)": 3, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "GetBoolean": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "byte *": 1, 
    "label": "get", 
    "word32": 1, 
    "params": 3, 
    "int": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "word32 *": 1, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 3, 
    "return": 1, 
    ".*\\+": 4, 
    "= .*\\+": 2
  }, 
  "DecodeNsCertType": {
    "if (.* < \\d*)": 2, 
    "DecodedCert *": 1, 
    "if (.* < .*)": 2, 
    "byte *": 1, 
    "params": 3, 
    "int": 2, 
    ".*\\-": 3, 
    "if (.*)": 2, 
    "return": 1
  }, 
  "GetASNInt": {
    "if (.* != 0)": 1, 
    "int *": 1, 
    "if (.* < .*)": 5, 
    "byte *": 1, 
    "if (.* == 0) param": 1, 
    "word32": 1, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 2, 
    "word32 *": 1, 
    ".*\\-": 4, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    ".*\\+": 3, 
    "if (.* < \\d*)": 5, 
    "if (.* != 0) param": 1, 
    "if (.* < \\d*) param": 1, 
    "label": "get", 
    "params": 4, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.*)": 5, 
    "return": 1, 
    "= .*\\+": 3, 
    ".*\\- param": 1
  }, 
  "wc_DecryptPKCS8Key": {
    "if (.* < \\d*)": 4, 
    "if (.* < .*)": 4, 
    "byte *": 1, 
    "word32": 1, 
    "params": 4, 
    "int": 2, 
    "if (.*) param": 1, 
    "char *": 1, 
    ".*\\-": 1, 
    "if (.*)": 5, 
    "return": 1, 
    ".*\\+": 3, 
    "= .*\\+": 2
  }, 
  "wc_GetPubKeyDerFromCert": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "DecodedCert *": 1, 
    "if (.* < .*)": 1, 
    "byte *": 1, 
    "memcpy(.*) param": 1, 
    "label": "get", 
    "params": 3, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "word32 *": 1, 
    "memcpy(.*)": 1, 
    ".*\\-": 9, 
    "if (.* < .*) param": 1, 
    "if (.*)": 5, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "DecodeExtensionType": {
    "if (.* != 0)": 12, 
    "if (.* != 0) param": 1, 
    "if (.* < \\d*)": 10, 
    "if (.* < \\d*) param": 1, 
    "int *": 1, 
    "DecodedCert *": 1, 
    "if (.* < .*)": 10, 
    "byte": 1, 
    "byte *": 1, 
    "if (.* == 0) param": 1, 
    "word32": 1, 
    "params": 6, 
    "int": 2, 
    "if (.*) param": 1, 
    "if (.* == 0)": 15, 
    ".*\\-": 61, 
    "if (.* < .*) param": 1, 
    "if (.*)": 40, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "CheckAlgo": {
    "int *": 3, 
    "if (.* == 0) param": 1, 
    "label": "check", 
    "params": 5, 
    "int": 3, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    ".*\\-": 4, 
    "if (.*)": 3, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "ParseCert": {
    "if (.* < \\d*)": 2, 
    "DecodedCert *": 1, 
    "if (.* < .*)": 2, 
    "memcpy(.*) param": 1, 
    "if (.* == 0) param": 1, 
    "label": "parse", 
    "params": 4, 
    "int": 3, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "memcpy(.*)": 2, 
    "void *": 1, 
    ".*\\-": 15, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 5, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "Pkcs8Pad": {
    "byte *": 1, 
    "params": 3, 
    "int": 3, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "for (.*)": 1, 
    ".*\\-": 1, 
    "if (.*)": 1, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 3, 
    "= .*\\+": 1
  }, 
  "SetSerialNumber": {
    "if (.* != 0)": 1, 
    "if (.* < .*)": 4, 
    "byte *": 2, 
    "memcpy(.*) param": 1, 
    "word32": 2, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 1, 
    "while(.*)": 1, 
    ".*\\-": 7, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    ".*\\+": 4, 
    "if (.* < \\d*)": 4, 
    "if (.* < \\d*) param": 1, 
    "break": 1, 
    "label": "set", 
    "params": 5, 
    "int": 2, 
    "if (.*) param": 1, 
    "memcpy(.*)": 1, 
    "if (.*)": 8, 
    "return": 1, 
    "= .*\\+": 3, 
    ".*\\- param": 1
  }, 
  "SetASNLength": {
    "for (.*) param": 1, 
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "byte *": 1, 
    "label": "set", 
    "word32": 1, 
    "params": 2, 
    "if (.*) param": 1, 
    "for (.*)": 1, 
    ".*\\-": 2, 
    "if (.* < .*) param": 1, 
    "if (.*)": 1, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "IsSigAlgoECC": {
    "params": 1, 
    "int": 2, 
    "return": 1
  }, 
  "PemToDer": {
    "int *": 1, 
    "uchar *": 1, 
    "if (.* < .*)": 5, 
    ".*\\+ 0x.*": 19, 
    "long": 1, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 2, 
    "while(.*)": 1, 
    ".*\\-": 9, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    ".*\\+": 25, 
    "if (.* < \\d*)": 5, 
    "break": 2, 
    "params": 7, 
    "int": 2, 
    "if (.*) param": 1, 
    "DerBuffer * *": 1, 
    "EncryptedInfo *": 1, 
    "void *": 1, 
    "if (.*)": 20, 
    "return": 1, 
    "= .*\\+": 25, 
    ".*\\- param": 1
  }, 
  "StoreECC_DSA_Sig": {
    "if (.* < \\d*)": 3, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 3, 
    "byte *": 1, 
    "mp_int *": 2, 
    "params": 4, 
    "int": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "word32 *": 1, 
    ".*\\-": 5, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 3, 
    "return": 1, 
    ".*\\+": 6, 
    "= .*\\+": 5, 
    ".*\\- param": 1
  }, 
  "CheckBitString": {
    "if (.* < \\d*)": 4, 
    "int *": 1, 
    "if (.* < .*)": 4, 
    "byte *": 2, 
    "if (.* == 0) param": 1, 
    "label": "check", 
    "word32": 1, 
    "params": 6, 
    "int": 2, 
    "if (.* == 0)": 3, 
    "if (.*) param": 1, 
    "word32 *": 1, 
    ".*\\-": 10, 
    "if (.*)": 10, 
    "return": 1, 
    ".*\\+": 4, 
    "= .*\\+": 2
  }, 
  "GetASNHeader": {
    "int *": 1, 
    "byte": 1, 
    "byte *": 1, 
    "label": "get", 
    "word32": 1, 
    "params": 5, 
    "int": 1, 
    "word32 *": 1, 
    "return": 1
  }, 
  "GetNameHash": {
    "if (.* < \\d*)": 2, 
    "if (.* < .*)": 2, 
    "byte *": 2, 
    "label": "get", 
    "params": 4, 
    "int": 2, 
    "if (.* == 0)": 1, 
    "word32 *": 1, 
    ".*\\-": 3, 
    "if (.*)": 3, 
    "return": 1, 
    ".*\\+": 3, 
    "= .*\\+": 3
  }, 
  "SetObjectId": {
    "byte *": 1, 
    "label": "set", 
    "params": 2, 
    "int": 2, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 1, 
    "return": 1, 
    ".*\\+": 2, 
    "= .*\\+": 1
  }, 
  "ToTraditionalEnc": {
    "if (.* < \\d*)": 1, 
    "if (.* < .*)": 1, 
    "byte *": 1, 
    "word32": 1, 
    "params": 5, 
    "int": 2, 
    "word32 *": 1, 
    "char *": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "SetCurve": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "ecc_key *": 1, 
    "if (.* < .*)": 1, 
    "byte *": 1, 
    "memcpy(.*) param": 1, 
    "label": "set", 
    "size_t": 1, 
    "params": 3, 
    "int": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "memcpy(.*)": 1, 
    ".*\\-": 5, 
    "if (.* < .*) param": 1, 
    "if (.*)": 3, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 3, 
    "= .*\\+": 2
  }, 
  "TraditionalEnc": {
    "if (.* != 0)": 1, 
    "byte *": 3, 
    "word32": 2, 
    "params": 14, 
    "int": 6, 
    "WC_RNG *": 1, 
    "if (.* == 0)": 4, 
    "word32 *": 1, 
    "char *": 1, 
    "void *": 1, 
    ".*\\-": 1, 
    "if (.*)": 6, 
    "return": 1
  }, 
  "btoi": {
    "byte": 1, 
    "params": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "GetExplicitVersion": {
    "if (.* < \\d*)": 1, 
    "int *": 1, 
    "if (.* < .*)": 1, 
    "byte *": 1, 
    "label": "get", 
    "word32": 1, 
    "params": 4, 
    "int": 1, 
    "if (.* == 0)": 2, 
    "word32 *": 1, 
    ".*\\-": 3, 
    "if (.*)": 3, 
    "return": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "StoreRsaKey": {
    "if (.* < \\d*)": 1, 
    "DecodedCert *": 1, 
    "if (.* < .*)": 1, 
    "byte *": 1, 
    "word32": 1, 
    "params": 4, 
    "int": 1, 
    "if (.* == 0)": 1, 
    "word32 *": 1, 
    ".*\\-": 4, 
    "if (.*)": 2, 
    "return": 1, 
    ".*\\+": 3, 
    "= .*\\+": 3
  }, 
  "CheckCurve": {
    "if (.* < \\d*)": 1, 
    "if (.* < .*)": 1, 
    "label": "check", 
    "word32": 1, 
    "params": 1, 
    "int": 1, 
    "if (.* == 0)": 1, 
    ".*\\-": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "DecryptContent": {
    "if (.* < \\d*)": 19, 
    "if (.* < \\d*) param": 1, 
    "if (.* != 0)": 1, 
    "if (.* < .*)": 19, 
    "byte *": 1, 
    "word32": 1, 
    "params": 4, 
    "int": 2, 
    "if (.*) param": 1, 
    "if (.* == 0)": 3, 
    "goto": 10, 
    "memcpy(.*)": 2, 
    "char *": 1, 
    ".*\\-": 21, 
    "if (.* < .*) param": 1, 
    "if (.*)": 26, 
    "return": 1, 
    ".*\\+": 7, 
    "= .*\\+": 3
  }, 
  "DecodeAuthKeyId": {
    "if (.* < \\d*)": 3, 
    "DecodedCert *": 1, 
    "if (.* < .*)": 3, 
    "byte *": 1, 
    "params": 3, 
    "int": 2, 
    "if (.* == 0)": 1, 
    ".*\\-": 5, 
    "if (.*)": 4, 
    "return": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "wc_CertPemToDer": {
    "if (.* < \\d*)": 3, 
    "if (.* < \\d*) param": 1, 
    "uchar *": 2, 
    "if (.* < .*)": 3, 
    "memcpy(.*) param": 1, 
    "if (.* == 0) param": 1, 
    "params": 5, 
    "int": 4, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "memcpy(.*)": 1, 
    ".*\\-": 4, 
    "if (.* < .*) param": 1, 
    "if (.*)": 4, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "AddAltName": {
    "void": 1, 
    "DecodedCert *": 1, 
    "DNS_entry *": 1, 
    "label": "add", 
    "params": 2, 
    "return;": 1, 
    ".*\\-": 2, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "wc_EccPublicKeyDerSize": {
    "ecc_key *": 1, 
    "params": 2, 
    "int": 2, 
    "return": 1
  }, 
  "trim_leading_zeros": {
    "for (.*) param": 1, 
    "if (.* != 0)": 1, 
    "if (.* != 0) param": 1, 
    "byte * *": 1, 
    "word32": 1, 
    "params": 2, 
    "int": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "for (.*)": 1, 
    ".*\\-": 2, 
    "= .*\\+ param": 1, 
    "if (.*)": 1, 
    "return": 1, 
    ".*\\+": 3, 
    "= .*\\+": 3, 
    ".*\\- param": 1
  }, 
  "GetASNTag": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "byte *": 2, 
    "label": "get", 
    "word32": 1, 
    "params": 4, 
    "int": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 2, 
    "word32 *": 1, 
    ".*\\-": 2, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 3, 
    "return": 1, 
    ".*\\+": 2, 
    "= .*\\+": 2
  }, 
  "ToTraditional_ex": {
    "if (.* < \\d*)": 2, 
    "if (.* < .*)": 2, 
    "byte *": 1, 
    "word32": 1, 
    "params": 3, 
    "int": 1, 
    "if (.*) param": 1, 
    "word32 *": 1, 
    ".*\\-": 1, 
    "if (.*)": 3, 
    "return": 1, 
    ".*\\+": 2
  }, 
  "GetAlgoId": {
    "if (.* < \\d*)": 3, 
    "if (.* < .*)": 3, 
    "byte *": 1, 
    "label": "get", 
    "word32": 2, 
    "params": 5, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "word32 *": 2, 
    ".*\\-": 2, 
    "if (.* < .*) param": 1, 
    "if (.*)": 4, 
    "return": 1
  }, 
  "SetExplicit": {
    "byte": 1, 
    "byte *": 1, 
    "label": "set", 
    "word32": 1, 
    "params": 3, 
    "return": 1
  }, 
  "SkipEndOfLineChars": {
    "if (.* < \\d*)": 1, 
    "if (.* < .*)": 1, 
    "break": 1, 
    "params": 2, 
    "if (.*) param": 1, 
    "while(.*)": 1, 
    "char *": 2, 
    "char": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 2, 
    "return": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "DecodeToKey": {
    "if (.* < \\d*)": 1, 
    "if (.* != 0)": 1, 
    "DecodedCert *": 1, 
    "if (.* < .*)": 1, 
    "params": 2, 
    "int": 2, 
    "if (.* == 0)": 1, 
    ".*\\-": 5, 
    "if (.*)": 2, 
    "return": 1
  }, 
  "ForceZero": {
    "void": 1, 
    "word32": 1, 
    "params": 2, 
    "return;": 1, 
    "while(.*)": 1, 
    "void *": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "SetHeader": {
    "byte": 1, 
    "byte *": 1, 
    "label": "set", 
    "word32": 1, 
    "params": 3, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 1, 
    "return": 1, 
    ".*\\+": 2, 
    "= .*\\+": 1
  }, 
  "GetTime": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "int *": 2, 
    "if (.* < .*)": 1, 
    "byte *": 1, 
    "label": "get", 
    "params": 3, 
    "int": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    ".*\\-": 1, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 1, 
    "return": 1, 
    ".*\\+": 6, 
    "= .*\\+": 4
  }, 
  "GetSet": {
    "int *": 1, 
    "byte *": 1, 
    "label": "get", 
    "word32": 1, 
    "params": 4, 
    "int": 1, 
    "word32 *": 1, 
    "return": 1
  }, 
  "RsaPssHashOidToType": {
    "if (.* == 0) param": 1, 
    "word32": 1, 
    "params": 2, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 3, 
    "wc_HashType *": 1, 
    ".*\\-": 1, 
    "if (.*)": 3, 
    "return": 1
  }, 
  "GetSequence": {
    "int *": 1, 
    "byte *": 1, 
    "label": "get", 
    "word32": 1, 
    "params": 4, 
    "int": 1, 
    "word32 *": 1, 
    "return": 1
  }, 
  "SetShortInt": {
    "if (.* < \\d*)": 2, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 2, 
    "byte *": 1, 
    "label": "set", 
    "word32": 2, 
    "params": 4, 
    "int": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "word32 *": 1, 
    "memset(.*)": 1, 
    "for (.*)": 2, 
    ".*\\-": 2, 
    "if (.* < .*) param": 1, 
    "if (.*)": 3, 
    "return": 1, 
    ".*\\+": 11, 
    "= .*\\+": 8
  }, 
  "ExtractDate": {
    "if (.* < \\d*)": 1, 
    "if (.* != 0)": 1, 
    "int *": 1, 
    "uchar *": 1, 
    "if (.* < .*)": 1, 
    "memset(.*) param": 1, 
    "params": 4, 
    "int": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 6, 
    "memset(.*)": 1, 
    "return 0": 1, 
    "uchar": 1, 
    "tm *": 1, 
    ".*\\-": 12, 
    "= .*\\+ param": 1, 
    "if (.*)": 9, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 2, 
    "= .*\\+": 2
  }, 
  "SetSet": {
    "byte *": 1, 
    "label": "set", 
    "word32": 1, 
    "params": 2, 
    "return": 1
  }, 
  "PermittedListOk": {
    "DNS_entry *": 1, 
    "byte": 1, 
    "Base_entry *": 1, 
    "params": 3, 
    "int": 1, 
    "if (.*) param": 1, 
    "goto": 1, 
    "while(.*)": 1, 
    ".*\\-": 3, 
    "if (.*)": 3, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "DecodeAltNames": {
    "if (.* < \\d*)": 11, 
    "if (.* != 0)": 3, 
    "DecodedCert *": 1, 
    "if (.* < .*)": 11, 
    "byte *": 1, 
    "params": 3, 
    ".*\\+ 0x.*": 17, 
    "int": 2, 
    "if (.* == 0)": 7, 
    "while(.*)": 1, 
    "memcpy(.*)": 4, 
    "for (.*)": 1, 
    ".*\\-": 61, 
    "if (.*)": 32, 
    "return": 1, 
    ".*\\+": 44, 
    "= .*\\+": 23
  }, 
  "DecodeCrlDist": {
    "if (.* < \\d*)": 9, 
    "DecodedCert *": 1, 
    "if (.* < .*)": 9, 
    "byte *": 1, 
    "params": 3, 
    "int": 2, 
    "if (.* == 0)": 3, 
    ".*\\-": 11, 
    "if (.*)": 12, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 10, 
    "= .*\\+": 10
  }, 
  "wc_PemToDer": {
    "if (.* < \\d*)": 1, 
    "int *": 1, 
    "uchar *": 1, 
    "if (.* < .*)": 1, 
    "params": 7, 
    "int": 2, 
    "long": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "DerBuffer * *": 1, 
    "EncryptedInfo *": 1, 
    "void *": 1, 
    ".*\\-": 2, 
    "if (.*)": 2, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "GetDate": {
    "if (.* < \\d*)": 1, 
    "DecodedCert *": 1, 
    "if (.* < .*)": 1, 
    "if (.* == 0) param": 1, 
    "label": "get", 
    "params": 4, 
    "int": 4, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 4, 
    "memset(.*)": 1, 
    "memcpy(.*)": 1, 
    ".*\\-": 7, 
    "= .*\\+ param": 1, 
    "if (.*)": 5, 
    "return": 1, 
    ".*\\+": 2, 
    ".*\\- param": 1, 
    "= .*\\+": 2
  }, 
  "DecodePolicyConstraints": {
    "if (.* < \\d*)": 5, 
    "if (.* != 0)": 1, 
    "DecodedCert *": 1, 
    "if (.* < .*)": 5, 
    "byte *": 1, 
    "params": 3, 
    "int": 2, 
    "if (.* == 0)": 2, 
    ".*\\-": 10, 
    "if (.*)": 8, 
    "return": 1
  }, 
  "DecodeConstructedOtherName": {
    "if (.* < \\d*)": 3, 
    "if (.* != 0)": 1, 
    "DecodedCert *": 1, 
    "if (.* < .*)": 3, 
    "byte *": 1, 
    "if (.* == 0) param": 1, 
    "params": 5, 
    "int": 3, 
    "if (.* == 0)": 9, 
    "if (.*) param": 1, 
    "word32 *": 1, 
    "memcpy(.*)": 1, 
    ".*\\-": 15, 
    "if (.*)": 14, 
    "return": 1, 
    ".*\\+": 4, 
    "= .*\\+": 3
  }, 
  "GetObjectId": {
    "byte *": 1, 
    "label": "get", 
    "word32": 2, 
    "params": 5, 
    "int": 1, 
    "if (.* == 0)": 1, 
    "word32 *": 2, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "GetOctetString": {
    "int *": 1, 
    "byte *": 1, 
    "label": "get", 
    "word32": 1, 
    "params": 4, 
    "int": 1, 
    "word32 *": 1, 
    "return": 1
  }, 
  "wc_CheckPrivateKeyCert": {
    "DecodedCert *": 1, 
    "byte *": 1, 
    "label": "check", 
    "word32": 1, 
    "params": 3, 
    "int": 1, 
    "if (.*) param": 1, 
    ".*\\-": 2, 
    "if (.*)": 1, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "wc_DhParamsLoad": {
    "if (.* < \\d*)": 3, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 3, 
    "byte *": 3, 
    "memcpy(.*) param": 1, 
    "label": "load", 
    "word32": 1, 
    "params": 6, 
    "int": 1, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 2, 
    "if (.*) param": 1, 
    "word32 *": 2, 
    "memcpy(.*)": 2, 
    ".*\\-": 3, 
    "if (.* < .*) param": 1, 
    "if (.*)": 5, 
    "return": 1, 
    ".*\\+": 3, 
    "= .*\\+": 1
  }, 
  "wc_EccPublicKeyToDer": {
    "ecc_key *": 1, 
    "byte *": 1, 
    "word32": 1, 
    "params": 4, 
    "int": 2, 
    "return": 1
  }, 
  "ConfirmSignature": {
    "if (.* != 0)": 4, 
    "if (.* < \\d*)": 3, 
    "break": 2, 
    "if (.* < .*)": 3, 
    "byte *": 5, 
    "memcpy(.*) param": 1, 
    "if (.* == 0) param": 1, 
    "word32": 6, 
    "params": 12, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 11, 
    "SignatureCtx *": 1, 
    "goto": 13, 
    "memcpy(.*)": 1, 
    ".*\\-": 45, 
    "if (.* < .*) param": 1, 
    "if (.*)": 23, 
    "return": 1, 
    ".*\\- param": 1, 
    "case": 11
  }, 
  "wc_KeyPemToDer": {
    "if (.* < \\d*)": 3, 
    "if (.* < \\d*) param": 1, 
    "uchar *": 2, 
    "if (.* < .*)": 3, 
    "memcpy(.*) param": 1, 
    "params": 5, 
    ".*\\+ 0x.*": 1, 
    "int": 3, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "memset(.*)": 1, 
    "memcpy(.*)": 1, 
    "char *": 1, 
    ".*\\-": 4, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 3, 
    ".*\\+ 0x.* param": 1, 
    "return": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1, 
    ".*\\- param": 1
  }, 
  "GetSequence_ex": {
    "int *": 1, 
    "byte *": 1, 
    "label": "get", 
    "word32": 1, 
    "params": 5, 
    "int": 2, 
    "word32 *": 1, 
    "return": 1
  }, 
  "UnTraditionalEnc": {
    "byte *": 3, 
    "word32": 2, 
    "params": 13, 
    "int": 5, 
    "WC_RNG *": 1, 
    "word32 *": 1, 
    "char *": 1, 
    "void *": 1, 
    "return": 1
  }, 
  "GetDateInfo": {
    "if (.* < \\d*)": 3, 
    "if (.* < \\d*) param": 1, 
    "int *": 1, 
    "if (.* < .*)": 3, 
    "byte *": 2, 
    "byte * *": 1, 
    "label": "get", 
    "word32": 1, 
    "params": 6, 
    "int": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "word32 *": 1, 
    ".*\\-": 5, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 8, 
    "return": 1, 
    ".*\\+": 4, 
    "= .*\\+": 3
  }, 
  "GetASNHeader_ex": {
    "if (.* != 0)": 1, 
    "if (.* < \\d*)": 1, 
    "int *": 1, 
    "if (.* < .*)": 1, 
    "byte": 1, 
    "byte *": 1, 
    "label": "get", 
    "word32": 1, 
    "params": 6, 
    "int": 2, 
    "if (.* == 0)": 3, 
    "word32 *": 1, 
    ".*\\-": 3, 
    "if (.*)": 5, 
    "return": 1
  }, 
  "wc_ParseCert": {
    "DecodedCert *": 1, 
    "label": "parse", 
    "params": 4, 
    "int": 3, 
    "void *": 1, 
    "return": 1
  }, 
  "wc_SetTimeCb": {
    "wc_time_cb": 1, 
    "label": "set", 
    "params": 1, 
    ".*\\+ 0x.*": 1, 
    "int": 1, 
    "return 0": 1, 
    ".*\\+ 0x.* param": 1, 
    "return": 1, 
    ".*\\+": 1
  }, 
  "InitSignatureCtx": {
    "void": 1, 
    "memset(.*) param": 1, 
    "label": "init", 
    "params": 3, 
    "int": 1, 
    "if (.*) param": 1, 
    "memset(.*)": 1, 
    "return;": 1, 
    "SignatureCtx *": 1, 
    "void *": 1, 
    ".*\\-": 2, 
    "if (.*)": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "wc_InitDecodedCert": {
    "void": 1, 
    "DecodedCert *": 1, 
    "byte *": 1, 
    "label": "init", 
    "word32": 1, 
    "params": 4, 
    "return;": 1, 
    "void *": 1, 
    "return": 0
  }, 
  "wc_RsaPrivateKeyDecode": {
    "if (.* < \\d*)": 4, 
    "if (.* < .*)": 4, 
    "byte *": 1, 
    "RsaKey *": 1, 
    "word32": 1, 
    "params": 4, 
    "int": 1, 
    "if (.*) param": 1, 
    "word32 *": 1, 
    ".*\\-": 14, 
    "if (.*)": 5, 
    "return": 1
  }, 
  "RsaPssHashOidToSigOid": {
    "break": 4, 
    "word32": 1, 
    "params": 2, 
    "int": 1, 
    "word32 *": 1, 
    ".*\\-": 1, 
    "return": 1, 
    "case": 4
  }, 
  "IsInExcludedList": {
    "DNS_entry *": 1, 
    "break": 1, 
    "byte": 1, 
    "Base_entry *": 1, 
    "params": 3, 
    "int": 1, 
    "if (.*) param": 1, 
    "while(.*)": 1, 
    "return 0": 1, 
    ".*\\-": 3, 
    "if (.*)": 2, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "c32toa": {
    "void": 1, 
    "byte *": 1, 
    "word32": 1, 
    "params": 2, 
    "return;": 1, 
    "return": 0
  }, 
  "GetInteger7Bit": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "byte *": 1, 
    "label": "get", 
    "word32": 1, 
    "params": 3, 
    "int": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "word32 *": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 4, 
    "return": 1, 
    ".*\\+": 3, 
    "= .*\\+": 2
  }, 
  "wc_GetDateAsCalendarTime": {
    "byte": 1, 
    "byte *": 1, 
    "label": "get", 
    "params": 4, 
    "int": 2, 
    "if (.* == 0)": 1, 
    "tm *": 1, 
    ".*\\-": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "FreeAltNames": {
    "void": 1, 
    "DNS_entry *": 1, 
    "label": "free", 
    "params": 2, 
    "return;": 1, 
    "while(.*)": 1, 
    "void *": 1, 
    ".*\\-": 3, 
    "if (.*)": 2, 
    "return": 0
  }, 
  "wc_Time": {
    "if (.* == 0) param": 1, 
    "params": 1, 
    ".*\\+ 0x.*": 2, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "if (.*)": 1, 
    ".*\\+ 0x.* param": 1, 
    "return": 1, 
    ".*\\+": 2, 
    "= .*\\+": 1, 
    "time_t *": 1
  }, 
  "wc_EccKeyToPKCS8": {
    "ecc_key *": 1, 
    "byte *": 1, 
    "params": 3, 
    "int": 1, 
    "word32 *": 1, 
    "return": 1
  }, 
  "HashForSignature": {
    "if (.* != 0)": 8, 
    "if (.* != 0) param": 1, 
    "int *": 2, 
    "byte *": 2, 
    "if (.* == 0) param": 1, 
    "word32": 2, 
    "params": 7, 
    "int": 2, 
    "if (.*) param": 1, 
    "if (.* == 0)": 7, 
    "return 0": 4, 
    "goto": 3, 
    ".*\\-": 1, 
    "if (.*)": 15, 
    "return": 1
  }, 
  "FreeSignerTable": {
    "for (.*) param": 1, 
    "void": 1, 
    "Signer * *": 1, 
    "label": "free", 
    "params": 3, 
    "int": 1, 
    ".*\\+ param": 1, 
    "return;": 1, 
    "while(.*)": 1, 
    "for (.*)": 1, 
    "void *": 1, 
    ".*\\-": 1, 
    "= .*\\+ param": 1, 
    "return": 0, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "GetHeader": {
    "if (.* < \\d*)": 2, 
    "if (.* < \\d*) param": 1, 
    "int *": 1, 
    "if (.* < .*)": 2, 
    "byte *": 2, 
    "label": "get", 
    "word32": 1, 
    "params": 6, 
    "int": 2, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "word32 *": 1, 
    ".*\\-": 2, 
    "if (.* < .*) param": 1, 
    "if (.*)": 2, 
    "return": 1, 
    ".*\\+": 2, 
    "= .*\\+": 1
  }, 
  "GetCertHeader": {
    "if (.* < \\d*)": 5, 
    "DecodedCert *": 1, 
    "if (.* < .*)": 5, 
    "label": "get", 
    "params": 1, 
    "int": 1, 
    ".*\\-": 15, 
    "if (.*)": 5, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 2, 
    "= .*\\+": 2
  }, 
  "SetASNNull": {
    "byte *": 1, 
    "label": "set", 
    "params": 1, 
    "int": 1, 
    "return": 1
  }, 
  "FreeDer": {
    "void": 1, 
    "label": "free", 
    "params": 1, 
    "if (.*) param": 1, 
    "DerBuffer * *": 1, 
    "return;": 1, 
    ".*\\-": 4, 
    "if (.*)": 3, 
    "return": 0
  }, 
  "wc_RsaPublicKeyDecodeRaw": {
    "byte *": 2, 
    "RsaKey *": 1, 
    "word32": 2, 
    "params": 5, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 4, 
    ".*\\-": 9, 
    "if (.*)": 5, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "GetASNNull": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "byte *": 1, 
    "label": "get", 
    "word32": 1, 
    "params": 3, 
    "int": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 3, 
    "word32 *": 1, 
    ".*\\-": 3, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 4, 
    "return": 1, 
    ".*\\+": 3, 
    "= .*\\+": 2
  }, 
  "ParseCertRelative": {
    "if (.* < \\d*)": 7, 
    "if (.* != 0)": 9, 
    "DecodedCert *": 1, 
    "if (.* < .*)": 7, 
    "if (.* == 0) param": 1, 
    "label": "parse", 
    "params": 4, 
    ".*\\+ 0x.*": 2, 
    "int": 3, 
    "if (.*) param": 1, 
    "if (.* == 0)": 10, 
    "void *": 1, 
    ".*\\-": 70, 
    "if (.*)": 36, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 5, 
    "= .*\\+": 4
  }, 
  "DecodeKeyUsage": {
    "if (.* < \\d*)": 1, 
    "DecodedCert *": 1, 
    "if (.* < .*)": 1, 
    "byte *": 1, 
    "params": 3, 
    "int": 2, 
    "if (.* == 0)": 2, 
    ".*\\-": 3, 
    "if (.*)": 3, 
    "return": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "DecodeExtKeyUsage": {
    "if (.* < \\d*)": 2, 
    "DecodedCert *": 1, 
    "if (.* < .*)": 2, 
    "byte *": 1, 
    "params": 3, 
    "int": 2, 
    "if (.* == 0)": 7, 
    "while(.*)": 1, 
    ".*\\-": 9, 
    "if (.*)": 10, 
    "return": 1
  }, 
  "wc_CreateEncryptedPKCS8Key": {
    "byte *": 3, 
    "label": "create", 
    "word32": 2, 
    "params": 14, 
    "int": 6, 
    "WC_RNG *": 1, 
    "word32 *": 1, 
    "char *": 1, 
    "void *": 1, 
    "return": 1
  }, 
  "SetImplicit": {
    "byte": 2, 
    "byte *": 1, 
    "label": "set", 
    "word32": 1, 
    "params": 4, 
    "if (.*) param": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "wc_GetPkcs8TraditionalOffset": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "byte *": 1, 
    "label": "get", 
    "word32": 1, 
    "params": 3, 
    "int": 1, 
    "if (.*) param": 1, 
    "word32 *": 1, 
    ".*\\-": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "wc_EncryptPKCS8Key": {
    "if (.* != 0)": 1, 
    "if (.* < .*)": 2, 
    "byte *": 3, 
    "memcpy(.*) param": 1, 
    "if (.* == 0) param": 1, 
    "word32": 2, 
    ".*\\+ 0x.*": 12, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 8, 
    "word32 *": 1, 
    "memset(.*)": 1, 
    ".*\\-": 4, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    ".*\\+": 64, 
    "if (.* < \\d*)": 2, 
    "memset(.*) param": 1, 
    "params": 14, 
    "int": 6, 
    "WC_RNG *": 1, 
    "if (.*) param": 1, 
    "memcpy(.*)": 6, 
    "char *": 1, 
    "void *": 1, 
    "if (.*)": 17, 
    ".*\\- param": 1, 
    "return": 1, 
    "= .*\\+": 56
  }, 
  "GetASNObjectId": {
    "if (.* < \\d*)": 1, 
    "int *": 1, 
    "if (.* < .*)": 1, 
    "byte *": 1, 
    "label": "get", 
    "word32": 1, 
    "params": 4, 
    "int": 1, 
    "word32 *": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "GetSigName": {
    "if (.* == 0) param": 1, 
    "label": "get", 
    "params": 1, 
    ".*\\+ 0x.*": 11, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 10, 
    "char": 1, 
    "if (.*)": 10, 
    "return": 1, 
    ".*\\+": 11, 
    "= .*\\+": 11
  }, 
  "GetShortInt": {
    "if (.* < \\d*)": 3, 
    "if (.* < \\d*) param": 1, 
    "int *": 1, 
    "if (.* < .*)": 3, 
    "byte *": 1, 
    "label": "get", 
    "word32": 1, 
    "params": 4, 
    "int": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "word32 *": 1, 
    "while(.*)": 1, 
    ".*\\-": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 5, 
    "return": 1, 
    ".*\\+": 4, 
    "= .*\\+": 2
  }, 
  "RsaPssHashOidToMgf1": {
    "int *": 1, 
    "if (.* == 0) param": 1, 
    "word32": 1, 
    "params": 2, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 3, 
    ".*\\-": 1, 
    "if (.*)": 3, 
    "return": 1
  }, 
  "BytePrecision": {
    "while(.*) param": 1, 
    "word32": 1, 
    "params": 1, 
    "while(.*)": 1, 
    ".*\\-": 2, 
    "return": 1, 
    ".*\\- param": 1
  }, 
  "ToTraditionalInline_ex": {
    "if (.* < \\d*)": 6, 
    "if (.* != 0)": 1, 
    "if (.* < .*)": 6, 
    "byte *": 1, 
    "word32": 1, 
    "params": 4, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "word32 *": 2, 
    ".*\\-": 13, 
    "if (.*)": 10, 
    "return": 1, 
    ".*\\+": 3, 
    "= .*\\+": 3
  }, 
  "ToTraditionalInline": {
    "byte *": 1, 
    "word32": 1, 
    "params": 3, 
    "int": 1, 
    "word32 *": 1, 
    "return": 1
  }, 
  "SetAlgoID": {
    "if (.* != 0)": 2, 
    "if (.* != 0) param": 1, 
    "byte *": 1, 
    "label": "set", 
    "params": 4, 
    "int": 3, 
    "if (.*) param": 1, 
    "if (.* == 0)": 2, 
    "goto": 1, 
    "memcpy(.*)": 5, 
    "if (.*)": 11, 
    "return": 1, 
    ".*\\+": 8, 
    "= .*\\+": 3
  }, 
  "GetCertKey": {
    "if (.* < \\d*)": 4, 
    "if (.* != 0)": 4, 
    "DecodedCert *": 1, 
    "if (.* < .*)": 4, 
    "byte *": 1, 
    "label": "get", 
    "word32": 1, 
    "params": 4, 
    "int": 1, 
    "if (.* == 0)": 1, 
    "word32 *": 1, 
    "goto": 1, 
    ".*\\-": 15, 
    "if (.*)": 12, 
    "return": 1, 
    ".*\\+": 6, 
    "= .*\\+": 6
  }, 
  "OidFromId": {
    "break": 31, 
    "byte": 1, 
    "if (.* == 0) param": 1, 
    "word32": 2, 
    "params": 3, 
    ".*\\+ 0x.*": 61, 
    "if (.*) param": 1, 
    "if (.* == 0)": 44, 
    "word32 *": 1, 
    "if (.*)": 44, 
    "return": 1, 
    "case": 34, 
    ".*\\+": 61, 
    "= .*\\+": 61
  }, 
  "DecodeBasicCaConstraint": {
    "if (.* < \\d*)": 4, 
    "DecodedCert *": 1, 
    "if (.* < .*)": 4, 
    "byte *": 1, 
    "params": 3, 
    "int": 2, 
    "if (.* == 0)": 1, 
    ".*\\-": 6, 
    "if (.*)": 5, 
    "return": 1
  }, 
  "SetBitString": {
    "byte": 1, 
    "byte *": 1, 
    "label": "set", 
    "word32": 1, 
    "params": 3, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 3, 
    "return": 1, 
    ".*\\+": 4, 
    "= .*\\+": 2
  }, 
  "wc_GetCTC_HashOID": {
    "if (.* < \\d*)": 1, 
    "if (.* < .*)": 1, 
    "label": "get", 
    "params": 1, 
    "int": 2, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "InitDecodedCert": {
    "void": 1, 
    "DecodedCert *": 1, 
    "memset(.*) param": 1, 
    "byte *": 1, 
    "label": "init", 
    "word32": 1, 
    "params": 4, 
    "if (.*) param": 1, 
    "memset(.*)": 1, 
    "return;": 1, 
    "void *": 1, 
    ".*\\-": 8, 
    "if (.*)": 1, 
    "return": 0, 
    ".*\\- param": 1
  }, 
  "SetDigest": {
    "byte *": 2, 
    "memcpy(.*) param": 1, 
    "label": "set", 
    "word32": 1, 
    "params": 3, 
    ".*\\+ param": 1, 
    "memcpy(.*)": 1, 
    "return": 1, 
    ".*\\+": 2
  }, 
  "wc_EccPublicKeyDecode": {
    "if (.* < \\d*)": 9, 
    "if (.* != 0)": 3, 
    "ecc_key *": 1, 
    "if (.* < .*)": 9, 
    "byte *": 1, 
    "word32": 1, 
    "params": 4, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 4, 
    "word32 *": 1, 
    ".*\\-": 17, 
    "if (.*)": 22, 
    "return": 1, 
    ".*\\+": 6, 
    "= .*\\+": 6
  }, 
  "SetEccPublicKey": {
    "if (.* < \\d*)": 2, 
    "if (.* < \\d*) param": 1, 
    "if (.* != 0)": 1, 
    "if (.* != 0) param": 1, 
    "ecc_key *": 1, 
    "if (.* < .*)": 2, 
    "byte *": 1, 
    "if (.* == 0) param": 1, 
    "label": "set", 
    "params": 5, 
    "int": 4, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "memcpy(.*)": 2, 
    ".*\\-": 4, 
    "if (.* < .*) param": 1, 
    "if (.*)": 10, 
    "return": 1, 
    ".*\\- param": 1, 
    ".*\\+": 12, 
    "= .*\\+": 8
  }, 
  "DecodeAuthInfo": {
    "if (.* < \\d*)": 5, 
    "DecodedCert *": 1, 
    "if (.* < .*)": 5, 
    "break": 1, 
    "byte *": 1, 
    "params": 3, 
    "int": 2, 
    "if (.* == 0)": 1, 
    "for (.*)": 1, 
    ".*\\-": 7, 
    "if (.*)": 6, 
    "return": 1, 
    ".*\\+": 2, 
    "= .*\\+": 2
  }
}