{
  "min32": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "uint": 3, 
    "params": 2, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "phase_one_fix_pixel_grad": {
    "void": 1, 
    "uint": 2, 
    "params": 3, 
    ".*\\+ 0x.*": 1, 
    ".*\\+ param": 1, 
    "return;": 1, 
    "for (.*)": 3, 
    ".*\\-": 3, 
    "= .*\\+ param": 1, 
    "if (.*)": 1, 
    ".*\\+ 0x.* param": 1, 
    "return": 0, 
    "LibRaw *": 1, 
    ".*\\- param": 1, 
    ".*\\+": 28, 
    "= .*\\+": 15
  }, 
  "data": {
    "void": 1, 
    "vector<unsigned_int,std::allocator<unsigned_int>> *": 1, 
    "params": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "p1raw": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "uint": 2, 
    "params": 3, 
    ".*\\+ 0x.*": 2, 
    "undefined": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 1, 
    ".*\\+ 0x.* param": 1, 
    "return": 1, 
    "LibRaw *": 1, 
    ".*\\+": 2
  }, 
  "unpacked_load_raw_FujiDBP": {
    "for (.*) param": 1, 
    "void": 1, 
    "memcpy(.*) param": 1, 
    "label": "load", 
    "params": 1, 
    ".*\\+ 0x.*": 8, 
    ".*\\+ param": 1, 
    "return;": 1, 
    "memcpy(.*)": 1, 
    "for (.*)": 2, 
    "= .*\\+ param": 1, 
    ".*\\+ 0x.* param": 1, 
    "return": 0, 
    "LibRaw *": 1, 
    ".*\\+": 11, 
    "= .*\\+": 5
  }, 
  "operator==": {
    "params": 2, 
    "return": 1, 
    "__normal_iterator *": 2
  }, 
  "deallocate": {
    "void": 1, 
    "uint *": 1, 
    "delete(.*)": 1, 
    "uint": 1, 
    "params": 2, 
    "delete(.*) param": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "construct<unsigned_int,unsigned_int_const&>": {
    "void": 1, 
    "new_allocator<unsigned_int> *": 1, 
    "uint *": 2, 
    "params": 3, 
    "return;": 1, 
    "return": 0
  }, 
  "__relocate_a<unsigned_int*,unsigned_int*,std::allocator<unsigned_int>>": {
    "uint *": 3, 
    "uint": 1, 
    "params": 4, 
    "int": 1, 
    ".*\\-": 1, 
    "return": 1, 
    "allocator *": 1
  }, 
  "__niter_base<unsigned_int*>": {
    "uint *": 1, 
    "uint": 1, 
    "params": 1, 
    "int": 1, 
    ".*\\-": 1, 
    "return": 1
  }, 
  "empty": {
    "vector<unsigned_int,std::allocator<unsigned_int>> *": 1, 
    "params": 1, 
    "return": 1
  }, 
  "_Vector_base": {
    "_Vector_base<unsigned_int,std::allocator<unsigned_int>> *": 1, 
    "params": 1, 
    "int": 1, 
    "return": 1
  }, 
  "allocator": {
    "allocator<unsigned_int> *": 1, 
    "params": 1, 
    "int": 1, 
    "return": 1
  }, 
  "_M_check_len": {
    "if (.* < \\d*)": 1, 
    "vector<unsigned_int,std::allocator<unsigned_int>> *": 1, 
    "if (.* < .*)": 1, 
    "label": "check", 
    "uint": 2, 
    "params": 3, 
    "int": 1, 
    "if (.*) param": 1, 
    "char *": 1, 
    ".*\\-": 1, 
    "if (.*)": 2, 
    "return": 1, 
    ".*\\+": 2, 
    "= .*\\+": 2
  }, 
  "operator-": {
    "params": 2, 
    ".*\\-": 1, 
    "return": 1, 
    "__normal_iterator *": 2
  }, 
  "_S_relocate": {
    "void": 1, 
    "uint *": 3, 
    "params": 4, 
    "return;": 1, 
    "return": 0, 
    "allocator *": 1
  }, 
  "~_Vector_base": {
    "_Vector_base<unsigned_int,std::allocator<unsigned_int>> *": 1, 
    "label": "~", 
    "params": 1, 
    "int": 1, 
    ".*\\+ param": 1, 
    ".*\\-": 1, 
    "return": 1, 
    ".*\\+": 1, 
    ".*\\- param": 1
  }, 
  "__destroy<unsigned_int*>": {
    "void": 1, 
    "uint *": 2, 
    "label": "destroy", 
    "params": 2, 
    "return;": 1, 
    "return": 0
  }, 
  "constain32": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "uint": 4, 
    "params": 3, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 2, 
    "return": 1
  }, 
  "new_allocator": {
    "new_allocator<unsigned_int> *": 1, 
    "params": 1, 
    "int": 1, 
    "return": 1
  }, 
  "~vector": {
    "vector<unsigned_int,std::allocator<unsigned_int>> *": 1, 
    "label": "~", 
    "params": 1, 
    "int": 1, 
    ".*\\+ param": 1, 
    "= .*\\+ param": 1, 
    "return": 1, 
    ".*\\+": 1, 
    "= .*\\+": 1
  }, 
  "_ZSt14__relocate_a_1IjjENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS1_E4typeES2_S2_S2_RSaIT0_E": {
    "if (.* < \\d*)": 1, 
    "void": 1, 
    "if (.* < .*)": 1, 
    "params": 0, 
    ".*\\-": 1, 
    "if (.*)": 1, 
    "return": 0, 
    ".*\\+": 1
  }, 
  "max_size": {
    "params": 0, 
    "undefined": 1, 
    "return": 1
  }, 
  "hasselblad_load_raw": {
    "for (.*) param": 1, 
    "if (.* != 0)": 5, 
    "if (.* < .*)": 5, 
    ".*\\+ 0x.*": 18, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 2, 
    "memset(.*)": 1, 
    "for (.*)": 9, 
    ".*\\-": 11, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    ".*\\+": 52, 
    "if (.* < \\d*)": 5, 
    "if (.* < \\d*) param": 1, 
    "if (.* != 0) param": 1, 
    "void": 1, 
    "label": "load", 
    "params": 1, 
    "if (.*) param": 1, 
    "return;": 1, 
    "if (.*)": 13, 
    ".*\\+ 0x.* param": 1, 
    "LibRaw *": 1, 
    "return": 0, 
    ".*\\- param": 1, 
    "= .*\\+": 31
  }, 
  "size": {
    "void": 1, 
    "vector<unsigned_int,std::allocator<unsigned_int>> *": 1, 
    "params": 1, 
    ".*\\+ param": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    ".*\\+": 1, 
    ".*\\- param": 1
  }, 
  "allocate": {
    "if (.* < \\d*)": 1, 
    "void": 1, 
    "if (.* < .*)": 1, 
    "uint": 1, 
    "params": 2, 
    "if (.*) param": 1, 
    "return;": 1, 
    "void *": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 1, 
    "return": 0
  }, 
  "phase_one_load_raw": {
    "if (.* != 0)": 4, 
    "if (.* != 0) param": 1, 
    "void": 1, 
    "label": "load", 
    "params": 1, 
    ".*\\+ 0x.*": 15, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "return;": 1, 
    "for (.*)": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 5, 
    ".*\\+ 0x.* param": 1, 
    "return": 0, 
    "LibRaw *": 1, 
    ".*\\+": 27, 
    "= .*\\+": 9
  }, 
  "_Destroy<unsigned_int*,unsigned_int>": {
    "void": 1, 
    "uint *": 2, 
    "label": "destroy", 
    "params": 3, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0, 
    "allocator *": 1
  }, 
  "_Destroy<unsigned_int*>": {
    "void": 1, 
    "uint *": 2, 
    "label": "destroy", 
    "params": 2, 
    "return;": 1, 
    ".*\\-": 1, 
    "return": 0
  }, 
  "_Vector_impl": {
    "_Vector_impl *": 1, 
    "params": 1, 
    "return": 1
  }, 
  "FC": {
    "uint": 1, 
    "params": 3, 
    ".*\\+ 0x.*": 1, 
    "int": 3, 
    ".*\\+ param": 1, 
    ".*\\+ 0x.* param": 1, 
    "return": 1, 
    "LibRaw *": 1, 
    ".*\\+": 1
  }, 
  "begin": {
    "vector<unsigned_int,std::allocator<unsigned_int>> *": 1, 
    "params": 1, 
    "undefined": 1, 
    "return": 1
  }, 
  "phase_one_flat_field": {
    "if (.* != 0)": 3, 
    "if (.* < .*)": 4, 
    ".*\\+ 0x.*": 8, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 3, 
    "while(.*)": 2, 
    "for (.*)": 8, 
    ".*\\-": 9, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    ".*\\+": 34, 
    "if (.* < \\d*)": 4, 
    "if (.* < \\d*) param": 1, 
    "void": 1, 
    "break": 2, 
    "params": 3, 
    "int": 2, 
    "if (.*) param": 1, 
    "return;": 1, 
    "if (.*)": 12, 
    ".*\\+ 0x.* param": 1, 
    "LibRaw *": 1, 
    "return": 0, 
    "= .*\\+": 20, 
    ".*\\- param": 1
  }, 
  "leaf_hdr_load_raw": {
    "for (.*) param": 1, 
    "if (.* != 0)": 2, 
    "if (.* < .*)": 1, 
    "if (.* == 0) param": 1, 
    ".*\\+ 0x.*": 19, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 6, 
    "while(.*)": 1, 
    "for (.*)": 2, 
    ".*\\-": 2, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    ".*\\+": 27, 
    "if (.* != 0) param": 1, 
    "if (.* < \\d*)": 1, 
    "void": 1, 
    "break": 1, 
    "label": "load", 
    "params": 1, 
    "if (.*) param": 1, 
    "return;": 1, 
    "if (.*)": 9, 
    ".*\\+ 0x.* param": 1, 
    "LibRaw *": 1, 
    "return": 0, 
    "= .*\\+": 16, 
    ".*\\- param": 1
  }, 
  "operator[]": {
    "vector<unsigned_int,std::allocator<unsigned_int>> *": 1, 
    "uint": 1, 
    "params": 2, 
    "int": 1, 
    ".*\\+ param": 1, 
    "return": 1, 
    ".*\\+": 1
  }, 
  "sinar_4shot_load_raw": {
    "for (.*) param": 1, 
    "if (.* < .*)": 4, 
    "if (.* == 0) param": 1, 
    ".*\\+ 0x.*": 22, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 3, 
    "for (.*)": 3, 
    ".*\\-": 3, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    ".*\\+": 28, 
    "if (.* < \\d*)": 4, 
    "if (.* < \\d*) param": 1, 
    "void": 1, 
    "label": "load", 
    "params": 1, 
    "if (.*) param": 1, 
    "return;": 1, 
    "if (.*)": 7, 
    ".*\\+ 0x.* param": 1, 
    "LibRaw *": 1, 
    "return": 0, 
    "= .*\\+": 13, 
    ".*\\- param": 1
  }, 
  "~_Vector_impl": {
    "_Vector_impl *": 1, 
    "label": "~", 
    "params": 1, 
    "return": 1
  }, 
  "_M_data_ptr<unsigned_int>": {
    "vector<unsigned_int,std::allocator<unsigned_int>> *": 1, 
    "uint *": 1, 
    "uint": 1, 
    "params": 2, 
    "int": 1, 
    "return": 1
  }, 
  "phase_one_load_raw_c": {
    "for (.*) param": 1, 
    "if (.* != 0)": 5, 
    "if (.* < .*)": 3, 
    ".*\\+ 0x.*": 30, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 2, 
    "while(.*)": 1, 
    "for (.*)": 6, 
    ".*\\-": 4, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    ".*\\+": 52, 
    "if (.* != 0) param": 1, 
    "if (.* < \\d*)": 3, 
    "if (.* < \\d*) param": 1, 
    "void": 1, 
    "break": 1, 
    "label": "load", 
    "params": 1, 
    "if (.*) param": 1, 
    "return;": 1, 
    "if (.*)": 13, 
    ".*\\+ 0x.* param": 1, 
    "LibRaw *": 1, 
    "return": 0, 
    "= .*\\+": 24, 
    ".*\\- param": 1
  }, 
  "push_back": {
    "void": 1, 
    "vector<unsigned_int,std::allocator<unsigned_int>> *": 1, 
    "uint *": 1, 
    "params": 2, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "return;": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 1, 
    "return": 0, 
    ".*\\+": 3, 
    "= .*\\+": 2
  }, 
  "max<unsigned_int>": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "uint *": 2, 
    "uint": 1, 
    "params": 2, 
    "int": 1, 
    "if (.*) param": 1, 
    ".*\\-": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "_Vector_impl_data": {
    "void": 1, 
    "params": 1, 
    ".*\\+ param": 1, 
    "return;": 1, 
    "return": 0, 
    ".*\\+": 2, 
    "_Vector_impl_data *": 1
  }, 
  "abs32": {
    "uint": 1, 
    "params": 1, 
    "int": 2, 
    ".*\\+ param": 1, 
    "return": 1, 
    ".*\\+": 1
  }, 
  "vector": {
    "vector<unsigned_int,std::allocator<unsigned_int>> *": 1, 
    "params": 1, 
    "int": 1, 
    "return": 1
  }, 
  "end": {
    "vector<unsigned_int,std::allocator<unsigned_int>> *": 1, 
    "params": 1, 
    "undefined": 1, 
    ".*\\+ param": 1, 
    "return": 1, 
    ".*\\+": 1
  }, 
  "~new_allocator": {
    "new_allocator<unsigned_int> *": 1, 
    "label": "~", 
    "params": 1, 
    "int": 1, 
    "return": 1
  }, 
  "phase_one_fix_col_pixel_avg": {
    "if (.* < \\d*)": 1, 
    "if (.* != 0)": 1, 
    "void": 1, 
    "if (.* < .*)": 1, 
    "break": 1, 
    "uint": 2, 
    "params": 3, 
    ".*\\+ 0x.*": 1, 
    ".*\\+ param": 1, 
    "return;": 2, 
    "while(.*)": 2, 
    "= .*\\+ param": 1, 
    "if (.*)": 2, 
    ".*\\+ 0x.* param": 1, 
    "return": 0, 
    "LibRaw *": 1, 
    ".*\\+": 12, 
    "= .*\\+": 5
  }, 
  "__clang_call_terminate": {
    "void": 1, 
    "params": 0, 
    "return": 0
  }, 
  "phase_one_correct": {
    "for (.*) param": 1, 
    "if (.* != 0)": 5, 
    "if (.* < .*)": 11, 
    ".*\\+ 0x.*": 61, 
    "undefined": 1, 
    ".*\\+ param": 1, 
    "if (.* == 0)": 23, 
    "memset(.*)": 1, 
    "while(.*)": 8, 
    "goto": 1, 
    "for (.*)": 35, 
    ".*\\-": 16, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    ".*\\+": 156, 
    "if (.* != 0) param": 1, 
    "if (.* < \\d*)": 11, 
    "break": 5, 
    "params": 1, 
    "if (.*) param": 1, 
    "memcpy(.*)": 1, 
    "if (.*)": 48, 
    ".*\\+ 0x.* param": 1, 
    "LibRaw *": 1, 
    "return": 1, 
    "= .*\\+": 99, 
    ".*\\- param": 1
  }, 
  "_S_max_size": {
    "uint": 1, 
    "params": 1, 
    "int": 1, 
    "return": 1, 
    "allocator *": 1
  }, 
  "min<unsigned_int>": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "uint *": 2, 
    "uint": 1, 
    "params": 2, 
    "int": 1, 
    "if (.*) param": 1, 
    ".*\\-": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "imacon_full_load_raw": {
    "for (.*) param": 1, 
    "malloc(.*) param": 1, 
    "void": 1, 
    "if (.* == 0) param": 1, 
    "label": "load", 
    "params": 1, 
    ".*\\+ 0x.*": 3, 
    "malloc(.*)": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "return;": 1, 
    "for (.*)": 2, 
    "= .*\\+ param": 1, 
    "if (.*)": 1, 
    ".*\\+ 0x.* param": 1, 
    "return": 0, 
    "LibRaw *": 1, 
    ".*\\+": 8, 
    "= .*\\+": 6
  }, 
  "ph1_bithuff": {
    "if (.* < \\d*)": 4, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 4, 
    "if (.* == 0) param": 1, 
    "uint": 1, 
    "params": 3, 
    ".*\\+ 0x.*": 19, 
    "int": 2, 
    "ushort *": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    ".*\\-": 11, 
    "= .*\\+ param": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 7, 
    ".*\\+ 0x.* param": 1, 
    "return": 1, 
    "LibRaw *": 1, 
    ".*\\- param": 1, 
    ".*\\+": 20, 
    "= .*\\+": 9
  }, 
  "_M_deallocate": {
    "void": 1, 
    "_Vector_base<unsigned_int,std::allocator<unsigned_int>> *": 1, 
    "uint *": 1, 
    "uint": 1, 
    "params": 3, 
    "if (.*) param": 1, 
    "return;": 1, 
    "if (.*)": 1, 
    "return": 0
  }, 
  "_M_realloc_insert<unsigned_int_const&>": {
    "void": 1, 
    "vector<unsigned_int,std::allocator<unsigned_int>> *": 1, 
    "uint *": 1, 
    "params": 3, 
    ".*\\+ param": 1, 
    "return;": 1, 
    ".*\\-": 1, 
    "= .*\\+ param": 1, 
    "__normal_iterator": 1, 
    "return": 0, 
    ".*\\+": 6, 
    "= .*\\+": 4, 
    ".*\\- param": 1
  }, 
  "_M_allocate": {
    "_Vector_base<unsigned_int,std::allocator<unsigned_int>> *": 1, 
    "if (.* == 0) param": 1, 
    "uint": 1, 
    "params": 2, 
    "undefined": 1, 
    "if (.*) param": 1, 
    "if (.* == 0)": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "unsigned_cmp": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "params": 2, 
    "undefined": 1, 
    "if (.*) param": 1, 
    "void *": 2, 
    "if (.* < .*) param": 1, 
    "if (.*)": 3, 
    "return": 1
  }, 
  "max32": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "uint": 3, 
    "params": 2, 
    "int": 1, 
    "if (.*) param": 1, 
    "if (.* < .*) param": 1, 
    "if (.*)": 1, 
    "return": 1
  }, 
  "~allocator": {
    "allocator<unsigned_int> *": 1, 
    "label": "~", 
    "params": 1, 
    "int": 1, 
    "return": 1
  }, 
  "_M_get_Tp_allocator": {
    "_Vector_base<unsigned_int,std::allocator<unsigned_int>> *": 1, 
    "label": "get", 
    "params": 1, 
    "int": 1, 
    "return": 1
  }, 
  "_S_do_relocate": {
    "void": 1, 
    "uint *": 3, 
    "params": 5, 
    "return;": 1, 
    "return": 0, 
    "integral_constant": 1, 
    "allocator *": 1
  }, 
  "p1rawc": {
    "if (.* < \\d*)": 1, 
    "if (.* < \\d*) param": 1, 
    "if (.* < .*)": 1, 
    "uint *": 1, 
    "uint": 2, 
    "params": 4, 
    ".*\\+ 0x.*": 2, 
    "undefined": 1, 
    ".*\\+ param": 1, 
    "if (.*) param": 1, 
    "if (.* < .*) param": 1, 
    "= .*\\+ param": 1, 
    "if (.*)": 1, 
    ".*\\+ 0x.* param": 1, 
    "return": 1, 
    "LibRaw *": 1, 
    ".*\\+": 3, 
    "= .*\\+": 1
  }, 
  "__normal_iterator": {
    "void": 1, 
    "params": 2, 
    "__normal_iterator<unsigned_int_const*,std::vector<unsigned_int,std::allocator<unsigned_int>>> *": 1, 
    "uint * *": 1, 
    "return;": 1, 
    "return": 0
  }, 
  "forward<unsigned_int_const&>": {
    "type *": 1, 
    "uint": 1, 
    "params": 1, 
    "int": 1, 
    ".*\\-": 1, 
    "return": 1
  }, 
  "base": {
    "params": 1, 
    "__normal_iterator<unsigned_int_const*,std::vector<unsigned_int,std::allocator<unsigned_int>>> *": 1, 
    "int": 1, 
    "return": 1
  }
}